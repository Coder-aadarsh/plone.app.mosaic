{"version":3,"file":"chunks/99558.05db5609c499d315d04a.min.js","mappings":"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","sources":["webpack://plone-mosaic/./node_modules/@plone/mockup/src/pat/select2/select2.js","webpack://plone-mosaic/./node_modules/@plone/mockup/src/pat/relateditems/relateditems.js","webpack://plone-mosaic/./node_modules/@plone/mockup/src/pat/autotoc/autotoc.js","webpack://plone-mosaic/./node_modules/@plone/mockup/src/pat/tinymce/js/links.js","webpack://plone-mosaic/./node_modules/@plone/mockup/src/pat/upload/upload.js"],"sourcesContent":["import $ from \"jquery\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\nimport I18n from \"../../core/i18n\";\nimport utils from \"../../core/utils\";\n\nexport default Base.extend({\n    name: \"select2\",\n    trigger: \".pat-select2\",\n    parser: \"mockup\",\n    defaults: {\n        separator: \",\",\n    },\n    initializeValues: function () {\n        var self = this;\n        // Init Selection ---------------------------------------------\n        if (self.options.initialValues) {\n            self.options.id = function (term) {\n                return term.id;\n            };\n            self.options.initSelection = function ($el, callback) {\n                var data = [],\n                    value = $el.val(),\n                    seldefaults = self.options.initialValues;\n\n                // Create the initSelection value that contains the default selection,\n                // but in a javascript object\n                if (\n                    typeof self.options.initialValues === \"string\" &&\n                    self.options.initialValues !== \"\"\n                ) {\n                    // if default selection value starts with a '{', then treat the value as\n                    // a JSON object that needs to be parsed\n                    if (self.options.initialValues[0] === \"{\") {\n                        seldefaults = JSON.parse(self.options.initialValues);\n                    }\n                    // otherwise, treat the value as a list, separated by the defaults.separator value of\n                    // strings in the format \"id:text\", and convert it to an object\n                    else {\n                        seldefaults = {};\n                        $(self.options.initialValues.split(self.options.separator)).each(\n                            function () {\n                                var selection = this.split(\":\");\n                                var id = $.trim(selection[0]);\n                                var text = $.trim(selection[1]);\n                                seldefaults[id] = text;\n                            }\n                        );\n                    }\n                }\n\n                $(value.split(self.options.separator)).each(function () {\n                    var text = this;\n                    if (seldefaults[this]) {\n                        text = seldefaults[this];\n                    }\n                    data.push({\n                        id: utils.removeHTML(this),\n                        text: utils.removeHTML(text),\n                    });\n                });\n                callback(data);\n            };\n        }\n    },\n    initializeTags: function () {\n        var self = this;\n        if (self.options.tags && typeof self.options.tags === \"string\") {\n            if (self.options.tags.substr(0, 1) === \"[\") {\n                self.options.tags = JSON.parse(self.options.tags);\n            } else {\n                self.options.tags = self.options.tags.split(self.options.separator);\n            }\n        }\n\n        if (self.options.tags && !self.options.allowNewItems) {\n            self.options.data = $.map(self.options.tags, function (value, i) {\n                return { id: value, text: value };\n            });\n            self.options.multiple = true;\n            delete self.options.tags;\n        }\n    },\n    initializeOrdering: async function () {\n        if (!this.options.orderable) {\n            return;\n        }\n        const Sortable = (await import(\"sortablejs\")).default;\n        const _initializeOrdering = () => {\n            const sortable_el = this.$select2[0].querySelector(\".select2-choices\");\n            new Sortable(sortable_el, {\n                draggable: \"li\",\n                dragClass: \"select2-choice-dragging\",\n                chosenClass: \"dragging\",\n                onStart: () => this.$el.select2(\"onSortStart\"),\n                onEnd: () => this.$el.select2(\"onSortEnd\"),\n            });\n        };\n        this.$el.on(\"change\", _initializeOrdering.bind(this));\n        _initializeOrdering();\n    },\n    initializeSelect2: async function () {\n        import(\"select2/select2.css\");\n        import(\"./select2.scss\");\n        await import(\"select2\");\n        try {\n            await import(`select2/select2_locale_${this.options.language}`);\n        } catch {\n            console.warn(\"Language file could not be loaded\", this.options.language);\n        }\n\n        var self = this;\n        self.options.formatResultCssClass = function (ob) {\n            if (ob.id) {\n                return (\n                    \"select2-option-\" +\n                    ob.id.toLowerCase().replace(/[ \\:\\)\\(\\[\\]\\{\\}\\_\\+\\=\\&\\*\\%\\#]/g, \"-\")\n                );\n            }\n        };\n\n        function callback(action, e) {\n            if (action) {\n                if (self.options.debug) {\n                    console.debug(\"callback\", action, e);\n                }\n                if (typeof action === \"string\") {\n                    action = window[action];\n                }\n                return action(e);\n            } else {\n                return action;\n            }\n        }\n        $(self.el).select2(self.options);\n        self.$el.on(\"select2-selected\", function (e) {\n            callback(self.options.onSelected, e);\n        });\n        self.$el.on(\"select2-selecting\", function (e) {\n            callback(self.options.onSelecting, e);\n        });\n        self.$el.on(\"select2-deselecting\", function (e) {\n            callback(self.options.onDeselecting, e);\n        });\n        self.$el.on(\"select2-deselected\", function (e) {\n            callback(self.options.onDeselected, e);\n        });\n        self.$select2 = self.$el.parent().find(\".select2-container\");\n        self.$el.parent().off(\"close.plone-modal.patterns\");\n        if (self.options.orderable) {\n            self.$select2.addClass(\"select2-orderable\");\n        }\n    },\n    opened: function () {\n        var self = this;\n        var isOpen = $(\".select2-dropdown-open\", self.$el.parent()).length === 1;\n        return isOpen;\n    },\n    init: async function () {\n        var self = this;\n\n        var i18n = new I18n();\n        self.options.language = i18n.currentLanguage;\n        self.options.allowNewItems = self.options.hasOwnProperty(\"allowNewItems\")\n            ? JSON.parse(self.options.allowNewItems)\n            : true;\n\n        if (self.options.ajax || self.options.vocabularyUrl) {\n            if (self.options.vocabularyUrl) {\n                self.options.multiple =\n                    self.options.multiple === undefined ? true : self.options.multiple;\n                self.options.ajax = self.options.ajax || {};\n                self.options.ajax.url = self.options.vocabularyUrl;\n                // XXX removing the following function does'nt break tests. dead code?\n                self.options.initSelection = function ($el, callback) {\n                    var data = [],\n                        value = $el.val();\n                    $(value.split(self.options.separator)).each(function () {\n                        var val = utils.removeHTML(this);\n                        data.push({ id: val, text: val });\n                    });\n                    callback(data);\n                };\n            }\n\n            var queryTerm = \"\";\n            self.options.ajax = $.extend(\n                {\n                    quietMillis: 300,\n                    data: function (term, page) {\n                        queryTerm = term;\n                        return {\n                            query: term,\n                            page_limit: 10,\n                            page: page,\n                        };\n                    },\n                    results: function (data, page) {\n                        var results = data.results;\n                        if (self.options.vocabularyUrl) {\n                            var dataIds = [];\n                            $.each(data.results, function (i, item) {\n                                dataIds.push(item.id);\n                            });\n                            results = [];\n\n                            var haveResult =\n                                queryTerm === \"\" || $.inArray(queryTerm, dataIds) >= 0;\n                            if (self.options.allowNewItems && !haveResult) {\n                                queryTerm = utils.removeHTML(queryTerm);\n                                results.push({\n                                    id: queryTerm,\n                                    text: queryTerm,\n                                });\n                            }\n\n                            $.each(data.results, function (i, item) {\n                                results.push(item);\n                            });\n                        }\n                        return { results: results };\n                    },\n                },\n                self.options.ajax\n            );\n        } else if (self.options.multiple && self.$el.is(\"select\")) {\n            // Multiselects need to be converted to input[type=hidden]\n            // for Select2\n            var vals = self.$el.val() || [];\n            var options = $.map(self.$el.find(\"option\"), function (o) {\n                return { text: $(o).html(), id: o.value };\n            });\n            var $hidden = $('<input type=\"hidden\" />');\n            $hidden.val(vals.join(self.options.separator));\n            $hidden.attr(\"class\", self.$el.attr(\"class\"));\n            $hidden.attr(\"name\", self.$el.attr(\"name\"));\n            $hidden.attr(\"id\", self.$el.attr(\"id\"));\n            self.$orig = self.$el;\n            self.$el.replaceWith($hidden);\n            self.$el = $hidden;\n            self.options.data = options;\n        }\n\n        self.initializeValues();\n        self.initializeTags();\n        await self.initializeSelect2();\n        await self.initializeOrdering();\n    },\n});\n","import $ from \"jquery\";\nimport _ from \"underscore\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\nimport _t from \"../../core/i18n-wrapper\";\nimport utils from \"../../core/utils\";\nimport registry from \"@patternslib/patternslib/src/core/registry\";\nimport Select2 from \"../select2/select2\";\n\nconst KEY = {\n    LEFT: 37,\n    RIGHT: 39,\n};\n\nexport default Base.extend({\n    name: \"relateditems\",\n    trigger: \".pat-relateditems\",\n    parser: \"mockup\",\n    currentPath: undefined,\n    selectedUIDs: [],\n    openAfterInit: undefined,\n    defaults: {\n        // main option\n        vocabularyUrl: null, // must be set to work\n\n        // more options\n        attributes: [\n            \"UID\",\n            \"Title\",\n            \"portal_type\",\n            \"path\",\n            \"getURL\",\n            \"getIcon\",\n            \"is_folderish\",\n            \"review_state\",\n        ], // used by utils.QueryHelper\n        basePath: \"\",\n        pageSize: 10,\n        browsing: undefined,\n        closeOnSelect: true,\n        contextPath: undefined,\n        dropdownCssClass: \"pat-relateditems-dropdown\",\n        favorites: [],\n        recentlyUsed: false,\n        recentlyUsedMaxItems: 20,\n        recentlyUsedKey: \"relateditems_recentlyused\",\n        maximumSelectionSize: -1,\n        minimumInputLength: 0,\n        mode: \"browse\", // possible values are 'auto', 'search' and 'browse'.\n        orderable: true, // mockup-patterns-select2\n        pathOperator: \"plone.app.querystring.operation.string.path\",\n        rootPath: \"/\",\n        rootUrl: \"\", // default to be relative.\n        scanSelection: false, // False, to no unnecessarily use CPU time on this.\n        selectableTypes: null, // null means everything is selectable, otherwise a list of strings to match types that are selectable\n        separator: \",\",\n        sortOn: null,\n        sortOrder: \"ascending\",\n        tokenSeparators: [\",\", \" \"],\n        upload: false,\n        uploadAllowView: undefined,\n\n        // templates\n        breadcrumbTemplateSelector: null,\n        favoriteTemplateSelector: null,\n        recentlyusedTemplateSelector: null,\n        resultTemplateSelector: null,\n        selectionTemplateSelector: null,\n        toolbarTemplateSelector: null,\n\n        // needed\n        multiple: true,\n    },\n\n    recentlyUsed: function (filterSelectable) {\n        var ret = utils.storage.get(this.options.recentlyUsedKey) || [];\n        // hard-limit to 1000 entries\n        ret = ret.slice(ret.length - 1000, ret.length);\n        if (filterSelectable) {\n            // Filter out only selectable items.\n            // This is used only to create the list of items to be displayed.\n            // the list to be stored is unfiltered and can be reused among\n            // different instances of this widget with different settings.\n            ret.filter(this.isSelectable.bind(this));\n        }\n        // max is applied AFTER filtering selectable items.\n        var max = parseInt(this.options.recentlyUsedMaxItems, 10);\n        if (max) {\n            // return the slice from the end, as we want to display newest items first.\n            ret = ret.slice(ret.length - max, ret.length);\n        }\n        return ret;\n    },\n\n    applyTemplate: function (tpl, item) {\n        var self = this;\n        var template;\n        if (self.options[tpl + \"TemplateSelector\"]) {\n            template = $(self.options[tpl + \"TemplateSelector\"]).html();\n        }\n        if (!template) {\n            if (self.options[tpl + \"Template\"]) {\n                template = self.options[tpl + \"Template\"];\n            } else {\n                template = self[tpl + \"Template\"];\n            }\n        }\n        // let's give all the options possible to the template generation\n        var options = $.extend(true, {}, self.options, item, {\n            browsing: self.browsing,\n            open_folder: _t(\"Open folder\"),\n            current_directory: _t(\"current directory:\"),\n            one_level_up: _t(\"Go one level up\"),\n        });\n        options._item = item;\n        return _.template(template)(options);\n    },\n\n    setAjax: function () {\n        var ajax = {\n            url: this.options.vocabularyUrl,\n            dataType: \"JSON\",\n            quietMillis: 500,\n\n            data: function (term, page) {\n                var criterias = [];\n                if (term) {\n                    term = \"*\" + term + \"*\";\n                    criterias.push({\n                        i: \"SearchableText\",\n                        o: \"plone.app.querystring.operation.string.contains\",\n                        v: term,\n                    });\n                }\n\n                // We don't restrict for selectable types while browsing...\n                if (!this.browsing && this.options.selectableTypes) {\n                    criterias.push({\n                        i: \"portal_type\",\n                        o: \"plone.app.querystring.operation.selection.any\",\n                        v: this.options.selectableTypes,\n                    });\n                }\n\n                criterias.push({\n                    i: \"path\",\n                    o: this.options.pathOperator,\n                    v:\n                        this.options.rootPath +\n                        this.currentPath +\n                        (this.browsing ? \"::1\" : \"\"),\n                });\n\n                var sort_on = this.options.sortOn;\n                var sort_order = sort_on ? this.options.sortOrder : null;\n                if (this.browsing && sort_on === null) {\n                    sort_on = \"getObjPositionInParent\";\n                    sort_order = \"ascending\";\n                }\n\n                var data = {\n                    query: JSON.stringify({\n                        criteria: criterias,\n                        sort_on: sort_on,\n                        sort_order: sort_order,\n                    }),\n                    attributes: JSON.stringify(this.options.attributes),\n                    batch: JSON.stringify({\n                        page: page ? page : 1,\n                        size: this.options.pageSize,\n                    }),\n                };\n                return data;\n            }.bind(this),\n\n            results: function (data, page) {\n                var more = page * this.options.pageSize < data.total;\n                var results = data.results;\n\n                this.selectedUIDs = ($(this.el).select2(\"data\") || []).map(function (\n                    el\n                ) {\n                    // populate current selection. Reuse in formatResult\n                    return el.UID;\n                });\n\n                // Filter out items:\n                // While browsing: always include folderish items\n                // Browsing and searching: Only include selectable items which are not already selected, and all folders\n                // even if they're selected, as we need them available for browsing/selecting their children\n                results = results.filter(\n                    function (item) {\n                        if (\n                            (this.browsing && item.is_folderish) ||\n                            (this.isSelectable(item) &&\n                                this.selectedUIDs.indexOf(item.UID) === -1)\n                        ) {\n                            return true;\n                        }\n                        return false;\n                    }.bind(this)\n                );\n\n                // Extend ``data`` with a ``oneLevelUp`` item when browsing\n                var path = this.currentPath.split(\"/\");\n                if (\n                    page === 1 && // Show level up only on top.\n                    this.browsing && // only level up when browsing\n                    path.length > 1 && // do not try to level up one level under root.\n                    this.currentPath !== \"/\" // do not try to level up beyond root\n                ) {\n                    results = [\n                        {\n                            oneLevelUp: true,\n                            Title: _t(\"One level up\"),\n                            path: path.slice(0, path.length - 1).join(\"/\") || \"/\",\n                            currentPath: this.currentPath,\n                            is_folderish: true,\n                            selectable: false,\n                        },\n                    ].concat(results);\n                }\n                return {\n                    results: results,\n                    more: more,\n                };\n            }.bind(this),\n        };\n        this.options.ajax = ajax;\n    },\n\n    renderToolbar: async function () {\n        var self = this;\n        var path = self.currentPath;\n        var html;\n\n        var paths = path.split(\"/\");\n        var itemPath = \"\";\n        var itemsHtml = \"\";\n        _.each(paths, function (node) {\n            if (node !== \"\") {\n                var item = {};\n                item.path = itemPath = itemPath + \"/\" + node;\n                item.text = node;\n                itemsHtml = itemsHtml + self.applyTemplate(\"breadcrumb\", item);\n            }\n        });\n\n        // favorites\n        var favoritesHtml = \"\";\n        _.each(self.options.favorites, function (item) {\n            var item_copy = _.clone(item);\n            item_copy.path = item_copy.path.substr(self.options.rootPath.length) || \"/\";\n            favoritesHtml = favoritesHtml + self.applyTemplate(\"favorite\", item_copy);\n        });\n\n        var recentlyUsedHtml = \"\";\n        if (self.options.recentlyUsed) {\n            var recentlyUsed = self.recentlyUsed(true); // filter out only those items which can actually be selected\n            _.each(recentlyUsed.reverse(), function (item) {\n                // reverse to get newest first.\n                recentlyUsedHtml =\n                    recentlyUsedHtml + self.applyTemplate(\"recentlyused\", item);\n            });\n        }\n\n        html = self.applyTemplate(\"toolbar\", {\n            items: itemsHtml,\n            favItems: favoritesHtml,\n            favText: _t(\"Favorites\"),\n            searchText: _t(\"Current path:\"),\n            searchModeText: _t(\"Search\"),\n            browseModeText: _t(\"Browse\"),\n            recentlyUsedItems: recentlyUsedHtml,\n            recentlyUsedText: _t(\"Recently Used\"),\n            icon_root: await utils.resolveIcon(\"house-fill\"),\n            icon_recently_used: await utils.resolveIcon(\"grid-fill\"),\n            icon_favorites: await utils.resolveIcon(\"star-fill\"),\n            icon_upload: await utils.resolveIcon(\"cloud-arrow-up\"),\n            upload: this.options.upload,\n            upload_text: _t(\"Upload\"),\n        });\n\n        self.$toolbar.html(html);\n\n        // unbind mouseup event from select2 to override the behavior:\n        $(\".pat-relateditems-dropdown\").unbind(\"mouseup\");\n        $(\".pat-relateditems-dropdown\").bind(\"mouseup\", function (e) {\n            e.stopPropagation();\n        });\n\n        $(\"button.mode.search\", self.$toolbar).on(\"click\", function (e) {\n            e.preventDefault();\n            if (self.browsing) {\n                $(\"button.mode.search\", self.$toolbar).toggleClass(\n                    \"btn-primary btn-default\"\n                );\n                $(\"button.mode.browse\", self.$toolbar).toggleClass(\n                    \"btn-primary btn-default\"\n                );\n                self.browsing = false;\n                if ($(self.el).select2(\"data\").length > 0) {\n                    // Have to call after initialization\n                    self.openAfterInit = true;\n                }\n                if (!self.openAfterInit) {\n                    $(self.el).select2(\"close\");\n                    $(self.el).select2(\"open\");\n                }\n            } else {\n                // just open result list\n                $(self.el).select2(\"close\");\n                $(self.el).select2(\"open\");\n            }\n        });\n\n        $(\"button.mode.browse\", self.$toolbar).on(\"click\", function (e) {\n            e.preventDefault();\n            if (!self.browsing) {\n                $(\"button.mode.search\", self.$toolbar).toggleClass(\n                    \"btn-primary btn-default\"\n                );\n                $(\"button.mode.browse\", self.$toolbar).toggleClass(\n                    \"btn-primary btn-default\"\n                );\n                self.browsing = true;\n                if ($(self.el).select2(\"data\").length > 0) {\n                    // Have to call after initialization\n                    self.openAfterInit = true;\n                }\n                if (!self.openAfterInit) {\n                    $(self.el).select2(\"close\");\n                    $(self.el).select2(\"open\");\n                }\n            } else {\n                // just open result list\n                $(self.el).select2(\"close\");\n                $(self.el).select2(\"open\");\n            }\n        });\n\n        $(\"a.crumb\", self.$toolbar).on(\"click\", function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            self.browseTo($(this).attr(\"href\"));\n        });\n\n        $(\"a.fav\", self.$toolbar).on(\"click\", function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            self.browseTo($(this).attr(\"href\"));\n        });\n\n        if (self.options.recentlyUsed) {\n            $(\".pat-relateditems-recentlyused-select\", self.$toolbar).on(\n                \"click\",\n                function (event) {\n                    event.preventDefault();\n                    var uid = $(this).data(\"uid\");\n                    var item = self.recentlyUsed().filter(function (it) {\n                        return it.UID === uid;\n                    });\n                    if (item.length > 0) {\n                        item = item[0];\n                    } else {\n                        return;\n                    }\n                    self.selectItem(item);\n                    if (self.options.maximumSelectionSize > 0) {\n                        var items = $(self.el).select2(\"data\");\n                        if (items.length >= self.options.maximumSelectionSize) {\n                            return;\n                        }\n                    }\n                }\n            );\n        }\n\n        async function initUploadView(disabled) {\n            let Upload = await import(\"../upload/upload\");\n            Upload = Upload.default;\n\n            const upload_button = self.$toolbar[0].querySelector(\".upload button\");\n            upload_button.disabled = disabled;\n\n            const upload_el = self.$toolbar[0].querySelector(\".upload .pat-upload\");\n\n            const upload_config = {\n                success: (e, response) => {\n                    const uid = response.UID;\n                    if (uid) {\n                        const query = new utils.QueryHelper({\n                            vocabularyUrl: self.options.vocabularyUrl,\n                            attributes: self.options.attributes,\n                        });\n                        query.search(\n                            \"UID\",\n                            \"plone.app.querystring.operation.selection.is\",\n                            uid,\n                            (e) => {\n                                var data = self.$el.select2(\"data\");\n                                data.push.apply(data, e.results);\n                                self.$el.select2(\"data\", data, true);\n                                self.emit(\"selected\");\n                                self.popover.hide();\n                            },\n                            false\n                        );\n                    }\n                },\n                uloadMultiple: true,\n                allowPathSelection: false,\n                relativePath: \"fileUpload\",\n                baseUrl: self.options.rootUrl,\n            };\n            const upload = new Upload($(upload_el), upload_config);\n\n            upload_button.addEventListener(\"show.bs.dropdown\", () => {\n                if (self.currentPath !== upload.currentPath) {\n                    upload.setPath(self.currentPath);\n                }\n            });\n        }\n\n        // upload\n        if (\n            self.options.upload &&\n            utils.featureSupport.dragAndDrop() &&\n            utils.featureSupport.fileApi()\n        ) {\n            if (self.options.uploadAllowView) {\n                // Check, if uploads are allowed in current context\n                $.ajax({\n                    url: self.options.uploadAllowView,\n                    // url: self.currentUrl() + self.options.uploadAllowView,  // not working yet\n                    dataType: \"JSON\",\n                    data: {\n                        path: self.options.rootPath + self.currentPath,\n                    },\n                    type: \"GET\",\n                    success: function (result) {\n                        initUploadView(!result.allowUpload);\n                    },\n                });\n            } else {\n                // just initialize upload view without checking, if uploads are allowed.\n                initUploadView();\n            }\n        }\n    },\n\n    browseTo: function (path) {\n        var self = this;\n        self.emit(\"before-browse\");\n        self.currentPath = path;\n        $(self.el).select2(\"close\");\n        self.renderToolbar();\n        $(self.el).select2(\"open\");\n        self.emit(\"after-browse\");\n    },\n\n    selectItem: function (item) {\n        var self = this;\n        self.emit(\"selecting\");\n        var data = $(self.el).select2(\"data\");\n        data.push(item);\n        $(self.el).select2(\"data\", data, true);\n\n        if (self.options.recentlyUsed) {\n            // add to recently added items\n            var recentlyUsed = self.recentlyUsed(); // do not filter for selectable but get all. append to that list the new item.\n            var alreadyPresent = recentlyUsed.filter(function (it) {\n                return it.UID === item.UID;\n            });\n            if (alreadyPresent.length > 0) {\n                recentlyUsed.splice(recentlyUsed.indexOf(alreadyPresent[0]), 1);\n            }\n            recentlyUsed.push(item);\n            utils.storage.set(self.options.recentlyUsedKey, recentlyUsed);\n        }\n\n        self.emit(\"selected\");\n    },\n\n    deselectItem: function (item) {\n        var self = this;\n        self.emit(\"deselecting\");\n        var data = $(self.el).select2(\"data\");\n        _.each(data, function (obj, i) {\n            if (obj.UID === item.UID) {\n                data.splice(i, 1);\n            }\n        });\n        $(self.el).select2(\"data\", data, true);\n        self.emit(\"deselected\");\n    },\n\n    isSelectable: function (item) {\n        var self = this;\n        if (item.selectable === false) {\n            return false;\n        }\n        if (self.options.selectableTypes === null) {\n            return true;\n        } else {\n            return self.options.selectableTypes.indexOf(item.portal_type) !== -1;\n        }\n    },\n\n    init: async function () {\n        (await import(\"bootstrap\")).Dropdown;\n        import(\"./relateditems.scss\");\n\n        // templates\n        this.breadcrumbTemplate = (await import(\"./templates/breadcrumb.xml\")).default; // prettier-ignore\n        this.favoriteTemplate = (await import(\"./templates/favorite.xml\")).default; // prettier-ignore\n        this.recentlyusedTemplate = (await import(\"./templates/recentlyused.xml\")).default; // prettier-ignore\n        this.resultTemplate = (await import(\"./templates/result.xml\")).default; // prettier-ignore\n        this.selectionTemplate = (await import(\"./templates/selection.xml\")).default; // prettier-ignore\n        this.toolbarTemplate = (await import(\"./templates/toolbar.xml\")).default; // prettier-ignore\n\n        var self = this;\n\n        self.browsing = self.options.mode !== \"search\";\n\n        // Remove trailing slash\n        self.options.rootPath = self.options.rootPath.replace(/\\/$/, \"\");\n        // Substract rootPath from basePath with is the relative currentPath. Has a leading slash. Or use '/'\n        self.currentPath =\n            self.options.basePath.substr(self.options.rootPath.length) || \"/\";\n\n        self.setAjax();\n\n        self.$el.wrap('<div class=\"pat-relateditems-container\" />');\n        self.$container = self.$el.parents(\".pat-relateditems-container\");\n\n        Select2.prototype.initializeValues.call(self);\n        Select2.prototype.initializeTags.call(self);\n\n        self.options.formatSelection = function (item) {\n            item = $.extend(\n                true,\n                {\n                    Title: \"\",\n                    getIcon: \"\",\n                    getURL: \"\",\n                    path: \"\",\n                    portal_type: \"\",\n                    review_state: \"\",\n                },\n                item\n            );\n\n            // activate petterns on the result set.\n            var $selection = $(self.applyTemplate(\"selection\", item));\n            if (self.options.scanSelection) {\n                registry.scan($selection);\n            }\n            if (self.options.maximumSelectionSize == 1) {\n                // If this related field accepts only 1 item, the breadcrumbs should\n                // reflect the location for this particular item\n                var itemPath = item.path;\n                var path_split = itemPath.split(\"/\");\n                path_split = path_split.slice(0, -1); // Remove last part of path, we always want the parent path\n                itemPath = path_split.join(\"/\");\n                self.currentPath = itemPath;\n                self.renderToolbar();\n            }\n            return $selection;\n        };\n\n        const icon_level_up = await utils.resolveIcon(\"arrow-left-circle\");\n        const icon_level_down = await utils.resolveIcon(\"arrow-right-circle\");\n\n        self.options.formatResult = function (item) {\n            item.selectable = self.isSelectable(item);\n            item = $.extend(\n                true,\n                {\n                    Title: \"\",\n                    getIcon: \"\",\n                    getURL: \"\",\n                    is_folderish: false,\n                    oneLevelUp: false,\n                    iconLevelUp: icon_level_up,\n                    iconLevelDown: icon_level_down,\n                    path: \"\",\n                    portal_type: \"\",\n                    review_state: \"\",\n                    selectable: false,\n                },\n                item\n            );\n\n            if (self.selectedUIDs.indexOf(item.UID) !== -1) {\n                // do not allow already selected items to be selected again.\n                item.selectable = false;\n            }\n            var result = $(self.applyTemplate(\"result\", item));\n\n            $(\".pat-relateditems-result-select\", result).on(\"click\", function (event) {\n                event.preventDefault();\n                // event.stopPropagation();\n                if ($(this).is(\".selectable\")) {\n                    var $parent = $(this).parents(\".pat-relateditems-result\");\n                    if ($parent.is(\".pat-relateditems-active\")) {\n                        $parent.removeClass(\"pat-relateditems-active\");\n                        self.deselectItem(item);\n                    } else {\n                        if (self.options.maximumSelectionSize > 0) {\n                            var items = $(self.el).select2(\"data\");\n                            if (items.length >= self.options.maximumSelectionSize) {\n                                $(self.el).select2(\"close\");\n                            }\n                        }\n                        self.selectItem(item);\n                        $parent.addClass(\"pat-relateditems-active\");\n                        if (self.options.closeOnSelect) {\n                            $(self.el).select2(\"close\");\n                        }\n                    }\n                }\n            });\n\n            $(\".pat-relateditems-result-browse\", result).on(\"click\", function (event) {\n                event.preventDefault();\n                event.stopPropagation();\n                var path = $(this).data(\"path\");\n                self.browseTo(path);\n            });\n\n            return $(result);\n        };\n\n        self.options.initSelection = function (element, callback) {\n            var value = $(element).val();\n            if (value !== \"\") {\n                var ids = value.split(self.options.separator);\n                var query = new utils.QueryHelper(\n                    $.extend(true, {}, self.options, {\n                        pattern: self,\n                    })\n                );\n                query.search(\n                    \"UID\",\n                    \"plone.app.querystring.operation.list.contains\",\n                    ids,\n                    function (data) {\n                        var results = data.results.reduce(function (prev, item) {\n                            prev[item.UID] = item;\n                            return prev;\n                        }, {});\n\n                        try {\n                            callback(\n                                ids\n                                    .map(function (uid) {\n                                        return results[uid];\n                                    })\n                                    .filter(function (item) {\n                                        return item !== undefined;\n                                    })\n                            );\n                        } catch (e) {\n                            // Select2 3.5.4 throws an error in some cases in\n                            // updateSelection, ``this.selection.find(\".select2-search-choice\").remove();``\n                            // No idea why, hard to track.\n                        }\n\n                        if (self.openAfterInit) {\n                            // open after initialization\n                            $(self.el).select2(\"open\");\n                            self.openAfterInit = undefined;\n                        }\n                    },\n                    false\n                );\n            }\n        };\n\n        self.options.tokenizer = function (input) {\n            if (this.options.mode === \"auto\") {\n                this.browsing = input ? false : true;\n            }\n        }.bind(this);\n\n        self.options.id = function (item) {\n            return item.UID;\n        };\n\n        await Select2.prototype.initializeSelect2.call(self);\n        await Select2.prototype.initializeOrdering.call(self);\n\n        self.$toolbar = $('<div class=\"toolbar d-flex\" />');\n        self.$container.prepend(self.$toolbar);\n        self.$el.on(\"select2-selecting\", function (event) {\n            if (!self.isSelectable(event.choice)) {\n                event.preventDefault();\n            }\n        });\n        self.renderToolbar();\n        self.$el.on(\"select2-loaded\", function(event){\n            let yMax = window.innerHeight || document.documentElement.clientHeight;\n            const element = $(\".pat-relateditems-dropdown.select2-drop-active .select2-results\")[0]\n            const rect = element.getBoundingClientRect();\n            const maxHeight = yMax - rect.top -18;\n            $(element).css(\"max-height\", `${maxHeight}px`);\n        });\n\n        $(document).on(\"keyup\", self.$el, function (event) {\n            var isOpen = Select2.prototype.opened.call(self);\n            if (!isOpen) {\n                return;\n            }\n\n            if (event.which === KEY.LEFT || event.which === KEY.RIGHT) {\n                event.stopPropagation();\n\n                var selectorContext =\n                    event.which === KEY.LEFT\n                        ? \".pat-relateditems-result.one-level-up\"\n                        : \".select2-highlighted\";\n\n                var browsableItemSelector = \".pat-relateditems-result-browse\";\n                var browsableItem = $(browsableItemSelector, selectorContext);\n\n                if (browsableItem.length !== 1) {\n                    return;\n                }\n\n                var path = browsableItem.data(\"path\");\n\n                self.browseTo(path);\n            }\n        });\n    },\n});\n","import $ from \"jquery\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\n\nexport default Base.extend({\n    name: \"autotoc\",\n    trigger: \".pat-autotoc\",\n    parser: \"mockup\",\n    defaults: {\n        section: \"section\",\n        levels: \"h1,h2,h3\",\n        IDPrefix: \"autotoc-item-\",\n        classTOCName: \"autotoc-nav\",\n        classSectionName: \"autotoc-section\",\n        classLevelPrefixName: \"autotoc-level-\",\n        classActiveName: \"active\",\n        scrollDuration: \"slow\",\n        scrollEasing: \"swing\",\n    },\n    init: function () {\n        import(\"./autotoc.scss\");\n\n        var self = this;\n\n        self.$toc = $(\"<nav/>\").addClass(self.options.classTOCName);\n\n        if (self.options.prependTo) {\n            self.$toc.prependTo(self.options.prependTo);\n        } else if (self.options.appendTo) {\n            self.$toc.appendTo(self.options.appendTo);\n        } else {\n            self.$toc.prependTo(self.$el);\n        }\n\n        if (self.options.className) {\n            self.$el.addClass(self.options.className);\n        }\n\n        $(self.options.section, self.$el).addClass(self.options.classSectionName);\n\n        var asTabs = self.$el.hasClass(\"autotabs\");\n\n        var activeId = null;\n\n        $(self.options.levels, self.$el).each(function (i) {\n            var $level = $(this),\n                id = $level.prop(\"id\")\n                    ? $level.prop(\"id\")\n                    : $level.parents(self.options.section).prop(\"id\");\n            if (!id || $(\"#\" + id).length > 0) {\n                id = self.options.IDPrefix + self.name + \"-\" + i;\n            }\n            if (window.location.hash === \"#\" + id) {\n                activeId = id;\n            }\n            if (activeId === null && $level.hasClass(self.options.classActiveName)) {\n                activeId = id;\n            }\n            $level.data(\"navref\", id);\n            $(\"<a/>\")\n                .appendTo(self.$toc)\n                .text($level.text())\n                .attr(\"id\", id)\n                .attr(\"href\", \"#\" + id)\n                .addClass(self.options.classLevelPrefixName + self.getLevel($level))\n                .on(\"click\", function (e, options) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    if (!options) {\n                        options = {\n                            doScroll: true,\n                            skipHash: false,\n                        };\n                    }\n                    var $el = $(this);\n                    self.$toc\n                        .children(\".\" + self.options.classActiveName)\n                        .removeClass(self.options.classActiveName);\n                    self.$el\n                        .children(\".\" + self.options.classActiveName)\n                        .removeClass(self.options.classActiveName);\n                    $(e.target).addClass(self.options.classActiveName);\n                    $level\n                        .parents(self.options.section)\n                        .addClass(self.options.classActiveName);\n                    if (\n                        options.doScroll !== false &&\n                        self.options.scrollDuration &&\n                        $level &&\n                        !asTabs\n                    ) {\n                        $(\"body,html\").animate(\n                            {\n                                scrollTop: $level.offset().top,\n                            },\n                            self.options.scrollDuration,\n                            self.options.scrollEasing\n                        );\n                    }\n                    if (self.$el.parents(\".plone-modal\").length !== 0) {\n                        self.$el.trigger(\"resize.plone-modal.patterns\");\n                    }\n                    $(this).trigger(\"clicked\");\n                    if (!options.skipHash) {\n                        if (window.history && window.history.pushState) {\n                            window.history.pushState({}, \"\", \"#\" + $el.attr(\"id\"));\n                        }\n                    }\n                });\n            $level.data(\"autotoc-trigger-id\", id);\n        });\n\n        if (activeId) {\n            $(\"a#\" + activeId).trigger(\"click\", {\n                doScroll: true,\n                skipHash: true,\n            });\n        } else {\n            self.$toc.find(\"a\").first().trigger(\"click\", {\n                doScroll: false,\n                skipHash: true,\n            });\n        }\n    },\n    getLevel: function ($el) {\n        var elementLevel = 0;\n        $.each(this.options.levels.split(\",\"), function (level, levelSelector) {\n            if ($el.filter(levelSelector).length === 1) {\n                elementLevel = level + 1;\n                return false;\n            }\n        });\n        return elementLevel;\n    },\n});\n","import $ from \"jquery\";\nimport _ from \"underscore\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\nimport registry from \"@patternslib/patternslib/src/core/registry\";\n\nimport tinymce from \"tinymce/tinymce\";\nimport LinkTemplate from \"../templates/link.xml\";\nimport ImageTemplate from \"../templates/image.xml\";\nimport RelatedItems from \"../../relateditems/relateditems\";\nimport \"../../autotoc/autotoc\";\nimport \"../../modal/modal\";\nimport PatternUpload from \"../../upload/upload\";\n\nvar LinkType = Base.extend({\n    name: \"linktype\",\n    trigger: \".pat-linktype-dummy\",\n    defaults: {\n        linkModal: null, // required\n    },\n\n    init: function () {\n        this.linkModal = this.options.linkModal;\n        this.tinypattern = this.options.tinypattern;\n        this.tiny = this.tinypattern.tiny;\n        this.dom = this.tiny.dom;\n    },\n\n    getEl: function () {\n        return this.$el.find(\"input\");\n    },\n\n    value: function () {\n        return $.trim(this.getEl().val());\n    },\n\n    toUrl: function () {\n        return this.value();\n    },\n\n    load: function (element) {\n        let val = this.tiny.dom.getAttrib(element, \"data-val\");\n        this.getEl().attr(\"value\", val);\n    },\n\n    set: function (val) {\n        var $el = this.getEl();\n        $el.attr(\"value\", val);\n        $el.val(val);\n    },\n\n    attributes: function () {\n        return {\n            \"data-val\": this.value(),\n        };\n    },\n    updateRelatedItems: function () {},\n});\n\nvar ExternalLink = LinkType.extend({\n    name: \"externallinktype\",\n    trigger: \".pat-externallinktype-dummy\",\n    init: function () {\n        LinkType.prototype.init.call(this);\n        this.getEl().on(\"change\", function () {\n            // check here if we should automatically add in http:// to url\n            var val = $(this).val();\n            if (new RegExp(\"https?://\").test(val)) {\n                // already valid url\n                return;\n            }\n            var domain = $(this).val().split(\"/\")[0];\n            if (domain.indexOf(\".\") !== -1) {\n                $(this).val(\"http://\" + val);\n            }\n        });\n    },\n});\n\nvar InternalLink = LinkType.extend({\n    name: \"internallinktype\",\n    trigger: \".pat-internallinktype-dummy\",\n    init: function () {\n        if (!this.getEl().length) {\n            return;\n        }\n        LinkType.prototype.init.call(this);\n        this.getEl().addClass(\"pat-relateditems\");\n        this.createRelatedItems();\n    },\n\n    getEl: function () {\n        return this.$el.find(\"input:not(.select2-input)\");\n    },\n\n    createRelatedItems: function () {\n        if (!this.getEl().length) {\n            return;\n        }\n        var options = this.linkModal.options.relatedItems;\n        options.upload = false; // ensure that related items upload is off.\n        this.relatedItems = new RelatedItems(this.getEl(), options);\n    },\n\n    updateRelatedItems: function (val) {\n        if (!this.relatedItems) {\n            // prevent toolbar from being rendered twice\n            this.createRelatedItems();\n        }\n        this.relatedItems.selectItem(val);\n    },\n\n    value: function () {\n        var val = this.getEl().select2(\"data\");\n        if (val && typeof val === \"object\") {\n            val = val[0];\n        }\n        return val;\n    },\n\n    toUrl: function () {\n        var value = this.value();\n        if (value) {\n            return this.tinypattern.generateUrl(value);\n        }\n        return null;\n    },\n    load: function (element) {\n        var val = this.tiny.dom.getAttrib(element, \"data-val\");\n        if (val) {\n            this.set(val);\n        }\n    },\n\n    set: function (val) {\n        var $el = this.getEl();\n        $el.val(val).trigger(\"change\");\n        this.updateRelatedItems(val);\n    },\n\n    attributes: function () {\n        var val = this.value();\n        if (val) {\n            return {\n                \"data-val\": val.UID,\n            };\n        }\n        return {};\n    },\n});\n\nvar UploadLink = LinkType.extend({\n    name: \"uploadlinktype\",\n    trigger: \".pat-uploadlinktype-dummy\",\n    /* need to do it a bit differently here.\n       when a user uploads and tries to upload from\n       it, you need to delegate to the real insert\n       linke types */\n    getDelegatedLinkType: function () {\n        if (this.linkModal.linkType === \"uploadImage\") {\n            return this.linkModal.linkTypes.image;\n        } else {\n            return this.linkModal.linkTypes.internal;\n        }\n    },\n    toUrl: function () {\n        return this.getDelegatedLinkType().toUrl();\n    },\n    attributes: function () {\n        return this.getDelegatedLinkType().attributes();\n    },\n    set: function (val) {\n        return this.getDelegatedLinkType().set(val);\n    },\n    load: function (element) {\n        return this.getDelegatedLinkType().load(element);\n    },\n    value: function () {\n        return this.getDelegatedLinkType().value();\n    },\n});\n\nvar ImageLink = InternalLink.extend({\n    name: \"imagelinktype\",\n    trigger: \".pat-imagelinktype-dummy\",\n    toUrl: function () {\n        var value = this.value();\n        return this.tinypattern.generateImageUrl(\n            value,\n            this.linkModal.getScaleFromSrcset(this.linkModal.$scale.val())\n        );\n    },\n});\n\nvar EmailLink = LinkType.extend({\n    name: \"emaillinktype\",\n    trigger: \".pat-emaillinktype-dummy\",\n    toUrl: function () {\n        var self = this;\n        var val = self.value();\n        if (val) {\n            var subject = self.getSubject();\n            var href = \"mailto:\" + val;\n            if (subject) {\n                href += \"?subject=\" + subject;\n            }\n            return href;\n        }\n        return null;\n    },\n\n    load: function (element) {\n        LinkType.prototype.load.apply(this, [element]);\n        this.linkModal.$subject.val(this.tiny.dom.getAttrib(element, \"data-subject\"));\n    },\n\n    getSubject: function () {\n        return this.linkModal.$subject.val();\n    },\n\n    attributes: function () {\n        var attribs = LinkType.prototype.attributes.call(this);\n        attribs[\"data-subject\"] = this.getSubject();\n        return attribs;\n    },\n});\n\nvar AnchorLink = LinkType.extend({\n    name: \"anchorlinktype\",\n    trigger: \".pat-anchorlinktype-dummy\",\n    init: function () {\n        LinkType.prototype.init.call(this);\n        this.$select = this.$el.find(\"select\");\n        this.anchorNodes = [];\n        this.anchorData = [];\n        this.populate();\n    },\n\n    value: function () {\n        var val = this.$select.select2(\"data\");\n        if (val && typeof val === \"object\") {\n            val = val.id;\n        }\n        return val;\n    },\n\n    populate: function () {\n        var self = this;\n        self.$select.find(\"option\").remove();\n        self.anchorNodes = [];\n        self.anchorData = [];\n        var node, i, j, name, title;\n\n        var nodes = self.tiny.dom.select(\".mceItemAnchor,.mce-item-anchor\");\n        for (i = 0; i < nodes.length; i = i + 1) {\n            node = nodes[i];\n            name = self.tiny.dom.getAttrib(node, \"name\");\n            if (!name) {\n                name = self.tiny.dom.getAttrib(node, \"id\");\n            }\n            if (name !== \"\") {\n                self.anchorNodes.push(node);\n                self.anchorData.push({ name: name, title: name });\n            }\n        }\n\n        nodes = self.tiny.dom.select(self.linkModal.options.anchorSelector);\n        if (nodes.length > 0) {\n            for (i = 0; i < nodes.length; i = i + 1) {\n                node = nodes[i];\n                title = $(node)\n                    .text()\n                    .replace(/^\\s+|\\s+$/g, \"\");\n                if (title === \"\") {\n                    continue;\n                }\n                name = title.toLowerCase().substring(0, 1024);\n                name = name.replace(/[^a-z0-9]/g, \"-\");\n                /* okay, ugly, but we need to first check that this anchor isn't already available */\n                var found = false;\n                for (j = 0; j < self.anchorNodes.length; j = j + 1) {\n                    var anode = self.anchorData[j];\n                    if (anode.name === name) {\n                        found = true;\n                        // so it's also found, let's update the title to be more presentable\n                        anode.title = title;\n                        break;\n                    }\n                }\n                if (!found) {\n                    self.anchorData.push({\n                        name: name,\n                        title: title,\n                        newAnchor: true,\n                    });\n                    self.anchorNodes.push(node);\n                }\n            }\n        }\n        if (self.anchorNodes.length > 0) {\n            for (i = 0; i < self.anchorData.length; i = i + 1) {\n                var data = self.anchorData[i];\n                self.$select.append(\n                    '<option value=\"' + i + '\">' + data.title + \"</option>\"\n                );\n            }\n        } else {\n            self.$select.append(\"<option>No anchors found..</option>\");\n        }\n    },\n\n    getIndex: function (name) {\n        for (var i = 0; i < this.anchorData.length; i = i + 1) {\n            var data = this.anchorData[i];\n            if (data.name === name) {\n                return i;\n            }\n        }\n        return 0;\n    },\n\n    toUrl: function () {\n        var val = this.value();\n        if (val) {\n            var index = parseInt(val, 10);\n            var node = this.anchorNodes[index];\n            var data = this.anchorData[index];\n            if (data.newAnchor) {\n                node.innerHTML =\n                    '<a name=\"' +\n                    data.name +\n                    '\" class=\"mce-item-anchor\"></a>' +\n                    node.innerHTML;\n            }\n            return \"#\" + data.name;\n        }\n        return null;\n    },\n\n    set: function (val) {\n        var anchor = this.getIndex(val);\n        this.$select.select2(\"data\", \"\" + anchor);\n    },\n});\n\ntinymce.PluginManager.add(\"ploneimage\", function (editor) {\n    editor.ui.registry.addButton(\"ploneimage\", {\n        icon: \"image\",\n        text: \"Insert image\",\n        tooltip: \"Insert/edit image\",\n        onAction: editor.settings.addImageClicked,\n        // stateSelector: \"img:not([data-mce-object])\",\n    });\n});\n\n/* register the tinymce plugin */\ntinymce.PluginManager.add(\"plonelink\", function (editor) {\n    editor.ui.registry.addButton(\"plonelink\", {\n        icon: \"link\",\n        tooltip: \"Insert/edit link\",\n        shortcut: \"Ctrl+K\",\n        onAction: editor.settings.addLinkClicked,\n        stateSelector: \"a[href]\",\n    });\n\n    editor.ui.registry.addButton(\"unlink\", {\n        icon: \"unlink\",\n        tooltip: \"Remove link\",\n        onAction: function () {\n            editor.execCommand(\"unlink\");\n        },\n        stateSelector: \"a[href]\",\n    });\n\n    // editor.ui.registry.addButton(\"Ctrl+K\", \"\", editor.settings.addLinkClicked);\n\n    // editor.ui.registry.addButton(\"plonelink\", {\n    //     icon: \"link\",\n    //     text: \"Insert link\",\n    //     shortcut: \"Ctrl+K\",\n    //     onAction: editor.settings.addLinkClicked,\n    //     stateSelector: \"a[href]\",\n    //     context: \"insert\",\n    //     prependToContext: true,\n    // });\n});\n\nexport default Base.extend({\n    name: \"linkmodal\",\n    trigger: \".pat-linkmodal\",\n    defaults: {\n        anchorSelector: \"h1,h2,h3\",\n        linkTypes: [\n            /* available, none activate by default because these options\n         * only get merged, not set.\n        'internal',\n        'upload',\n        'external',\n        'email',\n        'anchor',\n        'image'\n        'externalImage'*/\n        ],\n        initialLinkType: \"internal\",\n        text: {\n            insertHeading: \"Insert Link\",\n        },\n        linkTypeClassMapping: {\n            internal: InternalLink,\n            upload: UploadLink,\n            external: ExternalLink,\n            email: EmailLink,\n            anchor: AnchorLink,\n            image: ImageLink,\n            uploadImage: UploadLink,\n            externalImage: LinkType,\n        },\n    },\n    // XXX: this is a temporary work around for having separated templates.\n    // Image modal is going to have its own modal class, funcs and template.\n    linkTypeTemplateMapping: {\n        internal: LinkTemplate,\n        upload: LinkTemplate,\n        external: LinkTemplate,\n        email: LinkTemplate,\n        anchor: LinkTemplate,\n        image: ImageTemplate,\n        uploadImage: ImageTemplate,\n        externalImage: ImageTemplate,\n    },\n\n    template: function (data) {\n        return _.template(this.linkTypeTemplateMapping[this.linkType])(data);\n    },\n\n    init: function () {\n        var self = this;\n        self.tinypattern = self.options.tinypattern;\n        if (self.tinypattern.options.anchorSelector) {\n            self.options.anchorSelector = self.tinypattern.options.anchorSelector;\n        }\n        self.tiny = self.tinypattern.tiny;\n        self.dom = self.tiny.dom;\n        self.linkType = self.options.initialLinkType;\n        self.linkTypes = {};\n        self.modal = registry.patterns[\"plone-modal\"].init(self.$el, {\n            html: self.generateModalHtml(),\n            content: null,\n            buttons: \".plone-btn\",\n            reloadWindowOnClose: false,\n            templateOptions: {\n                classDialog: \"modal-dialog modal-lg\",\n                reloadWindowOnClose: false,\n            },\n            actionOptions: { reloadWindowOnClose: false },\n            backdropOptions: {\n                zIndex: \"1340\",\n                closeOnClick: false\n            },\n        });\n        self.modal.on(\"shown\", (e) => {\n            self.modalShown.apply(self, [e]);\n        });\n    },\n\n    isOnlyTextSelected: function () {\n        /* pulled from TinyMCE link plugin */\n        var html = this.tiny.selection.getContent();\n\n        // Partial html and not a fully selected anchor element\n        if (\n            /</.test(html) &&\n            (!/^<a [^>]+>[^<]+<\\/a>$/.test(html) || html.indexOf(\"href=\") === -1)\n        ) {\n            return false;\n        }\n\n        if (this.anchorElm) {\n            var nodes = this.anchorElm.childNodes,\n                i;\n\n            if (nodes.length === 0) {\n                return false;\n            }\n\n            for (var ii = nodes.length - 1; ii >= 0; ii--) {\n                if (nodes[ii].nodeType !== 3) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    },\n\n    generateModalHtml: function () {\n        return this.template({\n            options: this.options,\n            upload: this.options.upload,\n            text: this.options.text,\n            insertHeading: this.options.text.insertHeading,\n            insertImageHelp: this.options.text.insertImageHelp,\n            uploadText: this.options.text.upload,\n            insertLinkHelp: this.options.text.insertLinkHelp,\n            internal: this.options.text.internal,\n            external: this.options.text.external,\n            anchor: this.options.text.anchor,\n            anchorLabel: this.options.text.anchorLabel,\n            target: this.options.text.target,\n            linkTypes: this.options.linkTypes,\n            externalText: this.options.text.externalText,\n            emailText: this.options.text.email,\n            subjectText: this.options.text.subject,\n            targetList: this.options.targetList,\n            titleText: this.options.text.title,\n            internalImageText: this.options.text.internalImage,\n            externalImage: this.options.text.externalImage,\n            externalImageText: this.options.text.externalImageText,\n            altText: this.options.text.alt,\n            imageAlignText: this.options.text.imageAlign,\n            captionFromDescriptionText: this.options.text.captionFromDescription,\n            enableImageZoom: this.options.text.enableImageZoom,\n            captionText: this.options.text.caption,\n            scaleText: this.options.text.scale,\n            pictureVariants: this.options.pictureVariants,\n            imageCaptioningEnabled: this.options.imageCaptioningEnabled,\n            cancelBtn: this.options.text.cancelBtn,\n            insertBtn: this.options.text.insertBtn,\n        });\n    },\n\n    isImageMode: function () {\n        return [\"image\", \"uploadImage\", \"externalImage\"].indexOf(this.linkType) !== -1;\n    },\n\n    initElements: function () {\n        var self = this;\n        self.$target = $('select[name=\"target\"]', self.modal.$modal);\n        self.$button = $('.modal-footer input[name=\"insert\"]', self.modal.$modal);\n        self.$title = $('input[name=\"title\"]', self.modal.$modal);\n        self.$subject = $('input[name=\"subject\"]', self.modal.$modal);\n\n        self.$alt = $('input[name=\"alt\"]', self.modal.$modal);\n        self.$align = $('select[name=\"align\"]', self.modal.$modal);\n        self.$scale = $('select[name=\"scale\"]', self.modal.$modal);\n        self.$enableImageZoom = $('input[name=\"enableImageZoom\"]', self.modal.$modal);\n        self.$captionFromDescription = $(\n            'input[name=\"captionFromDescription\"]',\n            self.modal.$modal\n        );\n        self.$caption = $('textarea[name=\"caption\"]', self.modal.$modal);\n\n        /* load up all the link types */\n        _.each(self.options.linkTypes, function (type) {\n            var $container = $(\".linkType.\" + type + \" .main\", self.modal.$modal);\n            if ($container.length) {\n                self.linkTypes[type] = new self.options.linkTypeClassMapping[type](\n                    $container,\n                    {\n                        linkModal: self,\n                        tinypattern: self.tinypattern,\n                    }\n                );\n            }\n        });\n\n        $(\".autotoc-nav a\", self.modal.$modal).click(function () {\n            var $fieldset = $(\"fieldset.linkType\", self.modal.$modal).eq(\n                $(this).index()\n            );\n            var classes = $fieldset[0].className.split(/\\s+/);\n            _.each(classes, function (val) {\n                if (_.indexOf(self.options.linkTypes, val) !== -1) {\n                    self.linkType = val;\n                }\n            });\n        });\n\n        self.$captionFromDescription.change(function () {\n            if (this.checked) {\n                self.$caption.prop(\"disabled\", true);\n            } else {\n                self.$caption.prop(\"disabled\", false);\n            }\n        });\n    },\n\n    getLinkUrl: function () {\n        // get the url, only get one uid\n        return this.linkTypes[this.linkType].toUrl();\n    },\n\n    getValue: function () {\n        return this.linkTypes[this.linkType].value();\n    },\n\n    updateAnchor: function (href) {\n        var self = this;\n\n        self.tiny.focus();\n        self.tiny.selection.setRng(self.rng);\n\n        var target = self.$target.val();\n        var title = self.$title.val();\n        var linkAttrs = $.extend(\n            true,\n            self.data,\n            {\n                \"title\": title ? title : null,\n                \"target\": target ? target : null,\n                \"data-linkType\": self.linkType,\n                \"href\": href,\n            },\n            self.linkTypes[self.linkType].attributes()\n        );\n        if (self.anchorElm) {\n            if (self.onlyText && linkAttrs.text !== self.initialText) {\n                if (\"innerText\" in self.anchorElm) {\n                    self.anchorElm.innerText = self.data.text;\n                } else {\n                    self.anchorElm.textContent = self.data.text;\n                }\n            }\n\n            self.tiny.dom.setAttribs(self.anchorElm, linkAttrs);\n\n            self.tiny.selection.select(self.anchorElm);\n            self.tiny.undoManager.add();\n        } else {\n            if (self.onlyText) {\n                self.tiny.insertContent(\n                    self.tiny.dom.createHTML(\n                        \"a\",\n                        linkAttrs,\n                        self.tiny.dom.encode(self.data.text)\n                    )\n                );\n            } else {\n                self.tiny.execCommand(\"mceInsertLink\", false, linkAttrs);\n            }\n        }\n    },\n\n    focusElement: function (elm) {\n        this.tiny.focus();\n        this.tiny.selection.select(elm);\n        this.tiny.nodeChanged();\n    },\n\n    getScaleFromSrcset: function (pictureVariant) {\n        let pictureVariantsConfig = this.options.pictureVariants[pictureVariant];\n        return pictureVariantsConfig.sourceset[\n            pictureVariantsConfig.sourceset.length - 1\n        ].scale;\n    },\n\n    updateImage: function (src) {\n        var self = this;\n        var title = self.$title.val();\n        var captionFromDescription = self.$captionFromDescription.prop(\"checked\");\n        var enableImageZoom = self.$enableImageZoom.prop(\"checked\");\n        var caption = self.$caption.val();\n\n        self.tiny.focus();\n        self.tiny.selection.setRng(self.rng);\n        var cssclasses = [\n            \"image-richtext\",\n            self.$align.val(),\n            \"picture-variant-\" + self.$scale.val(),\n        ];\n        if (captionFromDescription || caption) {\n            cssclasses.push(\"captioned\");\n        }\n        if (enableImageZoom) {\n            cssclasses.push(\"zoomable\");\n        }\n        var data = $.extend(\n            true,\n            {},\n            {\n                \"src\": src,\n                \"title\": title ? title : null,\n                \"alt\": self.$alt.val(),\n                \"class\": cssclasses.join(\" \"),\n                \"data-linkType\": self.linkType,\n                \"data-picturevariant\": self.$scale.val(),\n                \"data-scale\": self.getScaleFromSrcset(self.$scale.val()),\n            },\n            self.linkTypes[self.linkType].attributes()\n        );\n        if (caption && !captionFromDescription) {\n            data[\"data-captiontext\"] = caption;\n        }\n        if (self.imgElm && !self.imgElm.getAttribute(\"data-mce-object\")) {\n            const imgWidth = self.dom.getAttrib(self.imgElm, \"width\");\n            const imgHight = self.dom.getAttrib(self.imgElm, \"height\");\n            if (imgWidth) {\n                data.width = imgWidth;\n            }\n            if (imgHight) {\n                data.height = imgHight;\n            }\n        } else {\n            self.imgElm = null;\n        }\n\n        function waitLoad(imgElm) {\n            imgElm.onload = imgElm.onerror = function () {\n                imgElm.onload = imgElm.onerror = null;\n                self.focusElement(imgElm);\n            };\n        }\n\n        if (self.imgElm) {\n            self.dom.remove(self.imgElm);\n        }\n\n        data.id = \"__mcenew\";\n        var html_inner = self.dom.createHTML(\"img\", data);\n        var html_string;\n        html_string = html_inner;\n        self.tiny.insertContent(html_string);\n        self.imgElm = self.dom.get(\"__mcenew\");\n        self.dom.setAttrib(self.imgElm, \"id\", null);\n\n        waitLoad(self.imgElm);\n        if (self.imgElm.complete) {\n            self.focusElement(self.imgElm);\n        }\n    },\n\n    modalShown: function (e) {\n        var self = this;\n        self.initElements();\n        self.initData();\n        // upload init\n        if (self.options.upload) {\n            self.$upload = $(\".uploadify-me\", self.modal.$modal);\n            self.options.upload.relatedItems = $.extend(\n                true,\n                {},\n                self.options.relatedItems\n            );\n            self.options.upload.relatedItems.selectableTypes = self.options.folderTypes;\n            self.$upload.addClass(\"pat-upload\");\n            new PatternUpload(self.$upload, self.options.upload);\n            self.$upload.on(\n                \"uploadAllCompleted\",\n                function (evt, data) {\n                    if (self.linkTypes.image) {\n                        self.linkTypes.image.set(data.data.UID);\n                        $(\n                            \"#\" + $(\"#tinylink-image\", self.modal.$modal).data(\"navref\")\n                        ).trigger(\"click\");\n                    } else {\n                        self.linkTypes.internal.set(data.data.UID);\n                        $(\n                            \"#\" +\n                                $(\"#tinylink-internal\", self.modal.$modal).data(\"navref\")\n                        ).trigger(\"click\");\n                    }\n                }.bind(self)\n            );\n        }\n\n        self.$button.off(\"click\").on(\"click\", function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            self.linkType = self.modal.$modal.find(\"fieldset.active\").data(\"linktype\");\n\n            if (self.linkType === \"uploadImage\" || self.linkType === \"upload\") {\n                var patUpload = self.$upload.data().patternUpload;\n                if (patUpload.dropzone.files.length > 0) {\n                    patUpload.processUpload();\n                    self.$upload.on(\"uploadAllCompleted\", function (evt, data) {\n                        var counter = 0;\n                        var checkUpload = function () {\n                            if (counter < 5 && !self.linkTypes[self.linkType].value()) {\n                                counter += 1;\n                                setTimeout(checkUpload, 100);\n                                return;\n                            } else {\n                                var href = self.getLinkUrl();\n                                self.updateImage(href);\n                                self.hide();\n                            }\n                        };\n                        checkUpload();\n                    });\n                }\n            }\n            var href;\n            try {\n                href = self.getLinkUrl();\n            } catch (error) {\n                return; // just cut out if no url\n            }\n            if (!href) {\n                return; // just cut out if no url\n            }\n            if (self.isImageMode()) {\n                self.updateImage(href);\n            } else {\n                /* regular anchor */\n                self.updateAnchor(href);\n            }\n            self.hide();\n        });\n        $('.modal-footer input[name=\"cancel\"]', self.modal.$modal).click(function (e) {\n            e.preventDefault();\n            self.hide();\n        });\n    },\n\n    show: function () {\n        this.modal.show();\n    },\n\n    hide: function () {\n        this.modal.hide();\n    },\n\n    initData: function () {\n        var self = this;\n\n        self.data = {};\n        // get selection BEFORE..\n        // This is pulled from TinyMCE link plugin\n        self.initialText = null;\n        var value;\n        self.rng = self.tiny.selection.getRng();\n        self.selectedElm = self.tiny.selection.getNode();\n        self.anchorElm = self.tiny.dom.getParent(self.selectedElm, \"a[href]\");\n        self.onlyText = self.isOnlyTextSelected();\n\n        self.data.text = self.initialText = self.anchorElm\n            ? self.anchorElm.innerText || self.anchorElm.textContent\n            : self.tiny.selection.getContent({ format: \"text\" });\n        self.data.href = self.anchorElm\n            ? self.tiny.dom.getAttrib(self.anchorElm, \"href\")\n            : \"\";\n\n        if (self.anchorElm) {\n            self.data.target = self.tiny.dom.getAttrib(self.anchorElm, \"target\");\n        } else if (self.tiny.settings.default_link_target) {\n            self.data.target = self.tiny.settings.default_link_target;\n        }\n\n        if ((value = self.tiny.dom.getAttrib(self.anchorElm, \"rel\"))) {\n            self.data.rel = value;\n        }\n\n        if ((value = self.tiny.dom.getAttrib(self.anchorElm, \"class\"))) {\n            self.data[\"class\"] = value;\n        }\n\n        if ((value = self.tiny.dom.getAttrib(self.anchorElm, \"title\"))) {\n            self.data.title = value;\n        }\n\n        self.tiny.focus();\n        self.anchorElm = self.dom.getParent(self.selectedElm, \"a[href]\");\n\n        var linkType;\n        if (self.isImageMode()) {\n            var img;\n            img = self.selectedElm;\n            self.imgElm = img;\n\n            var src = self.dom.getAttrib(self.imgElm, \"src\");\n            var captionText = self.dom.getAttrib(self.imgElm, \"data-captiontext\");\n            self.$title.val(self.dom.getAttrib(self.imgElm, \"title\"));\n            self.$alt.val(self.dom.getAttrib(self.imgElm, \"alt\"));\n\n            if ($(self.imgElm).hasClass(\"zoomable\")) {\n                self.$enableImageZoom.prop(\"checked\", true);\n            }\n            if ($(self.imgElm).hasClass(\"captioned\") && !captionText) {\n                self.$captionFromDescription.prop(\"checked\", true);\n                self.$caption.prop(\"disabled\", true);\n            } else if ($(self.imgElm).hasClass(\"captioned\") && captionText) {\n                self.$captionFromDescription.prop(\"checked\", false);\n            } else {\n                self.$captionFromDescription.prop(\"checked\", false);\n            }\n            if (captionText) {\n                self.$caption.val(captionText);\n            }\n\n            linkType = self.dom.getAttrib(self.imgElm, \"data-linktype\");\n            if (linkType && (linkType in self.linkTypes)) {\n                self.linkType = linkType;\n                self.linkTypes[self.linkType].load(self.imgElm);\n                // set scale selection in link modal:\n                var pictureVariant = self.dom.getAttrib(\n                    self.imgElm,\n                    \"data-picturevariant\"\n                );\n                self.$scale.val(pictureVariant);\n                $(\"#tinylink-\" + self.linkType, self.modal.$modal).trigger(\"click\");\n            } else if (src) {\n                self.guessImageLink(src);\n            }\n            var className = self.dom.getAttrib(self.imgElm, \"class\");\n            var klasses = className.split(\" \");\n            for (var i = 0; i < klasses.length; i = i + 1) {\n                var klass = klasses[i];\n                for (var availClass in self.options.imageClasses) {\n                    if (availClass.indexOf(klass) !== -1) {\n                        self.$align.val(klass);\n                    }\n                }\n            }\n        } else if (self.anchorElm) {\n            self.focusElement(self.anchorElm);\n            var href = \"\";\n            href = self.dom.getAttrib(self.anchorElm, \"href\");\n            self.$target.val(self.dom.getAttrib(self.anchorElm, \"target\"));\n            self.$title.val(self.dom.getAttrib(self.anchorElm, \"title\"));\n            linkType = self.dom.getAttrib(self.anchorElm, \"data-linktype\");\n            if (linkType) {\n                self.linkType = linkType;\n                self.linkTypes[self.linkType].load(self.anchorElm);\n                var $panel = $(\"#tinylink-\" + self.linkType, self.modal.$modal);\n                // $('#tinylink-' + self.linkType, self.modal.$modal).trigger('click');\n                if ($panel.length === 1) {\n                    $(\"#\" + $panel.data(\"autotoc-trigger-id\")).trigger(\"click\");\n                }\n            } else if (href) {\n                self.guessAnchorLink(href);\n            }\n        }\n    },\n\n    guessImageLink: function (src) {\n        if (src.indexOf(this.options.prependToScalePart) !== -1) {\n            this.linkType = \"image\";\n            // TODO: use data-scale attribute instead:\n            this.$scale.val(this.tinypattern.getScaleFromUrl(src));\n            this.linkTypes.image.set(this.tinypattern.stripGeneratedUrl(src));\n        } else {\n            this.linkType = \"externalImage\";\n            this.linkTypes.externalImage.set(src);\n        }\n    },\n\n    guessAnchorLink: function (href) {\n        if (\n            this.options.prependToUrl &&\n            href.indexOf(this.options.prependToUrl) !== -1\n        ) {\n            // XXX if using default configuration, it gets more difficult\n            // here to detect internal urls so this might need to change...\n            this.linkType = \"internal\";\n            this.linkTypes.internal.set(this.tinypattern.stripGeneratedUrl(href));\n        } else if (href.indexOf(\"mailto:\") !== -1) {\n            this.linkType = \"email\";\n            var email = href.substring(\"mailto:\".length, href.length);\n            var split = email.split(\"?subject=\");\n            this.linkTypes.email.set(split[0]);\n            if (split.length > 1) {\n                this.$subject.val(decodeURIComponent(split[1]));\n            }\n        } else if (href[0] === \"#\") {\n            this.linkType = \"anchor\";\n            this.linkTypes.anchor.set(href.substring(1));\n        } else {\n            this.linkType = \"external\";\n            this.linkTypes.external.set(href);\n        }\n    },\n\n    setSelectElement: function ($el, val) {\n        $el.find(\"option:selected\").prop(\"selected\", false);\n        if (val) {\n            // update\n            $el.find('option[value=\"' + val + '\"]').prop(\"selected\", true);\n        }\n    },\n\n    reinitialize: function () {\n        /*\n         * This will probably be called before show is run.\n         * It will overwrite the base html template given to\n         * be able to privde default values for the overlay\n         */\n        this.modal.options.html = this.generateModalHtml();\n    },\n});\n","import $ from \"jquery\";\nimport _ from \"underscore\";\nimport _t from \"../../core/i18n-wrapper\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\nimport utils from \"../../core/utils\";\n\nlet Dropzone;\n\nexport default Base.extend({\n    name: \"upload\",\n    trigger: \".pat-upload\",\n    parser: \"mockup\",\n    defaults: {\n        showTitle: true,\n        url: null, // XXX MUST provide url to submit to OR be in a form\n        className: \"upload\",\n        wrap: false,\n        wrapperTemplate: '<div class=\"upload-wrapper\"/>',\n        fileaddedClassName: \"dropping\",\n        useTus: false,\n        container: \"\",\n        ajaxUpload: true,\n\n        paramName: \"file\",\n        addRemoveLinks: false,\n        autoCleanResults: true,\n        previewsContainer: \".previews\",\n        previewTemplate: null,\n        maxFiles: null,\n        maxFilesize: 99999999, // let's not have a max by default...\n\n        allowPathSelection: undefined,\n        relatedItems: {\n            // UID attribute is required here since we're working with related items\n            attributes: [\n                \"UID\",\n                \"Title\",\n                \"Description\",\n                \"getURL\",\n                \"portal_type\",\n                \"path\",\n                \"ModificationDate\",\n            ],\n            batchSize: 20,\n            basePath: \"/\",\n            vocabularyUrl: null,\n            width: 500,\n            maximumSelectionSize: 1,\n            selectableTypes: [\"Folder\"],\n        },\n    },\n\n    init: async function () {\n        import(\"dropzone/dist/dropzone.css\");\n        import(\"./upload.scss\");\n        Dropzone = (await import(\"dropzone\")).default;\n        /* we do not want this plugin to auto discover */\n        Dropzone.autoDiscover = false;\n\n        const UploadTemplate = (await import(\"./templates/upload.xml\")).default;\n\n        var self = this;\n\n        if (typeof self.options.allowPathSelection === \"undefined\") {\n            // Set allowPathSelection to true, if we can use path based urls.\n            self.options.allowPathSelection =\n                self.options.baseUrl && self.options.relativePath;\n        }\n\n        // TODO: find a way to make this work in firefox (and IE)\n        $(document).bind(\"paste\", function (e) {\n            var oe = e.originalEvent;\n            var items = oe.clipboardData.items;\n            if (items) {\n                for (var i = 0; i < items.length; i++) {\n                    if (items[i].type.indexOf(\"image\") !== -1) {\n                        var blob = items[i].getAsFile();\n                        self.dropzone.addFile(blob);\n                    }\n                }\n            }\n        });\n        // values that will change current processing\n        self.currentPath = self.options.currentPath;\n        self.currentFile = 0;\n\n        let template = _.template(UploadTemplate)({\n            _t: _t,\n            allowPathSelection: self.options.allowPathSelection,\n        });\n        self.$el.addClass(self.options.className);\n        self.$el.append(template);\n\n        self.$progress = $(\".progress-bar-success\", self.$el);\n\n        if (!self.options.showTitle) {\n            self.$el.find(\"h2.title\").hide();\n        }\n\n        if (!self.options.ajaxUpload) {\n            // no ajax upload, drop the fallback\n            $(\".fallback\", this.$el).remove();\n            if (this.$el.hasClass(\".upload-container\")) {\n                this.$el.addClass(\"no-ajax-upload\");\n            } else {\n                this.$el.closest(\".upload-container\").addClass(\"no-ajax-upload\");\n            }\n        }\n\n        if (self.options.wrap) {\n            self.$el.wrap(self.options.wrapperTemplate);\n            self.$el = self.$el.parent();\n        }\n\n        if (self.options.allowPathSelection) {\n            // only use related items if we can generate path based urls and if it's not turned off.\n            self.$pathInput = $('input[name=\"location\"]', self.$el);\n            self.relatedItems = await self.setupRelatedItems(self.$pathInput);\n        } else {\n            $('input[name=\"location\"]', self.$el).parent().remove();\n            self.relatedItems = null;\n        }\n\n        self.$dropzone = $(\".upload-area\", self.$el);\n\n        $(\"div.browse-select button.browse\", self.$el).click(function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            if (\n                !self.options.maxFiles ||\n                self.dropzone.files.length < self.options.maxFiles\n            ) {\n                self.dropzone.hiddenFileInput.click();\n            }\n        });\n\n        var dzoneOptions = await this.getDzoneOptions();\n\n        try {\n            // if init of Dropzone fails it says nothing and\n            // it fails silently. Using this block we make sure\n            // that if you break it w/ some weird or missing option\n            // you can get a proper log of it\n            //\n            self.dropzone = new Dropzone(self.$dropzone[0], dzoneOptions);\n        } catch (e) {\n            if (window.DEBUG) {\n                // log it!\n                console.log(e);\n            }\n            throw e;\n        }\n\n        self.dropzone.on(\"maxfilesreached\", function () {\n            self.showHideControls();\n        });\n\n        self.dropzone.on(\"addedfile\", function (/* file */) {\n            self.showHideControls();\n        });\n\n        self.dropzone.on(\"removedfile\", function () {\n            self.showHideControls();\n        });\n\n        self.dropzone.on(\"success\", function (e, response) {\n            // Trigger event 'uploadAllCompleted' and pass the server's reponse and\n            // the path uid. This event can be listened to by patterns using the\n            // upload pattern, e.g. the TinyMCE pattern's link plugin.\n            var data;\n            try {\n                data = $.parseJSON(response);\n            } catch (ex) {\n                data = response;\n            }\n            self.$el.trigger(\"uploadAllCompleted\", {\n                data: data,\n                path_uid: self.$pathInput ? self.$pathInput.val() : null,\n            });\n        });\n\n        if (self.options.autoCleanResults) {\n            self.dropzone.on(\"complete\", function (file) {\n                if (file.status === Dropzone.SUCCESS) {\n                    setTimeout(function () {\n                        $(file.previewElement).fadeOut();\n                    }, 3000);\n                }\n            });\n        }\n\n        self.dropzone.on(\"complete\", function (file) {\n            if (file.status === Dropzone.SUCCESS && self.dropzone.files.length === 1) {\n                self.showHideControls();\n            }\n        });\n\n        self.dropzone.on(\"error\", function (file, response, xmlhr) {\n            if (typeof xmlhr !== \"undefined\" && xmlhr.status !== 403) {\n                // If error other than 403, just print a generic message\n                $(\".dz-error-message span\", file.previewElement).html(\n                    _t(\"The file transfer failed\")\n                );\n            }\n        });\n\n        self.dropzone.on(\"totaluploadprogress\", function (pct) {\n            // need to caclulate total pct here in reality since we're manually\n            // processing each file one at a time.\n            pct =\n                (((self.currentFile - 1) * 100 + pct) /\n                    (self.dropzone.files.length * 100)) *\n                100;\n            self.$progress.attr(\"aria-valuenow\", pct).css(\"width\", pct + \"%\");\n        });\n\n        $(\".upload-all\", self.$el).click(function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            self.processUpload({\n                finished: function () {\n                    self.$progress.attr(\"aria-valuenow\", 0).css(\"width\", \"0%\");\n                },\n            });\n        });\n        if (self.options.clipboardfile) {\n            self.dropzone.addFile(self.options.clipboardfile);\n        }\n    },\n\n    showHideControls: function () {\n        /* we do this delayed because this can be called multiple times\n         AND we need to do this hide/show AFTER dropzone is done with\n         all it's own events. This is NASTY but the only way we can\n         enforce some numFiles with dropzone! */\n        var self = this;\n        if (self._showHideTimeout) {\n            clearTimeout(self._showHideTimeout);\n        }\n        self._showHideTimeout = setTimeout(function () {\n            self._showHideControls();\n        }, 50);\n    },\n\n    _showHideControls: function () {\n        var self = this;\n        var $controls = $(\".controls\", self.$el);\n        var $browse = $(\".browse-select\", self.$el);\n        var $input = $(\".dz-hidden-input\");\n\n        if (self.options.maxFiles) {\n            if (self.dropzone.files.length < self.options.maxFiles) {\n                $browse.show();\n                $input.prop(\"disabled\", false);\n            } else {\n                $browse.hide();\n                $input.prop(\"disabled\", true);\n            }\n        }\n        if (self.dropzone.files.length > 0) {\n            $controls.fadeIn(\"slow\");\n            var file = self.dropzone.files[0];\n            $(\".dz-error-message span\", file.previewElement).html(\"\");\n        } else {\n            $controls.fadeOut(\"slow\");\n        }\n    },\n\n    pathJoin: function () {\n        var parts = [];\n        _.each(arguments, function (part) {\n            if (!part) {\n                return;\n            }\n            if (part[0] === \"/\") {\n                part = part.substring(1);\n            }\n            if (part[part.length - 1] === \"/\") {\n                part = part.substring(0, part.length - 1);\n            }\n            parts.push(part);\n        });\n        return parts.join(\"/\");\n    },\n\n    getUrl: function () {\n        var self = this;\n        var url = self.options.url;\n        if (!url) {\n            if (self.options.baseUrl && self.options.relativePath) {\n                url = self.options.baseUrl;\n                if (url[url.length - 1] !== \"/\") {\n                    url = url + \"/\";\n                }\n                url = url + self.pathJoin(self.currentPath, self.options.relativePath);\n            } else {\n                var $form = self.$el.parents(\"form\");\n                if ($form.length > 0) {\n                    url = $form.attr(\"action\");\n                } else {\n                    url = window.location.href;\n                }\n            }\n        }\n        return url;\n    },\n\n    getDzoneOptions: async function () {\n        let PreviewTemplate = await import(\"./templates/preview.xml\");\n        PreviewTemplate = PreviewTemplate.default;\n\n        var self = this;\n\n        // This pattern REQUIRE dropzone to be clickable\n        self.options.clickable = true;\n\n        var options = $.extend({}, self.options);\n        options.url = self.getUrl();\n\n        options.headers = {\n            \"X-CSRF-TOKEN\": utils.getAuthenticator(),\n        };\n\n        // XXX force to only upload one to the server at a time,\n        // right now we don't support multiple for backends\n        options.uploadMultiple = false;\n\n        delete options.wrap;\n        delete options.wrapperTemplate;\n        delete options.resultTemplate;\n        delete options.autoCleanResults;\n        delete options.fileaddedClassName;\n        delete options.useTus;\n\n        if (self.options.previewsContainer) {\n            /*\n             * if they have a select but it's not an id, let's make an id selector\n             * so we can target the correct container. dropzone is weird here...\n             */\n            var $preview = self.$el.find(self.options.previewsContainer);\n            if ($preview.length > 0) {\n                options.previewsContainer = $preview[0];\n            }\n        }\n\n        // XXX: do we need to allow this?\n        options.autoProcessQueue = false;\n        // options.addRemoveLinks = true;  // we show them in the template\n        options.previewTemplate = PreviewTemplate;\n\n        // if our element is a form we should force some values\n        // https://github.com/enyo/dropzone/wiki/Combine-normal-form-with-Dropzone\n        return options;\n    },\n\n    processUpload: function (options) {\n        if (!options) {\n            options = {};\n        }\n\n        var self = this,\n            processing = false,\n            useTus = self.options.useTus,\n            fileaddedClassName = self.options.fileaddedClassName,\n            finished = options.finished;\n\n        self.currentFile = 0;\n\n        function process() {\n            processing = true;\n            if (self.dropzone.files.length === 0) {\n                processing = false;\n            }\n\n            var file = self.dropzone.files[0];\n            if (processing && file.status === Dropzone.ERROR) {\n                // Put the file back as \"queued\" for retrying\n                file.status = Dropzone.QUEUED;\n                processing = false;\n            }\n\n            if (!processing) {\n                self.$el.removeClass(fileaddedClassName);\n                if (finished !== undefined && typeof finished === \"function\") {\n                    finished();\n                }\n                return;\n            }\n\n            if ([Dropzone.SUCCESS, Dropzone.CANCELED].indexOf(file.status) !== -1) {\n                // remove it\n                self.dropzone.removeFile(file);\n                process();\n            } else if (file.status !== Dropzone.UPLOADING) {\n                // start processing file\n                if (useTus && window.tus) {\n                    // use tus upload if installed\n                    self.handleTusUpload(file);\n                } else {\n                    // otherwise, just use dropzone to process\n                    self.currentFile += 1;\n                    self.dropzone.processFile(file);\n                }\n                setTimeout(process, 100);\n            } else {\n                // currently processing\n                setTimeout(process, 100);\n            }\n        }\n        process();\n    },\n\n    handleTusUpload: function (file) {\n        /* this needs fixing... */\n        var self = this,\n            $preview = $(file.previewElement),\n            chunkSize = 1024 * 1024 * 5; // 5mb chunk size\n\n        file.status = Dropzone.UPLOADING;\n\n        window.tus\n            .upload(file, {\n                endpoint: self.dropzone.options.url,\n                headers: {\n                    \"FILENAME\": file.name,\n                    \"X-CSRF-TOKEN\": utils.getAuthenticator(),\n                },\n                chunkSize: chunkSize,\n            })\n            .fail(function () {\n                if (window.DEBUG) {\n                    console.alert(_t(\"Error uploading with TUS resumable uploads\"));\n                }\n                file.status = Dropzone.ERROR;\n            })\n            .progress(function (e, bytesUploaded, bytesTotal) {\n                var percentage = (bytesUploaded / bytesTotal) * 100;\n                self.$progress\n                    .attr(\"aria-valuenow\", percentage)\n                    .css(\"width\", percentage + \"%\");\n                self.$progress.html(\n                    _t(\"uploading...\") +\n                        \"<br />\" +\n                        self.formatBytes(bytesUploaded) +\n                        \" / \" +\n                        self.formatBytes(bytesTotal)\n                );\n            })\n            .done(function (url, file) {\n                file.status = Dropzone.SUCCESS;\n                self.dropzone.emit(\"success\", file);\n                self.dropzone.emit(\"complete\", file);\n            });\n    },\n\n    formatBytes: function (bytes) {\n        var kb = Math.round(bytes / 1024);\n        if (kb < 1024) {\n            return kb + \" KiB\";\n        }\n        var mb = Math.round(kb / 1024);\n        if (mb < 1024) {\n            return mb + \" MB\";\n        }\n        return Math.round(mb / 1024) + \" GB\";\n    },\n\n    setPath: function (path) {\n        var self = this;\n        self.currentPath = path;\n        self.options.url = null;\n        self.options.url = self.dropzone.options.url = self.getUrl();\n    },\n\n    setupRelatedItems: async function ($input) {\n        const RelatedItems = (await import(\"../relateditems/relateditems\")).default;\n\n        var self = this;\n        var options = self.options.relatedItems;\n        options.upload = false; // ensure that related items upload is off.\n        if (self.options.initialFolder) {\n            $input.attr(\"value\", self.options.initialFolder);\n        }\n        var ri = new RelatedItems($input, options);\n        ri.$el.on(\"change\", function () {\n            var result = $(this).select2(\"data\");\n            var path = null;\n            if (result.length > 0) {\n                path = result[0].path;\n            }\n            self.setPath(path);\n        });\n        return ri;\n    },\n});\n"],"names":["Base","name","trigger","parser","defaults","separator","initializeValues","self","this","options","initialValues","id","term","initSelection","$el","callback","data","value","val","seldefaults","JSON","parse","$","split","each","selection","text","push","utils","initializeTags","tags","substr","allowNewItems","i","multiple","initializeOrdering","async","orderable","Sortable","default","_initializeOrdering","sortable_el","$select2","querySelector","draggable","dragClass","chosenClass","onStart","select2","onEnd","on","bind","initializeSelect2","language","console","warn","action","e","debug","window","formatResultCssClass","ob","toLowerCase","replace","el","onSelected","onSelecting","onDeselecting","onDeselected","parent","find","off","addClass","opened","length","init","i18n","I18n","currentLanguage","hasOwnProperty","ajax","vocabularyUrl","undefined","url","queryTerm","quietMillis","page","query","page_limit","results","dataIds","item","haveResult","is","vals","o","html","$hidden","join","attr","$orig","replaceWith","KEY","currentPath","selectedUIDs","openAfterInit","attributes","basePath","pageSize","browsing","closeOnSelect","contextPath","dropdownCssClass","favorites","recentlyUsed","recentlyUsedMaxItems","recentlyUsedKey","maximumSelectionSize","minimumInputLength","mode","pathOperator","rootPath","rootUrl","scanSelection","selectableTypes","sortOn","sortOrder","tokenSeparators","upload","uploadAllowView","breadcrumbTemplateSelector","favoriteTemplateSelector","recentlyusedTemplateSelector","resultTemplateSelector","selectionTemplateSelector","toolbarTemplateSelector","filterSelectable","ret","slice","filter","isSelectable","max","parseInt","applyTemplate","tpl","template","open_folder","_t","current_directory","one_level_up","_item","_","setAjax","dataType","criterias","v","sort_on","sort_order","stringify","criteria","batch","size","more","total","map","UID","is_folderish","indexOf","path","oneLevelUp","Title","selectable","concat","renderToolbar","paths","itemPath","itemsHtml","node","favoritesHtml","item_copy","recentlyUsedHtml","reverse","initUploadView","disabled","Upload","upload_button","$toolbar","upload_el","upload_config","success","response","uid","search","apply","emit","popover","hide","uloadMultiple","allowPathSelection","relativePath","baseUrl","addEventListener","setPath","items","favItems","favText","searchText","searchModeText","browseModeText","recentlyUsedItems","recentlyUsedText","icon_root","icon_recently_used","icon_favorites","icon_upload","upload_text","unbind","stopPropagation","preventDefault","toggleClass","browseTo","event","it","selectItem","type","result","allowUpload","alreadyPresent","splice","deselectItem","obj","portal_type","Dropdown","breadcrumbTemplate","favoriteTemplate","recentlyusedTemplate","resultTemplate","selectionTemplate","toolbarTemplate","wrap","$container","parents","Select2","formatSelection","getIcon","getURL","review_state","$selection","registry","path_split","icon_level_up","icon_level_down","formatResult","iconLevelUp","iconLevelDown","$parent","removeClass","element","ids","pattern","reduce","prev","tokenizer","input","prepend","choice","yMax","innerHeight","document","documentElement","clientHeight","maxHeight","getBoundingClientRect","top","css","which","selectorContext","browsableItem","section","levels","IDPrefix","classTOCName","classSectionName","classLevelPrefixName","classActiveName","scrollDuration","scrollEasing","$toc","prependTo","appendTo","className","asTabs","hasClass","activeId","$level","prop","location","hash","getLevel","doScroll","skipHash","children","target","animate","scrollTop","offset","history","pushState","first","elementLevel","level","levelSelector","LinkType","linkModal","tinypattern","tiny","dom","getEl","toUrl","load","getAttrib","set","updateRelatedItems","ExternalLink","extend","prototype","call","RegExp","test","InternalLink","createRelatedItems","relatedItems","RelatedItems","generateUrl","UploadLink","getDelegatedLinkType","linkType","linkTypes","image","internal","ImageLink","generateImageUrl","getScaleFromSrcset","$scale","EmailLink","subject","getSubject","href","$subject","attribs","AnchorLink","$select","anchorNodes","anchorData","populate","j","title","remove","nodes","select","anchorSelector","substring","found","anode","newAnchor","append","getIndex","index","innerHTML","anchor","tinymce","editor","ui","addButton","icon","tooltip","onAction","settings","addImageClicked","shortcut","addLinkClicked","stateSelector","execCommand","initialLinkType","insertHeading","linkTypeClassMapping","external","email","uploadImage","externalImage","linkTypeTemplateMapping","LinkTemplate","ImageTemplate","modal","generateModalHtml","content","buttons","reloadWindowOnClose","templateOptions","classDialog","actionOptions","backdropOptions","zIndex","closeOnClick","modalShown","isOnlyTextSelected","getContent","anchorElm","childNodes","ii","nodeType","insertImageHelp","uploadText","insertLinkHelp","anchorLabel","externalText","emailText","subjectText","targetList","titleText","internalImageText","internalImage","externalImageText","altText","alt","imageAlignText","imageAlign","captionFromDescriptionText","captionFromDescription","enableImageZoom","captionText","caption","scaleText","scale","pictureVariants","imageCaptioningEnabled","cancelBtn","insertBtn","isImageMode","initElements","$target","$modal","$button","$title","$alt","$align","$enableImageZoom","$captionFromDescription","$caption","click","classes","eq","change","checked","getLinkUrl","getValue","updateAnchor","focus","setRng","rng","linkAttrs","onlyText","initialText","innerText","textContent","setAttribs","undoManager","add","insertContent","createHTML","encode","focusElement","elm","nodeChanged","pictureVariant","pictureVariantsConfig","sourceset","updateImage","src","cssclasses","html_string","imgElm","getAttribute","imgWidth","imgHight","width","height","get","setAttrib","onload","onerror","complete","initData","$upload","folderTypes","PatternUpload","evt","patUpload","patternUpload","dropzone","files","processUpload","counter","checkUpload","setTimeout","error","show","getRng","selectedElm","getNode","getParent","format","default_link_target","rel","img","guessImageLink","klasses","klass","availClass","imageClasses","$panel","guessAnchorLink","prependToScalePart","getScaleFromUrl","stripGeneratedUrl","prependToUrl","decodeURIComponent","setSelectElement","reinitialize","Dropzone","showTitle","wrapperTemplate","fileaddedClassName","useTus","container","ajaxUpload","paramName","addRemoveLinks","autoCleanResults","previewsContainer","previewTemplate","maxFiles","maxFilesize","batchSize","autoDiscover","UploadTemplate","originalEvent","clipboardData","blob","getAsFile","addFile","currentFile","$progress","closest","$pathInput","setupRelatedItems","$dropzone","hiddenFileInput","dzoneOptions","getDzoneOptions","DEBUG","log","showHideControls","ex","path_uid","file","status","SUCCESS","previewElement","fadeOut","xmlhr","pct","finished","clipboardfile","_showHideTimeout","clearTimeout","_showHideControls","$controls","$browse","$input","fadeIn","pathJoin","parts","arguments","part","getUrl","$form","PreviewTemplate","clickable","headers","uploadMultiple","$preview","autoProcessQueue","processing","process","ERROR","QUEUED","CANCELED","removeFile","UPLOADING","tus","handleTusUpload","processFile","endpoint","chunkSize","fail","alert","progress","bytesUploaded","bytesTotal","percentage","formatBytes","done","bytes","kb","Math","round","mb","initialFolder","ri"],"sourceRoot":""}