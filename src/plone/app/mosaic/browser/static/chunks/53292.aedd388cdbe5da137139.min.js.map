{"version":3,"file":"chunks/53292.aedd388cdbe5da137139.min.js","mappings":"mGAQC,WACG,aAEA,IAmBMA,EAGAC,EAtBFC,EAAWC,QAAQC,KAAKC,MAAMC,QAAQ,yBAEtCC,EAAO,WACX,EACIC,EAAW,SAAUC,GACvB,OAAO,WACL,OAAOA,CACT,CACF,EACIC,EAAW,SAAUC,GACvB,OAAOA,CACT,EACIC,EAAQJ,GAAS,GACjBK,EAASL,GAAS,GAElBM,EAAO,WACT,OAAOC,CACT,EACIA,EAKO,CACPC,KAAM,SAAUC,EAAGC,GACjB,OAAOD,GACT,EACAE,OAAQP,EACRQ,OAAQP,EACRQ,MAPEpB,EAAKS,EAQPY,WAXEtB,EAAO,SAAUuB,GACnB,OAAOA,GACT,EAUEC,SAAU,SAAUC,GAClB,MAAM,IAAIC,MAAMD,GAAO,kCACzB,EACAE,UAAWnB,EAAS,MACpBoB,eAAgBpB,OAASqB,GACzBC,GAAI7B,EACJ8B,QAAS/B,EACTgC,IAAKlB,EACLmB,KAAM1B,EACN2B,KAAMpB,EACNqB,OAAQvB,EACRwB,OAAQvB,EACRwB,OAAQ,WACN,OAAOvB,GACT,EACAwB,QAAS,WACP,MAAO,EACT,EACAC,SAAU/B,EAAS,WAInBgC,EAAO,SAAUC,GACnB,IAAIC,EAAalC,EAASiC,GACtBE,EAAO,WACT,OAAOC,CACT,EACIV,EAAO,SAAUW,GACnB,OAAOA,EAAEJ,EACX,EACIG,EAAK,CACP5B,KAAM,SAAUC,EAAG6B,GACjB,OAAOA,EAAEL,EACX,EACAtB,OAAQN,EACRO,OAAQR,EACRS,MAAOqB,EACPpB,WAAYoB,EACZlB,SAAUkB,EACVf,UAAWe,EACXd,eAAgBc,EAChBZ,GAAIa,EACJZ,QAASY,EACTX,IAAK,SAAUa,GACb,OAAOL,EAAKK,EAAEJ,GAChB,EACAR,KAAM,SAAUY,GACdA,EAAEJ,EACJ,EACAP,KAAMA,EACNC,OAAQD,EACRE,OAAQF,EACRG,OAAQ,SAAUQ,GAChB,OAAOA,EAAEJ,GAAKG,EAAK7B,CACrB,EACAuB,QAAS,WACP,MAAO,CAACG,EACV,EACAF,SAAU,WACR,MAAO,QAAUE,EAAI,GACvB,GAEF,OAAOG,CACT,EAIIG,EAAW,CACbP,KAAMA,EACN1B,KAAMA,EACNkC,KANS,SAAUvC,GACnB,OAAOA,QAAwCM,EAAOyB,EAAK/B,EAC7D,GAUIwC,EAAO,SAAUC,GACnB,OAJU,SAAUA,EAAIC,GACxB,OAAOA,GAAK,GAAKA,EAAID,EAAGE,OAASL,EAASP,KAAKU,EAAGC,IAAMJ,EAASjC,MACnE,CAESuC,CAAMH,EAAI,EACnB,EAMII,EAAWnD,QAAQC,KAAKC,MAAMC,QAAQ,wBAEtCiD,EAAe,SAAUC,GAC3B,OAAOA,GAAwB,QAAjBA,EAAIC,WAA8D,IAAxCD,EAAIE,UAAUC,QAAQ,YAChE,EACIC,EAAU,SAAUC,GACtB,OAAO,SAAUC,EAAMC,GACrB,OAAOF,EAAYE,EACrB,CACF,EAEIC,EAA2B,oBAAXC,OAAyBA,OAASC,SAAS,eAATA,GAElDC,EAAY,CAAC,EAAGC,EAAS,CAAEC,QAASF,GAAaG,EAAS,CAAC,GAC9D,SAAUC,EAAQF,EAASD,EAAQI,GAClC,IAAIC,EAAWR,OAAOS,MACtBT,OAAOS,MAAQ,CAAEC,QAAQ,GACxB,SAAUL,EAAQM,GACE,iBAAZP,QAA0C,IAAXD,EAAyBA,EAAOC,QAAUO,IAA8B,mBAAXL,GAAyBA,EAAOM,IAAMN,EAAOK,IAAYN,EAA+B,oBAAfQ,WAA6BA,WAAaR,GAAU3B,MAAaoC,oBAAsBH,GACrQ,CAFA,CAEEI,MAAM,WACN,IAAIC,EAAuC,oBAAfH,WAA6BA,WAA+B,oBAAXb,OAAyBA,YAA2B,IAAXK,EAAyBA,EAAyB,oBAAT3B,KAAuBA,KAAO,CAAC,EAC1LuC,EAAY,CAAEb,QAAS,CAAC,GA2hE5B,OA1hEC,SAAUD,GACT,IACIM,EAAQ,SAAUS,GACpB,IAAIC,EAAO,0CACPC,EAAW,EACXC,EAAmB,CAAC,EACpBC,EAAI,CACNZ,OAAQQ,EAAMT,OAASS,EAAMT,MAAMC,OACnCa,4BAA6BL,EAAMT,OAASS,EAAMT,MAAMc,4BACxDpF,KAAM,CACJqF,OAAQ,SAASA,EAAOC,GACtB,OAAIA,aAAkBC,EACb,IAAIA,EAAMD,EAAOE,KAAMH,EAAOC,EAAOG,SAAUH,EAAOI,OACpDC,MAAMC,QAAQN,GAChBA,EAAO1D,IAAIyD,GAEXC,EAAOO,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,UAAW,IAElF,EACAL,KAAM,SAAUM,GACd,OAAOC,OAAOC,UAAU7D,SAASvC,KAAKkG,GAAGG,MAAM,GAAI,EACrD,EACAC,MAAO,SAAUC,GAIf,OAHKA,EAAU,MACbJ,OAAOK,eAAeD,EAAK,OAAQ,CAAE9F,QAAS4E,IAEzCkB,EAAU,IACnB,EACAE,MAAO,SAASC,EAAUR,EAAGS,GAE3B,IAAIF,EACAxG,EACJ,OAHA0G,EAAUA,GAAW,CAAC,EAGdpB,EAAEnF,KAAKwF,KAAKM,IACpB,IAAK,SAEH,GADAjG,EAAKsF,EAAEnF,KAAKkG,MAAMJ,GACdS,EAAQ1G,GACV,OAAO0G,EAAQ1G,GAIjB,IAAK,IAAI2G,KAFTH,EAAQ,CAAC,EACTE,EAAQ1G,GAAMwG,EACEP,EACVA,EAAEW,eAAeD,KACnBH,EAAMG,GAAOF,EAAUR,EAAEU,GAAMD,IAGnC,OAAOF,EACT,IAAK,QAEH,OADAxG,EAAKsF,EAAEnF,KAAKkG,MAAMJ,GACdS,EAAQ1G,GACH0G,EAAQ1G,IAEjBwG,EAAQ,GACRE,EAAQ1G,GAAMwG,EACdP,EAAEY,SAAQ,SAAUC,EAAG5D,GACrBsD,EAAMtD,GAAKuD,EAAUK,EAAGJ,EAC1B,IACOF,GACT,QACE,OAAOP,EAEX,EACAc,YAAa,SAAUC,GACrB,KAAOA,GAAS,CACd,IAAIC,EAAI9B,EAAK+B,KAAKF,EAAQvD,WAC1B,GAAIwD,EACF,OAAOA,EAAE,GAAGE,cAEdH,EAAUA,EAAQI,aACpB,CACA,MAAO,MACT,EACAC,YAAa,SAAUL,EAASM,GAC9BN,EAAQvD,UAAYuD,EAAQvD,UAAUuC,QAAQuB,OAAOpC,EAAKqC,OAAQ,MAAO,IACzER,EAAQS,UAAUC,IAAI,YAAcJ,EACtC,EACAK,cAAe,WACb,GAAwB,oBAAbC,SACT,OAAO,KAET,GAAI,kBAAmBA,SACrB,OAAOA,SAASD,cAElB,IACE,MAAM,IAAIlG,KAYZ,CAXE,MAAOoG,GACP,IAAIC,GAAO,qCAAqCZ,KAAKW,EAAIE,QAAU,IAAI,GACvE,GAAID,EAAK,CACP,IAAIE,EAAUJ,SAASK,qBAAqB,UAC5C,IAAK,IAAI/E,KAAK8E,EACZ,GAAIA,EAAQ9E,GAAG4E,KAAOA,EACpB,OAAOE,EAAQ9E,EAGrB,CACA,OAAO,IACT,CACF,EACAgF,SAAU,SAAUlB,EAASvD,EAAW0E,GAEtC,IADA,IAAIC,EAAK,MAAQ3E,EACVuD,GAAS,CACd,IAAIS,EAAYT,EAAQS,UACxB,GAAIA,EAAUY,SAAS5E,GACrB,OAAO,EAET,GAAIgE,EAAUY,SAASD,GACrB,OAAO,EAETpB,EAAUA,EAAQI,aACpB,CACA,QAASe,CACX,GAEFG,UAAW,CACTC,MAAOlD,EACPmD,UAAWnD,EACXoD,KAAMpD,EACNqD,IAAKrD,EACLsD,OAAQ,SAAU3I,EAAI4I,GACpB,IAAIzD,EAAOG,EAAEnF,KAAKqG,MAAMlB,EAAEgD,UAAUtI,IACpC,IAAK,IAAI2G,KAAOiC,EACdzD,EAAKwB,GAAOiC,EAAMjC,GAEpB,OAAOxB,CACT,EACA0D,aAAc,SAAUC,EAAQC,EAAQC,EAAQC,GAE9C,IAAIC,GADJD,EAAOA,GAAQ3D,EAAEgD,WACEQ,GACfK,EAAM,CAAC,EACX,IAAK,IAAIC,KAASF,EAChB,GAAIA,EAAQtC,eAAewC,GAAQ,CACjC,GAAIA,GAASL,EACX,IAAK,IAAIM,KAAYL,EACfA,EAAOpC,eAAeyC,KACxBF,EAAIE,GAAYL,EAAOK,IAIxBL,EAAOpC,eAAewC,KACzBD,EAAIC,GAASF,EAAQE,GAEzB,CAEF,IAAIE,EAAML,EAAKH,GAOf,OANAG,EAAKH,GAAUK,EACf7D,EAAEgD,UAAUiB,IAAIjE,EAAEgD,WAAW,SAAU3B,EAAKnG,GACtCA,IAAU8I,GAAO3C,GAAOmC,IAC1B/D,KAAK4B,GAAOwC,EAEhB,IACOA,CACT,EACAI,IAAK,SAASA,EAAItD,EAAGuD,EAAU7D,EAAMe,GACnCA,EAAUA,GAAW,CAAC,EACtB,IAAIL,EAAQf,EAAEnF,KAAKkG,MACnB,IAAK,IAAInD,KAAK+C,EACZ,GAAIA,EAAEW,eAAe1D,GAAI,CACvBsG,EAASzJ,KAAKkG,EAAG/C,EAAG+C,EAAE/C,GAAIyC,GAAQzC,GAClC,IAAIuG,EAAWxD,EAAE/C,GACbwG,EAAepE,EAAEnF,KAAKwF,KAAK8D,GACV,WAAjBC,GAA8BhD,EAAQL,EAAMoD,IAGpB,UAAjBC,GAA6BhD,EAAQL,EAAMoD,MACpD/C,EAAQL,EAAMoD,KAAa,EAC3BF,EAAIE,EAAUD,EAAUtG,EAAGwD,KAJ3BA,EAAQL,EAAMoD,KAAa,EAC3BF,EAAIE,EAAUD,EAAU,KAAM9C,GAKlC,CAEJ,GAEFiD,QAAS,CAAC,EACVC,aAAc,SAAUC,EAAOL,GAC7BlE,EAAEwE,kBAAkBlC,SAAUiC,EAAOL,EACvC,EACAM,kBAAmB,SAAUC,EAAWF,EAAOL,GAC7C,IAAIQ,EAAM,CACRR,SAAUA,EACVO,UAAWA,EACXE,SAAU,oGAEZ3E,EAAE4E,MAAMC,IAAI,sBAAuBH,GACnCA,EAAII,SAAWtE,MAAMK,UAAUC,MAAMiE,MAAML,EAAID,UAAUO,iBAAiBN,EAAIC,WAC9E3E,EAAE4E,MAAMC,IAAI,gCAAiCH,GAC7C,IAAK,IAAWhD,EAAP9D,EAAI,EAAY8D,EAAUgD,EAAII,SAASlH,MAC9CoC,EAAEiF,iBAAiBvD,GAAmB,IAAV6C,EAAgBG,EAAIR,SAEpD,EACAe,iBAAkB,SAAUvD,EAAS6C,EAAOL,GAC1C,IAAIlC,EAAWhC,EAAEnF,KAAK4G,YAAYC,GAC9BkC,EAAU5D,EAAEgD,UAAUhB,GAC1BhC,EAAEnF,KAAKkH,YAAYL,EAASM,GAC5B,IAAIkD,EAASxD,EAAQI,cACjBoD,GAA4C,QAAlCA,EAAOhH,SAAS2D,eAC5B7B,EAAEnF,KAAKkH,YAAYmD,EAAQlD,GAE7B,IACI0C,EAAM,CACRhD,QAASA,EACTM,SAAUA,EACV4B,QAASA,EACTuB,KALSzD,EAAQ0D,aAOnB,SAASC,EAAsBC,GAC7BZ,EAAIY,gBAAkBA,EACtBtF,EAAE4E,MAAMC,IAAI,gBAAiBH,GAC7BA,EAAIhD,QAAQ6D,UAAYb,EAAIY,gBAC5BtF,EAAE4E,MAAMC,IAAI,kBAAmBH,GAC/B1E,EAAE4E,MAAMC,IAAI,WAAYH,GACxBR,GAAYA,EAASzJ,KAAKiK,EAAIhD,QAChC,CAMA,GALA1B,EAAE4E,MAAMC,IAAI,sBAAuBH,IACnCQ,EAASR,EAAIhD,QAAQI,gBAC2B,QAAlCoD,EAAOhH,SAAS2D,gBAA4BqD,EAAOM,aAAa,aAC5EN,EAAOO,aAAa,WAAY,MAE7Bf,EAAIS,KAGP,OAFAnF,EAAE4E,MAAMC,IAAI,WAAYH,QACxBR,GAAYA,EAASzJ,KAAKiK,EAAIhD,UAIhC,GADA1B,EAAE4E,MAAMC,IAAI,mBAAoBH,GAC3BA,EAAId,QAIT,GAAIW,GAAS3E,EAAM8F,OAAQ,CACzB,IAAIC,EAAS,IAAID,OAAO1F,EAAE4F,UAC1BD,EAAOE,UAAY,SAAUC,GAC3BT,EAAsBS,EAAIC,KAC5B,EACAJ,EAAOK,YAAYC,KAAKC,UAAU,CAChClE,SAAU0C,EAAI1C,SACdmD,KAAMT,EAAIS,KACVgB,gBAAgB,IAEpB,MACEd,EAAsBrF,EAAEoG,UAAU1B,EAAIS,KAAMT,EAAId,QAASc,EAAI1C,gBAd7DqD,EAAsBrF,EAAEnF,KAAKqF,OAAOwE,EAAIS,MAgB5C,EACAiB,UAAW,SAAUjD,EAAMS,EAAS5B,GAClC,IAAI0C,EAAM,CACRS,KAAMhC,EACNS,QAASA,EACT5B,SAAUA,GAGZ,GADAhC,EAAE4E,MAAMC,IAAI,kBAAmBH,IAC1BA,EAAId,QACP,MAAM,IAAIzH,MAAM,iBAAmBuI,EAAI1C,SAAW,qBAIpD,OAFA0C,EAAIvE,OAASH,EAAEqG,SAAS3B,EAAIS,KAAMT,EAAId,SACtC5D,EAAE4E,MAAMC,IAAI,iBAAkBH,GACvBtE,EAAM8F,UAAUlG,EAAEnF,KAAKqF,OAAOwE,EAAIvE,QAASuE,EAAI1C,SACxD,EACAqE,SAAU,SAAUlD,EAAMS,GACxB,IAAI0C,EAAO1C,EAAQ0C,KACnB,GAAIA,EAAM,CACR,IAAK,IAAIxC,KAASwC,EAChB1C,EAAQE,GAASwC,EAAKxC,UAEjBF,EAAQ0C,IACjB,CACA,IAAIC,EAAY,IAAIC,EAGpB,OAFAC,EAASF,EAAWA,EAAU7I,KAAMyF,GACpCuD,EAAavD,EAAMoD,EAAW3C,EAAS2C,EAAU7I,KAAM,GAmN3D,SAAiBiJ,GACf,IAAIC,EAAQ,GACRC,EAAOF,EAAKjJ,KAAKoJ,KACrB,KAAOD,IAASF,EAAKI,MACnBH,EAAMI,KAAKH,EAAK3L,OAChB2L,EAAOA,EAAKC,KAEd,OAAOF,CACT,CA1NW7J,CAAQwJ,EACjB,EACA3B,MAAO,CACLqC,IAAK,CAAC,EACN7E,IAAK,SAAU8E,EAAMhD,GACnB,IAAIU,EAAQ5E,EAAE4E,MAAMqC,IACpBrC,EAAMsC,GAAQtC,EAAMsC,IAAS,GAC7BtC,EAAMsC,GAAMF,KAAK9C,EACnB,EACAW,IAAK,SAAUqC,EAAMxC,GACnB,IAAIyC,EAAYnH,EAAE4E,MAAMqC,IAAIC,GAC5B,GAAKC,GAAcA,EAAUtJ,OAG7B,IAAK,IAAWqG,EAAPtG,EAAI,EAAasG,EAAWiD,EAAUvJ,MAC7CsG,EAASQ,EAEb,GAEFtE,MAAOA,GAGT,SAASA,EAAMC,EAAMC,EAASC,EAAO6G,GACnC3H,KAAKY,KAAOA,EACZZ,KAAKa,QAAUA,EACfb,KAAKc,MAAQA,EACbd,KAAK5B,OAAqC,GAA3BuJ,GAAc,IAAIvJ,MACnC,CAsCA,SAASwJ,EAAaC,EAASC,EAAKpE,EAAMqE,GACxCF,EAAQG,UAAYF,EACpB,IAAIG,EAAQJ,EAAQ1F,KAAKuB,GACzB,GAAIuE,GAASF,GAAcE,EAAM,GAAI,CACnC,IAAIC,EAAmBD,EAAM,GAAG7J,OAChC6J,EAAME,OAASD,EACfD,EAAM,GAAKA,EAAM,GAAG5G,MAAM6G,EAC5B,CACA,OAAOD,CACT,CACA,SAAShB,EAAavD,EAAMoD,EAAW3C,EAASiE,EAAWC,EAAUC,GACnE,IAAK,IAAIjE,KAASF,EAChB,GAAKA,EAAQtC,eAAewC,IAAWF,EAAQE,GAA/C,CAGA,IAAIkE,EAAWpE,EAAQE,GACvBkE,EAAWxH,MAAMC,QAAQuH,GAAYA,EAAW,CAACA,GACjD,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAASnK,SAAUoK,EAAG,CACxC,GAAIF,GAAWA,EAAQG,OAASpE,EAAQ,IAAMmE,EAC5C,OAEF,IAAIE,EAAaH,EAASC,GACtBzE,EAAS2E,EAAW3E,OACpBgE,IAAeW,EAAWX,WAC1BY,IAAWD,EAAWC,OACtB7H,EAAQ4H,EAAW5H,MACvB,GAAI6H,IAAWD,EAAWb,QAAQvI,OAAQ,CACxC,IAAIsJ,EAAQF,EAAWb,QAAQtK,WAAW0K,MAAM,aAAa,GAC7DS,EAAWb,QAAUrF,OAAOkG,EAAWb,QAAQpF,OAAQmG,EAAQ,IACjE,CAEA,IADA,IAAIf,EAAUa,EAAWb,SAAWa,EAC3BG,EAAcT,EAAUf,KAAMS,EAAMO,EAAUQ,IAAgB/B,EAAUQ,QAC3EgB,GAAWR,GAAOQ,EAAQQ,OADuDhB,GAAOe,EAAYpN,MAAM2C,OAAQyK,EAAcA,EAAYxB,KAAM,CAItJ,IAAI0B,EAAMF,EAAYpN,MACtB,GAAIqL,EAAU1I,OAASsF,EAAKtF,OAC1B,OAEF,KAAI2K,aAAepI,GAAnB,CAGA,IACIsH,EADAe,EAAc,EAElB,GAAIL,EAAQ,CAEV,KADAV,EAAQL,EAAaC,EAASC,EAAKpE,EAAMqE,KAC3BE,EAAME,OAASzE,EAAKtF,OAChC,MAEF,IAAIJ,EAAOiK,EAAME,MACbc,EAAKhB,EAAME,MAAQF,EAAM,GAAG7J,OAC5B8K,EAAIpB,EAER,IADAoB,GAAKL,EAAYpN,MAAM2C,OAChBJ,GAAQkL,GAEbA,IADAL,EAAcA,EAAYxB,MACT5L,MAAM2C,OAIzB,GADA0J,EADAoB,GAAKL,EAAYpN,MAAM2C,OAEnByK,EAAYpN,iBAAiBkF,EAC/B,SAEF,IAAK,IAAIwI,EAAIN,EAAaM,IAAMrC,EAAUQ,OAAS4B,EAAID,GAAyB,iBAAZE,EAAE1N,OAAqB0N,EAAIA,EAAE9B,KAC/F2B,IACAE,GAAKC,EAAE1N,MAAM2C,OAEf4K,IACAD,EAAMrF,EAAKrC,MAAMyG,EAAKoB,GACtBjB,EAAME,OAASL,CACjB,MAEE,KADAG,EAAQL,EAAaC,EAAS,EAAGkB,EAAKhB,IAEpC,SAGA/J,EAAOiK,EAAME,MAAjB,IACIiB,EAAWnB,EAAM,GACjBjE,EAAS+E,EAAI1H,MAAM,EAAGrD,GACtBqL,EAAQN,EAAI1H,MAAMrD,EAAOoL,EAAShL,QAClC0K,EAAQhB,EAAMiB,EAAI3K,OAClBkK,GAAWQ,EAAQR,EAAQQ,QAC7BR,EAAQQ,MAAQA,GAElB,IAAIQ,EAAaT,EAAYU,KAW7B,GAVIvF,IACFsF,EAAatC,EAASF,EAAWwC,EAAYtF,GAC7C8D,GAAO9D,EAAO5F,QAEhBoL,EAAY1C,EAAWwC,EAAYN,GAEnCH,EAAc7B,EAASF,EAAWwC,EADpB,IAAI3I,EAAM0D,EAAON,EAASxD,EAAEqG,SAASwC,EAAUrF,GAAUqF,EAAUtI,EAAOsI,IAEpFC,GACFrC,EAASF,EAAW+B,EAAaQ,GAE/BL,EAAc,EAAG,CACnB,IAAIS,EAAgB,CAClBhB,MAAOpE,EAAQ,IAAMmE,EACrBM,MAAOA,GAET7B,EAAavD,EAAMoD,EAAW3C,EAAS0E,EAAYU,KAAMzB,EAAK2B,GAC1DnB,GAAWmB,EAAcX,MAAQR,EAAQQ,QAC3CR,EAAQQ,MAAQW,EAAcX,MAElC,CA9DA,CA+DF,CACF,CA3FA,CA6FJ,CACA,SAAS/B,IACP,IAAI9I,EAAO,CACTxC,MAAO,KACP8N,KAAM,KACNlC,KAAM,MAEJC,EAAO,CACT7L,MAAO,KACP8N,KAAMtL,EACNoJ,KAAM,MAERpJ,EAAKoJ,KAAOC,EACZtH,KAAK/B,KAAOA,EACZ+B,KAAKsH,KAAOA,EACZtH,KAAK5B,OAAS,CAChB,CACA,SAAS4I,EAASE,EAAME,EAAM3L,GAC5B,IAAI4L,EAAOD,EAAKC,KACZqC,EAAU,CACZjO,MAAOA,EACP8N,KAAMnC,EACNC,KAAMA,GAKR,OAHAD,EAAKC,KAAOqC,EACZrC,EAAKkC,KAAOG,EACZxC,EAAK9I,SACEsL,CACT,CACA,SAASF,EAAYtC,EAAME,EAAMuC,GAE/B,IADA,IAAItC,EAAOD,EAAKC,KACPlJ,EAAI,EAAGA,EAAIwL,GAAStC,IAASH,EAAKI,KAAMnJ,IAC/CkJ,EAAOA,EAAKA,KAEdD,EAAKC,KAAOA,EACZA,EAAKkC,KAAOnC,EACZF,EAAK9I,QAAUD,CACjB,CAUA,GAtMAgC,EAAMT,MAAQa,EAOdI,EAAM8F,UAAY,SAASA,EAAUvF,EAAGqB,GACtC,GAAgB,iBAALrB,EACT,OAAOA,EAET,GAAIH,MAAMC,QAAQE,GAAI,CACpB,IAAIpD,EAAI,GAIR,OAHAoD,EAAEY,SAAQ,SAAU8H,GAClB9L,GAAK2I,EAAUmD,EAAGrH,EACpB,IACOzE,CACT,CACA,IAAImH,EAAM,CACRrE,KAAMM,EAAEN,KACRC,QAAS4F,EAAUvF,EAAEL,QAAS0B,GAC9BsH,IAAK,OACLC,QAAS,CACP,QACA5I,EAAEN,MAEJmJ,WAAY,CAAC,EACbxH,SAAUA,GAERyH,EAAU9I,EAAEJ,MACZkJ,IACEjJ,MAAMC,QAAQgJ,GAChBjJ,MAAMK,UAAUmG,KAAKjC,MAAML,EAAI6E,QAASE,GAExC/E,EAAI6E,QAAQvC,KAAKyC,IAGrBzJ,EAAE4E,MAAMC,IAAI,OAAQH,GACpB,IAAI8E,EAAa,GACjB,IAAK,IAAItC,KAAQxC,EAAI8E,WACnBA,GAAc,IAAMtC,EAAO,MAAQxC,EAAI8E,WAAWtC,IAAS,IAAIxG,QAAQ,KAAM,UAAY,IAE3F,MAAO,IAAMgE,EAAI4E,IAAM,WAAa5E,EAAI6E,QAAQG,KAAK,KAAO,IAAMF,EAAa,IAAM9E,EAAIpE,QAAU,KAAOoE,EAAI4E,IAAM,GACtH,GA2JK1J,EAAM0C,SACT,OAAK1C,EAAM+J,kBAGN3J,EAAEC,6BACLL,EAAM+J,iBAAiB,WAAW,SAAU7D,GAC1C,IAAI8D,EAAU3D,KAAK4D,MAAM/D,EAAIC,MACzBlG,EAAO+J,EAAQ5H,SACfmD,EAAOyE,EAAQzE,KACfgB,EAAiByD,EAAQzD,eAC7BvG,EAAMoG,YAAYhG,EAAEoG,UAAUjB,EAAMnF,EAAEgD,UAAUnD,GAAOA,IACnDsG,GACFvG,EAAMkK,OAEV,IAAG,GAEE9J,GAdEA,EAgBX,IAAI+J,EAAS/J,EAAEnF,KAAKwH,gBAOpB,SAAS2H,IACFhK,EAAEZ,QACLY,EAAEsE,cAEN,CACA,GAXIyF,IACF/J,EAAE4F,SAAWmE,EAAOvH,IAChBuH,EAAOvE,aAAa,iBACtBxF,EAAEZ,QAAS,KAQVY,EAAEZ,OAAQ,CACb,IAAI6K,EAAa3H,SAAS2H,WACP,YAAfA,GAA2C,gBAAfA,GAAgCF,GAAUA,EAAOG,MAC/E5H,SAASqH,iBAAiB,mBAAoBK,GAE1CtL,OAAOyL,sBACTzL,OAAOyL,sBAAsBH,GAE7BtL,OAAO0L,WAAWJ,EAAgC,GAGxD,CACA,OAAOhK,CACT,CA5gBY,CADkB,oBAAXtB,OAAyBA,OAAsC,oBAAtB2L,mBAAqCjN,gBAAgBiN,kBAAoBjN,KAAO,CAAC,GA8gBzIyB,EAAOC,UACTD,EAAOC,QAAUK,QAEW,IAAnBO,IACTA,EAAeP,MAAQA,EAE3B,CArhBA,CAqhBEQ,GACFR,MAAM6D,UAAUsH,MAAQ,CACtB,QAAW,CACT,CACEhD,QAAS,kCACTE,YAAY,EACZY,QAAQ,GAEV,CACEd,QAAS,mBACTE,YAAY,EACZY,QAAQ,IAGZ,OAAU,CACRd,QAAS,iDACTc,QAAQ,GAEV,aAAc,CACZd,QAAS,2FACTE,YAAY,EACZhE,OAAQ,CAAE,YAAe,UAE3B,QAAW,6GACX,QAAW,qBACX,SAAY,cACZ,OAAU,4DACV,SAAY,+CACZ,YAAe,iBAEhB,SAAUrE,GACT,SAASoL,EAAevI,EAAU4F,GAChC,MAAO,MAAQ5F,EAASwI,cAAgB5C,EAAQ,KAClD,CACAhH,OAAO6J,iBAAiBtL,EAAM6D,UAAU,qBAAuB,CAAC,EAAG,CACjE0H,kBAAmB,CACjBxP,MAAO,SAAUwJ,EAAK1C,EAAU2I,EAAoBC,GAClD,GAAIlG,EAAI1C,WAAaA,EAArB,CAGA,IAAI6I,EAAanG,EAAImG,WAAa,GAClCnG,EAAIS,KAAOT,EAAIS,KAAKzE,QAAQiK,GAAoB,SAAUjD,GACxD,GAA6B,mBAAlBkD,IAAiCA,EAAclD,GACxD,OAAOA,EAIT,IAFA,IACIoD,EADAlN,EAAIiN,EAAWhN,QAEqD,IAAjE6G,EAAIS,KAAK/G,QAAQ0M,EAAcP,EAAevI,EAAUpE,OAC3DA,EAGJ,OADAiN,EAAWjN,GAAK8J,EACToD,CACT,IACApG,EAAId,QAAUzE,EAAM6D,UAAU+H,MAd9B,CAeF,GAEFC,qBAAsB,CACpB9P,MAAO,SAAUwJ,EAAK1C,GACpB,GAAI0C,EAAI1C,WAAaA,GAAa0C,EAAImG,WAAtC,CAGAnG,EAAId,QAAUzE,EAAM6D,UAAUhB,GAC9B,IAAIiG,EAAI,EACJgD,EAAOrK,OAAOqK,KAAKvG,EAAImG,aAC3B,SAASK,EAAW/K,GAClB,IAAK,IAAIvC,EAAI,EAAGA,EAAIuC,EAAOtC,UACrBoK,GAAKgD,EAAKpN,QADmBD,IAAK,CAItC,IAAIkG,EAAQ3D,EAAOvC,GACnB,GAAqB,iBAAVkG,GAAsBA,EAAMxD,SAAoC,iBAAlBwD,EAAMxD,QAAsB,CACnF,IAAIsI,EAAIqC,EAAKhD,GACTkD,EAAIzG,EAAImG,WAAWjC,GACnBrL,EAAqB,iBAAVuG,EAAqBA,EAAQA,EAAMxD,QAC9CwK,EAAcP,EAAevI,EAAU4G,GACvChB,EAAQrK,EAAEa,QAAQ0M,GACtB,GAAIlD,GAAS,EAAG,GACZK,EACF,IAAIxE,EAASlG,EAAE6N,UAAU,EAAGxD,GACxByD,EAAS,IAAIlM,EAAMiB,MAAM4B,EAAU7C,EAAMkH,SAAS8E,EAAGzG,EAAId,SAAU,YAAc5B,EAAUmJ,GAC3FrC,EAAQvL,EAAE6N,UAAUxD,EAAQkD,EAAYjN,QACxCyN,EAAc,GACd7H,GACF6H,EAAYtE,KAAKjC,MAAMuG,EAAaJ,EAAW,CAACzH,KAElD6H,EAAYtE,KAAKqE,GACbvC,GACFwC,EAAYtE,KAAKjC,MAAMuG,EAAaJ,EAAW,CAACpC,KAE7B,iBAAVhF,EACT3D,EAAOoL,OAAOxG,MAAM5E,EAAQ,CAC1BvC,EACA,GACA4N,OAAOF,IAETxH,EAAMxD,QAAUgL,CAEpB,CACF,MAAWxH,EAAMxD,SACf4K,EAAWpH,EAAMxD,QAErB,CACA,OAAOH,CACT,CACA+K,CAAWxG,EAAIvE,OA5Cf,CA6CF,IAGN,CA9EA,CA8EEhB,OACFA,MAAM6D,UAAUyI,EAAItM,MAAM6D,UAAUK,OAAO,QAAS,CAClD,QAAW,CACTiE,QAAS,sEACTc,QAAQ,GAEV,OAAU,CACRd,QAAS,sCACTc,QAAQ,GAEV,aAAc,CACZd,QAAS,mFACTE,YAAY,GAEd,QAAW,oVACX,SAAY,wBACZ,OAAU,oHACV,SAAY,oDAEdrI,MAAM6D,UAAUO,aAAa,IAAK,SAAU,CAC1C,KAAQ,CACN+D,QAAS,2CACTc,QAAQ,KAGZjJ,MAAM6D,UAAUO,aAAa,IAAK,SAAU,CAC1C,MAAS,CACP+D,QAAS,4FACTE,YAAY,EACZY,QAAQ,EACR7H,MAAO,WACPiD,OAAQ,CACN,OAAU,CACR,CACE8D,QAAS,2BACTE,YAAY,GAEdrI,MAAM6D,UAAUyI,EAAU,QAE5B,KAAQtM,MAAM6D,UAAUyI,EAAQ,KAChC,QAAWtM,MAAM6D,UAAUyI,EAAW,QACtC,aAAc,CACZ,CACEnE,QAAS,+BACTE,YAAY,GAEd,CACEF,QAAS,+BACTE,YAAY,EACZjH,MAAO,aAGX,UAAa,CACX+G,QAAS,gBACTE,YAAY,EACZjH,MAAO,WAET,iBAAkB,KAClB,YAAe,kBACf,WAAc,CACZ+G,QAAS,YACT9D,OAAQrE,MAAM6D,UAAUyI,OAKhCtM,MAAM6D,UAAUO,aAAa,IAAK,WAAY,CAAE,SAAY,sIACrDpE,MAAM6D,UAAUyI,EAAW,QACjC,SAAUtM,GACT,IAAIuM,EAAU,osBACVC,EAAU,uCAAuCzJ,OAAOxB,QAAQ,cAAc,WAChF,OAAOgL,EAAQxJ,MACjB,IACA/C,EAAM6D,UAAU4I,IAAMzM,EAAM6D,UAAUK,OAAO,IAAK,CAChD,aAAc,CACZ,CACEiE,QAASrF,OAAO,gEAAgEC,OAAOxB,QAAQ,cAAc,WAC3G,OAAOgL,EAAQxJ,MACjB,KACAsF,YAAY,GAEd,iCACA,oCACA,kEAEF,QAAWkE,EACX,OAAU,CACRpE,QAAS,iJACTc,QAAQ,GAEV,SAAY,yHACZ,QAAW,uBAEbjJ,EAAM6D,UAAUO,aAAa,MAAO,SAAU,CAC5C,OAAU,CACR+D,QAASrF,OAAO,2BAA2BC,OAAS,MAAQ,mDAAmDA,OAAS,IAAM,kDAAkDA,OAAOxB,QAAQ,eAAe,WAC5M,OAAOiL,CACT,IAAK,KACLnE,YAAY,EACZY,QAAQ,EACR5E,OAAQ,CACN,OAAU,eACV,SAAY,IACZ,YAAe,OAGnB,aAAc,CACZ8D,QAAS,oCACT/G,MAAO,SACP6H,QAAQ,KAGZjJ,EAAM6D,UAAUO,aAAa,MAAO,UAAW,CAC7C,mBAAoB,CAClB+D,QAAS,8DACT9D,OAAQ,CACN,SAAY,OACZ,QAAW,CACT8D,QAAS,WACT/G,MAAO,aACPiD,OAAQrE,EAAM6D,UAAU4I,SAKhCzM,EAAM6D,UAAUO,aAAa,MAAO,WAAY,CAC9C,eAAgB,CACd+D,QAAS,KACT/G,MAAO,iBAGXpB,EAAM6D,UAAUO,aAAa,MAAO,aAAc,CAChD,cAAe,CACb+D,QAAS,6EACTE,YAAY,EACZY,QAAQ,EACR5E,OAAQrE,EAAM6D,UAAUK,OAAO,MAAO,CAAC,MAG3ClE,EAAM6D,UAAUO,aAAa,SAAU,eAAgB,CAAE,aAAc,2BAA6BpE,EAAM6D,UAAU4I,IAAI,eAC1H,CAxEA,CAwEEzM,OACD,SAAUA,GACT,SAASuB,EAAQ4G,EAASuE,GACxB,OAAOvE,EAAQ5G,QAAQ,cAAc,SAAUiB,EAAGiG,GAChD,MAAO,MAAQiE,GAAcjE,GAAS,GACxC,GACF,CACA,SAASkE,EAAGxE,EAASuE,EAAcxD,GACjC,OAAOpG,OAAOvB,EAAQ4G,EAASuE,GAAexD,GAAS,GACzD,CACA,SAAS0D,EAAOzE,EAAS0E,GACvB,IAAK,IAAIpO,EAAI,EAAGA,EAAIoO,EAAWpO,IAC7B0J,EAAUA,EAAQ5G,QAAQ,aAAa,WACrC,MAAO,MAAQ4G,EAAU,GAC3B,IAEF,OAAOA,EAAQ5G,QAAQ,YAAa,YACtC,CACA,IAAIuL,EACI,4GADJA,EAEe,qCAFfA,EAGU,2NAHVA,EAIK,uXAET,SAASC,EAAkBC,GACzB,MAAO,SAAWA,EAAMC,OAAO1L,QAAQ,KAAM,KAAO,MACtD,CACA,IAAI2L,EAA0BH,EAAkBD,GAC5CK,EAAWrK,OAAOiK,EAAkBD,EAAoB,IAAMA,EAA+B,IAAMA,EAA0B,IAAMA,IACnIM,EAAkBL,EAAkBD,EAA+B,IAAMA,EAA0B,IAAMA,GACzGO,EAAwBN,EAAkBD,EAAoB,IAAMA,EAA+B,IAAMA,GACzGQ,EAAUV,EAAO,mCAAmC7J,OAAQ,GAC5DwK,EAAcX,EAAO,0BAA0B7J,OAAQ,GACvDgF,EAAO,qBAAqBhF,OAC5ByK,EAAcjM,EAAQ,qBAAqBwB,OAAQ,CACrDgF,EACAuF,IAEEG,EAAalM,EAAQ,mCAAmCwB,OAAQ,CAClEqK,EACAI,IAEE/F,EAAQ,mBAAmB1E,OAC3B2K,EAA6BnM,EAAQ,yCAAyCwB,OAAQ,CACxF0K,EACAhG,IAEEkG,EAAepM,EAAQ,2CAA2CwB,OAAQ,CAC5EuK,EACAC,EACA9F,IAEEmG,EAAQrM,EAAQ,yBAAyBwB,OAAQ,CAAC4K,IAClDE,EAAiBtM,EAAQ,mDAAmDwB,OAAQ,CACtF6K,EACAH,EACAhG,IAEEqG,EAAa,CACf,QAAWX,EACX,YAAe,iBAEbY,EAAY,8CAA8ChL,OAC1DiL,EAAgB,wBAAwBjL,OACxCkL,EAAiB,kCAAkClL,OACvD/C,EAAM6D,UAAUqK,OAASlO,EAAM6D,UAAUK,OAAO,QAAS,CACvD,OAAU,CACR,CACEiE,QAASwE,EAAG,kBAAkB5J,OAAQ,CAACkL,IACvC5F,YAAY,EACZY,QAAQ,GAEV,CACEd,QAASwE,EAAG,mBAAmB5J,OAAQ,CAACiL,IACxC3F,YAAY,EACZY,QAAQ,IAGZ,aAAc,CACZ,CACEd,QAASwE,EAAG,qCAAqC5J,OAAQ,CAAC0K,IAC1DpF,YAAY,EACZhE,OAAQyJ,GAEV,CACE3F,QAASwE,EAAG,wCAAwC5J,OAAQ,CAC1DgF,EACA8F,IAEFxF,YAAY,EACZhE,OAAQyJ,GAEV,CACE3F,QAASwE,EAAG,4BAA4B5J,OAAQ,CAACgF,IACjDM,YAAY,GAEd,CACEF,QAASwE,EAAG,oBAAoB5J,OAAQ,CACtCmK,EACAM,IAEFnF,YAAY,EACZhE,OAAQyJ,GAEV,CACE3F,QAASwE,EAAG,yBAAyB5J,OAAQ,CAAC0K,IAC9CpF,YAAY,EACZhE,OAAQyJ,GAEV,CACE3F,QAASwE,EAAG,oBAAoB5J,OAAQ,CAACgF,IACzCM,YAAY,GAEd,CACEF,QAASwE,EAAG,mCAAmC5J,OAAQ,CAAC2K,IACxDrF,YAAY,EACZhE,OAAQyJ,GAEV,CACE3F,QAASwE,EAAG,2EAA2E5J,OAAQ,CAC7F8K,EACAR,EACAtF,IAEF1D,OAAQyJ,IAGZ,QAAWX,EACX,OAAU,kJACV,SAAY,uDACZ,YAAe,2BAEjBnN,EAAM6D,UAAUO,aAAa,SAAU,SAAU,CAC/C,MAAS,CACP+D,QAAS,OACT/G,MAAO,cAGXpB,EAAM6D,UAAUO,aAAa,SAAU,cAAe,CACpD,kBAAmB,CACjB+D,QAASwE,EAAG,yBAAyB5J,OAAQ,CAACgF,IAC9CM,YAAY,EACZjH,MAAO,iBAGXpB,EAAM6D,UAAUO,aAAa,SAAU,aAAc,CACnD,UAAa,CACX+D,QAASwE,EAAG,+DAA+D5J,OAAQ,CAACgF,IACpFM,YAAY,EACZhE,OAAQ,CAAE,YAAe,OAE3B,kBAAmB,CACjB8D,QAASwE,EAAG,kFAAkF5J,OAAQ,CAACwK,IACvGlF,YAAY,EACZjH,MAAO,aACPiD,OAAQyJ,GAEV,cAAe,CACb3F,QAASwE,EAAG,+DAA+D5J,OAAQ,CACjF8K,EACAJ,IAEFpJ,OAAQyJ,EACR1M,MAAO,cAET,yBAA0B,CACxB+G,QAASwE,EAAG,8BAA8B5J,OAAQ,CAAC8K,IACnDxF,YAAY,EACZhE,OAAQyJ,EACR1M,MAAO,cAET,iBAAkB,CAChB+G,QAASwE,EAAG,yBAAyB5J,OAAQ,CAC3CgF,EACAuF,IAEFjJ,OAAQ,CACN,SAAYsI,EAAG,SAAS5J,OAAQ,CAACgF,IACjC,QAAW,CACTI,QAASrF,OAAOwK,GAChBlM,MAAO,aACPiD,OAAQyJ,KAId,YAAa,CACX3F,QAASwE,EAAG,kKAAkK5J,OAAQ,CACpLmK,EACAM,EACAzF,EACA8F,EACAV,EAASpK,OACTwK,EACA,kBAAkBxK,SAEpBsF,YAAY,EACZhE,OAAQ,CACN,mBAAoB,CAClB8D,QAASwE,EAAG,+BAA+B5J,OAAQ,CACjDyK,EACAD,IAEFlF,YAAY,EACZY,QAAQ,EACR5E,OAAQrE,EAAM6D,UAAUqK,QAE1B,QAAWf,EACX,aAAc,CACZhF,QAASrF,OAAO+K,GAChB5E,QAAQ,EACR5E,OAAQyJ,GAEV,YAAe,UAGnB,aAAgB,CACd3F,QAAS,gBACTE,YAAY,EACZjH,MAAO,WACPiD,OAAQ,CACN,UAAa,CACX8D,QAAS,iGACTE,YAAY,EACZjH,MAAO,eAKf,IAAI+M,EAA2BH,EAAgB,IAAMD,EACjDK,EAAkC7M,EAAQ,iEAAiEwB,OAAQ,CAACoL,IACpHE,EAAkBzB,EAAOrL,EAAQ,+BAA+BwB,OAAQ,CAACqL,IAAmC,GAC5GE,EAAa,wEAAwEvL,OACrFwL,EAAOhN,EAAQ,0BAA0BwB,OAAQ,CACnD0K,EACAY,IAEFrO,EAAM6D,UAAUO,aAAa,SAAU,aAAc,CACnD,UAAa,CACX+D,QAASwE,EAAG,6EAA6E5J,OAAQ,CAC/FuL,EACAC,IAEFlG,YAAY,EACZY,QAAQ,EACR5E,OAAQ,CACN,OAAU,CACR8D,QAASwE,EAAG,iBAAiB5J,OAAQ,CAACuL,IACtClN,MAAO,WAET,sBAAuB,CACrB+G,QAASwE,EAAG,aAAa5J,OAAQ,CAACsL,IAClChK,OAAQrE,EAAM6D,UAAUqK,QAE1B,aAAc,CACZ/F,QAASrF,OAAO2K,GAChBpJ,OAAQ,CAAE,YAAe,OAE3B,YAAe,WAIrB,IAAImK,EAAe,aAAazL,OAC5B0L,EAAsB7B,EAAOrL,EAAQ,+BAA+BwB,OAAQ,CAACqL,IAAmC,GAChHM,EAAiBnN,EAAQ,qCAAqCwB,OAAQ,CACxE0L,EACAD,IAEEG,EAAsB/B,EAAOrL,EAAQ,mEAAmEwB,OAAQ,CAACoL,IAA4B,GAC7IS,EAAiBrN,EAAQ,qCAAqCwB,OAAQ,CACxE4L,EACAH,IAEF,SAASK,EAA0BC,EAAeC,GAChD,MAAO,CACL,cAAiB,CACf5G,QAASwE,EAAG,6BAA6B5J,OAAQ,CAAC+L,IAClDzG,YAAY,EACZhE,OAAQ,CACN,gBAAiB,CACf8D,QAASwE,EAAG,sCAAsC5J,OAAQ,CACxDgM,EACAP,IAEFnG,YAAY,EACZhE,OAAQ,CAAE,YAAe,OAE3B,YAAe,UACf,WAAc,CACZ8D,QAAS,UACT/G,MAAO,kBACPiD,OAAQrE,EAAM6D,UAAUqK,UAI9B,OAAU,UAEd,CACAlO,EAAM6D,UAAUO,aAAa,SAAU,SAAU,CAC/C,uBAAwB,CACtB,CACE+D,QAASwE,EAAG,4DAA4D5J,OAAQ,CAAC2L,IACjFrG,YAAY,EACZY,QAAQ,EACR5E,OAAQwK,EAA0BH,EAAgBD,IAEpD,CACEtG,QAASwE,EAAG,4CAA4C5J,OAAQ,CAAC6L,IACjEvG,YAAY,EACZY,QAAQ,EACR5E,OAAQwK,EAA0BD,EAAgBD,KAGtD,KAAQ,CACNxG,QAASrF,OAAOiL,GAChB9E,QAAQ,KAGZjJ,EAAM6D,UAAUmL,OAAShP,EAAM6D,UAAUoL,GAAKjP,EAAM6D,UAAUqK,MAChE,CA7TA,CA6TElO,OACD,SAAUA,GACT,IAAIkP,EAAS,8EACblP,EAAM6D,UAAUsL,IAAM,CACpB,QAAW,mBACX,OAAU,CACRhH,QAASrF,OAAO,aAAe,sBAAsBC,OAAS,IAAMmM,EAAOnM,OAAS,MAAQ,kBAAkBA,QAC9GsB,OAAQ,CACN,KAAQ,WACR,6BAA8B,CAC5B8D,QAAS,4FACTE,YAAY,EACZjH,MAAO,YAET,QAAW,CACT+G,QAAS,yCACTE,YAAY,KAIlB,IAAO,CACLF,QAASrF,OAAO,eAAiBoM,EAAOnM,OAAS,IAAM,8BAA8BA,OAAS,OAAQ,KACtGkG,QAAQ,EACR5E,OAAQ,CACN,SAAY,QACZ,YAAe,UACf,OAAU,CACR8D,QAASrF,OAAO,IAAMoM,EAAOnM,OAAS,KACtC3B,MAAO,SAIb,SAAY,CACV+G,QAASrF,OAAO,qDAAuDoM,EAAOnM,OAAS,iBACvFsF,YAAY,GAEd,OAAU,CACRF,QAAS+G,EACTjG,QAAQ,GAEV,SAAY,CACVd,QAAS,oFACTE,YAAY,GAEd,UAAa,gBACb,SAAY,CACVF,QAAS,kCACTE,YAAY,GAEd,YAAe,aAEjBrI,EAAM6D,UAAUsL,IAAY,OAAE9K,OAAO8C,KAAOnH,EAAM6D,UAAUsL,IAC5D,IAAIvD,EAAS5L,EAAM6D,UAAU+H,OACzBA,IACFA,EAAOzB,IAAIiF,WAAW,QAAS,OAC/BxD,EAAOzB,IAAIkF,aAAa,QAAS,OAErC,CAxDA,CAwDErP,OACD,SAAUA,GACT,IAAImN,EAAW,mfACXmC,EAAkB,6CAA6CvM,OAC/D/D,EAAY,CACdmJ,QAASrF,OAAO,aAAaC,OAASuM,EAAkB,gCAAgCvM,QACxFsF,YAAY,EACZhE,OAAQ,CACN,UAAa,CACX8D,QAAS,2CACT9D,OAAQ,CAAE,YAAe,OAE3B,YAAe,OAGnBrE,EAAM6D,UAAU0L,KAAOvP,EAAM6D,UAAUK,OAAO,QAAS,CACrD,OAAU,CACRiE,QAAS,iCACTE,YAAY,EACZY,QAAQ,GAEV,aAAc,CACZjK,EACA,CACEmJ,QAASrF,OAAO,aAAaC,OAASuM,EAAkB,+DAA+DvM,QACvHsF,YAAY,EACZhE,OAAQrF,EAAUqF,QAEpB,CACE8D,QAASrF,OAAO,kFAAkFC,OAASuM,EAAkB,aAAavM,QAC1IsF,YAAY,EACZhE,OAAQrF,EAAUqF,SAGtB,QAAW8I,EACX,SAAY,CACVnN,EAAM6D,UAAUsH,MAAMqE,SACtB,CACErH,QAAS,mBACTE,YAAY,IAGhB,OAAU,8IACV,SAAY,CACVF,QAAS,wEACTE,YAAY,GAEd,SAAY,uBAEdrI,EAAM6D,UAAUO,aAAa,OAAQ,SAAU,CAC7C,uBAAwB,CACtB+D,QAAS,iDACTc,QAAQ,EACR7H,MAAO,UAET,KAAQ,CACN+G,QAAS,4BACTc,QAAQ,KAGZjJ,EAAM6D,UAAUO,aAAa,OAAQ,aAAc,CACjD,WAAc,CACZ+D,QAAS,+BACTE,YAAY,EACZjH,MAAO,eAET,SAAY,CACV+G,QAAS,kGACT9D,OAAQ,CACN,aAAcrF,EACd,QAAWmO,EACX,YAAe,YACf,SAAY,UAGhB,OAAU,CACR,CACEhF,QAASrF,OAAO,gBAAgBC,OAASuM,EAAkB,0BAA0BvM,QACrFsF,YAAY,EACZhE,OAAQ,CACN,UAAarF,EAAUqF,OAAOoL,UAC9B,YAAe,KACf,SAAY,KACZ,aAAc,QAGlB,CACEtH,QAASrF,OAAO,yBAAyBC,OAASuM,EAAkB,qBAAqBvM,QACzFsF,YAAY,EACZjH,MAAO,SACPiD,OAAQ,CACN,UAAarF,EAAUqF,OAAOoL,UAC9B,OAAU,SACV,YAAe,KACf,SAAY,KACZ,aAAc,SAIpB,UAAa,CACXtH,QAASrF,OAAO,qJAAqJC,OAAOxB,QAAQ,cAAc,WAChM,OAAO4L,EAASpK,MAClB,KACAsF,YAAY,EACZhE,OAAQ,CAAE,YAAe,QAG/B,CA1GA,CA0GErE,OACFA,MAAM6D,UAAU6L,WAAa1P,MAAM6D,UAAUK,OAAO,QAAS,CAC3D,aAAc,CACZlE,MAAM6D,UAAUsH,MAAM,cACtB,CACEhD,QAAS,0GACTE,YAAY,IAGhB,QAAW,CACT,CACEF,QAAS,uBACTE,YAAY,GAEd,CACEF,QAAS,mdACTE,YAAY,IAGhB,SAAY,oGACZ,OAAU,CACRF,QAASrF,OAAO,aAAaC,OAAS,MAAS,eAAeA,OAAS,IAAM,0BAA0BA,OAAS,IAAM,4BAA4BA,OAAS,IAAM,sCAAsCA,OAAS,IAAM,gBAAgBA,OAAS,IAAM,oFAAoFA,OAAU,IAAM,YAAYA,QACrWsF,YAAY,GAEd,SAAY,8FAEdrI,MAAM6D,UAAU6L,WAAW,cAAc,GAAGvH,QAAU,uEACtDnI,MAAM6D,UAAUO,aAAa,aAAc,UAAW,CACpD,MAAS,CACP+D,QAASrF,OAAO,0DAA0DC,OAAS,KAAKA,OAAS,MAAQ,iEAAiEA,OAAS,IAAM,qIAAqIA,OAAS,IAAM,kEAAkEA,QAC/YsF,YAAY,EACZY,QAAQ,EACR5E,OAAQ,CACN,eAAgB,CACd8D,QAAS,4BACTE,YAAY,EACZjH,MAAO,iBACPiD,OAAQrE,MAAM6D,UAAU8L,OAE1B,kBAAmB,UACnB,cAAe,aAGnB,oBAAqB,CACnBxH,QAAS,gMACT/G,MAAO,YAET,UAAa,CACX,CACE+G,QAAS,sIACTE,YAAY,EACZhE,OAAQrE,MAAM6D,UAAU6L,YAE1B,CACEvH,QAAS,qFACTE,YAAY,EACZhE,OAAQrE,MAAM6D,UAAU6L,YAE1B,CACEvH,QAAS,kEACTE,YAAY,EACZhE,OAAQrE,MAAM6D,UAAU6L,YAE1B,CACEvH,QAAS,8eACTE,YAAY,EACZhE,OAAQrE,MAAM6D,UAAU6L,aAG5B,SAAY,8BAEd1P,MAAM6D,UAAUO,aAAa,aAAc,SAAU,CACnD,SAAY,CACV+D,QAAS,QACTc,QAAQ,EACR7H,MAAO,WAET,kBAAmB,CACjB+G,QAAS,2EACTc,QAAQ,EACR5E,OAAQ,CACN,uBAAwB,CACtB8D,QAAS,QACT/G,MAAO,UAET,cAAiB,CACf+G,QAAS,mEACTE,YAAY,EACZhE,OAAQ,CACN,4BAA6B,CAC3B8D,QAAS,YACT/G,MAAO,eAET+F,KAAMnH,MAAM6D,UAAU6L,aAG1B,OAAU,YAGd,kBAAmB,CACjBvH,QAAS,4EACTE,YAAY,EACZY,QAAQ,EACR7H,MAAO,cAGXpB,MAAM6D,UAAUO,aAAa,aAAc,WAAY,CACrD,mBAAoB,CAClB+D,QAAS,oFACTE,YAAY,EACZjH,MAAO,cAGPpB,MAAM6D,UAAU+H,SAClB5L,MAAM6D,UAAU+H,OAAOzB,IAAIiF,WAAW,SAAU,cAChDpP,MAAM6D,UAAU+H,OAAOzB,IAAIkF,aAAa,yNAAyNtM,OAAQ,eAE3Q/C,MAAM6D,UAAU+L,GAAK5P,MAAM6D,UAAU6L,WACrC1P,MAAM6D,UAAU+H,OAAS,CACvB,QAAW,CACTzD,QAAS,8BACTc,QAAQ,GAEV,OAAU,CACRd,QAAS,iBACTc,QAAQ,GAEV,QAAW,CACTd,QAAS,uHACTc,QAAQ,EACR5E,OAAQ,CACN,kBAAmB,CACjB8D,QAAS,6BACTE,YAAY,EACZY,QAAQ,EACR5E,OAAQ,MAEV,OAAU,CACR8D,QAAS,kBACTc,QAAQ,GAEV,YAAe,eACf,cAAe,YACf,KAAQ,eAGZ,MAAS,CACPd,QAAS,4BACTc,QAAQ,GAEV,IAAO,CACLd,QAAS,uHACTc,QAAQ,EACR5E,OAAQ,CACN,IAAO,CACL8D,QAAS,iBACT9D,OAAQ,CACN,YAAe,QACf,UAAa,iBAGjB,eAAgB,GAChB,aAAc,CACZ8D,QAAS,qCACT9D,OAAQ,CACN,YAAe,CACb,CACE8D,QAAS,KACT/G,MAAO,eAET,CACE+G,QAAS,mBACTE,YAAY,MAKpB,YAAe,OACf,YAAa,CACXF,QAAS,YACT9D,OAAQ,CAAE,UAAa,mBAI7B,OAAU,CACR,CACE8D,QAAS,kBACT/G,MAAO,gBAET,uBAGJpB,MAAM6D,UAAU+H,OAAY,IAAEvH,OAAO,cAAcA,OAAe,OAAIrE,MAAM6D,UAAU+H,OAAe,OACrG5L,MAAM6D,UAAU+H,OAAgB,QAAEvH,OAAO,mBAAmBA,OAASrE,MAAM6D,UAAU+H,OACrF5L,MAAMyF,MAAMxC,IAAI,QAAQ,SAAUsC,GACf,WAAbA,EAAIrE,OACNqE,EAAI8E,WAAkB,MAAI9E,EAAIpE,QAAQI,QAAQ,QAAS,KAE3D,IACAE,OAAOK,eAAe9B,MAAM6D,UAAU+H,OAAOzB,IAAK,aAAc,CAC9DpO,MAAO,SAAoB8T,EAASnP,GAClC,IAAIoP,EAAsB,CAAC,EAC3BA,EAAoB,YAAcpP,GAAQ,CACxCyH,QAAS,oCACTE,YAAY,EACZhE,OAAQrE,MAAM6D,UAAUnD,IAE1BoP,EAA2B,MAAI,uBAC/B,IAAIzL,EAAS,CACX,iBAAkB,CAChB8D,QAAS,4BACT9D,OAAQyL,IAGZzL,EAAO,YAAc3D,GAAQ,CAC3ByH,QAAS,UACT9D,OAAQrE,MAAM6D,UAAUnD,IAE1B,IAAIqP,EAAM,CAAC,EACXA,EAAIF,GAAW,CACb1H,QAASrF,OAAO,wFAAwFC,OAAOxB,QAAQ,OAAO,WAC5H,OAAOsO,CACT,IAAI,KACJxH,YAAY,EACZY,QAAQ,EACR5E,OAAQA,GAEVrE,MAAM6D,UAAUO,aAAa,SAAU,QAAS2L,EAClD,IAEFtO,OAAOK,eAAe9B,MAAM6D,UAAU+H,OAAOzB,IAAK,eAAgB,CAChEpO,MAAO,SAAUiU,EAAUtP,GACzBV,MAAM6D,UAAU+H,OAAOzB,IAAI9F,OAAO,gBAAgBwD,KAAK,CACrDM,QAASrF,OAAO,aAAaC,OAAS,MAAQiN,EAAW,IAAM,iDAAiDjN,OAAQ,KACxHsF,YAAY,EACZhE,OAAQ,CACN,YAAa,WACb,aAAc,CACZ8D,QAAS,WACT9D,OAAQ,CACN,MAAS,CACP8D,QAAS,yCACTE,YAAY,EACZjH,MAAO,CACLV,EACA,YAAcA,GAEhB2D,OAAQrE,MAAM6D,UAAUnD,IAE1B,YAAe,CACb,CACEyH,QAAS,KACT/G,MAAO,eAET,WAMZ,IAEFpB,MAAM6D,UAAUoM,KAAOjQ,MAAM6D,UAAU+H,OACvC5L,MAAM6D,UAAUqM,OAASlQ,MAAM6D,UAAU+H,OACzC5L,MAAM6D,UAAUsM,IAAMnQ,MAAM6D,UAAU+H,OACtC5L,MAAM6D,UAAUuM,IAAMpQ,MAAM6D,UAAUK,OAAO,SAAU,CAAC,GACxDlE,MAAM6D,UAAUwM,KAAOrQ,MAAM6D,UAAUuM,IACvCpQ,MAAM6D,UAAUyM,KAAOtQ,MAAM6D,UAAUuM,IACvCpQ,MAAM6D,UAAU0M,IAAMvQ,MAAM6D,UAAUuM,IACrC,SAAUpQ,GACT,IAAIwQ,EAAU,oCACV1U,EAAW,CACb,CACEqM,QAAS,sBACT/G,MAAO,WAET,CACE+G,QAAS,iCACTc,QAAQ,EACRZ,YAAY,GAEd,CACEF,QAAS,+CACTc,QAAQ,EACRZ,YAAY,GAEd,gBACA,iCAEEoI,EAAS,6IACTC,EAAW,wFACXC,EAAc,gBAClB3Q,EAAM6D,UAAU+M,IAAM,CACpB,UAAa,CACXzI,QAAS,6BACT/G,MAAO,aAET,QAAWoP,EACX,SAAY,sBACZ,QAAW,CACTrI,QAAS,oEACTE,YAAY,EACZhE,OAAQ,CAAE,YAAe,OAE3B,wBAAyB,CACvB8D,QAAS,4DACTE,YAAY,EACZjH,MAAO,cAET,sBAAuB,CACrB+G,QAAS,qCACTE,YAAY,EACZjH,MAAO,YAET,QAAW,CACT,CACE+G,QAAS,8EACT/G,MAAO,eACP6H,QAAQ,EACRZ,YAAY,GAEd,CACEF,QAAS,sIACT/G,MAAO,YACP6H,QAAQ,EACRZ,YAAY,GAEd,CACEF,QAAS,mJACT/G,MAAO,cACP6H,QAAQ,EACRZ,YAAY,GAEd,CACEF,QAAS,2EACT/G,MAAO,mBACP6H,QAAQ,GAEV,CACEd,QAAS,qDACT/G,MAAO,mBACP6H,QAAQ,EACRZ,YAAY,GAEd,CACEF,QAAS,qCACT/G,MAAO,iBACP6H,QAAQ,GAEV,CACEd,QAAS,sBACTE,YAAY,GAEd,aACA,CACEF,QAAS,6iBACTE,YAAY,IAGhB,gBAAiB,CACfF,QAAS,qCACTE,YAAY,GAEd,aAAc,CACZ,CACEF,QAAS,qGACTc,QAAQ,EACRZ,YAAY,GAEd,CACEF,QAAS,8BACTc,QAAQ,EACRZ,YAAY,GAEd,CACEF,QAAS,gCACTc,QAAQ,GAEV,CACEd,QAAS,gCACT/G,MAAO,6BACP6H,QAAQ,EACRZ,YAAY,EACZhE,OAAQ,CAAE,YAAe,OAE3B,CACE8D,QAAS,kCACT/G,MAAO,6BACP6H,QAAQ,EACR5E,OAAQ,CAAE,YAAe,OAE3B,CACE8D,QAAS,iHACT/G,MAAO,6BACP6H,QAAQ,EACRZ,YAAY,EACZhE,OAAQ,CAAE,YAAe,OAE3B,CACE8D,QAAS,wBACT/G,MAAO,mBACP6H,QAAQ,GAEV,CACEd,QAAS,gCACT/G,MAAO,CACL,6BACA,oBAEF6H,QAAQ,EACR5E,OAAQ,CAAE,YAAe,OAE3B,CACE8D,QAAS,wBACT/G,MAAO,iBACP6H,QAAQ,GAEV,CACEd,QAAS,gCACT/G,MAAO,CACL,6BACA,kBAEF6H,QAAQ,EACR5E,OAAQ,CAAE,YAAe,OAE3B,CACE8D,QAAS,gCACT/G,MAAO,YACP6H,QAAQ,EACRZ,YAAY,GAEd,CACEF,QAAS,0CACT/G,MAAO,CACL,6BACA,aAEF6H,QAAQ,EACRZ,YAAY,EACZhE,OAAQ,CAAE,YAAe,OAE3B,CACE8D,QAAS,4CACT/G,MAAO,cACP6H,QAAQ,EACRZ,YAAY,GAEd,CACEF,QAAS,oDACT/G,MAAO,CACL,6BACA,eAEF6H,QAAQ,EACRZ,YAAY,EACZhE,OAAQ,CAAE,YAAe,QAG7B,SAAYvI,EACZ,SAAY,CACVqM,QAAS,+CACTE,YAAY,EACZhE,OAAQ,CAAE,YAAe,OAE3B,SAAY,CACV8D,QAAS,aACTE,YAAY,GAEd,OAAUoI,EACV,SAAYC,EACZ,YAAeC,GAEjB,IAAIE,EAAuB,CACzB1I,QAAS,6FACTE,YAAY,EACZhE,OAAQrE,EAAM6D,UAAU+M,KAEtB1B,EAAS,CACX,CACE/G,QAAS,sCACT/G,MAAO,gBACP6H,QAAQ,EACR5E,OAAQ,CACN,UAAa,CACX8D,QAAS,2BACT/G,MAAO,SACPiD,OAAQ,CAAE,YAAe,mBAI/B,CACE8D,QAAS,8EACT/G,MAAO,iBACP6H,QAAQ,EACR5E,OAAQ,CACN,UAAa,CACX8D,QAAS,yCACT/G,MAAO,SACPiD,OAAQ,CAAE,YAAe,iBAE3B,cAAiBwM,IAGrB,CACE1I,QAAS,yBACT/G,MAAO,yBACP6H,QAAQ,GAEV,CACEd,QAAS,yBACT/G,MAAO,uBACP6H,QAAQ,GAEV,CACEd,QAAS,yBACT/G,MAAO,uBACP6H,QAAQ,EACR5E,OAAQ,CAAE,cAAiBwM,KAG/B7Q,EAAM6D,UAAUO,aAAa,MAAO,WAAY,CAC9C,OAAU8K,EACV,UAAa,CACX/G,QAAS,4IACTc,QAAQ,EACR5E,OAAQ,CACN,oBAAqB,CACnB8D,QAAS,uBACTE,YAAY,EACZhE,OAAQ,CACN,QAAWmM,EACX,OAAUtB,EACV,uBAAwB,CACtB,CACE/G,QAAS,+BACT/G,MAAO,aACP6H,QAAQ,EACRZ,YAAY,GAEd,CACEF,QAAS,+BACT/G,MAAO,CACL,aACA,8BAEF6H,QAAQ,EACRZ,YAAY,EACZhE,OAAQ,CAAE,YAAe,QAG7B,SAAYvI,EACZ,OAAU2U,EACV,SAAYC,EACZ,YAAeC,IAGnB,UAAa,CACXxI,QAAS,WACT/G,MAAO,mBAKfpB,EAAMyF,MAAMxC,IAAI,mBAAmB,SAAUsC,GAC3C,GAAK,MAAMuL,KAAKvL,EAAIS,MAApB,CAIAhG,EAAM6D,UAAU,qBAAqB0H,kBAAkBhG,EAAK,MAD3C,oKADjB,CAGF,IACAvF,EAAMyF,MAAMxC,IAAI,kBAAkB,SAAUsC,GAC1CvF,EAAM6D,UAAU,qBAAqBgI,qBAAqBtG,EAAK,MACjE,GACF,CAjTA,CAiTEvF,OACFA,MAAM6D,UAAUkN,OAAS,CACvB,QAAW,CACT5I,QAAS,eACTE,YAAY,EACZY,QAAQ,GAEV,uBAAwB,CACtBd,QAAS,sEACTc,QAAQ,EACR5E,OAAQ,CACN,cAAiB,CACf8D,QAAS,sFACTE,YAAY,EACZhE,OAAQ,CACN,cAAe,CACb8D,QAAS,sBACTE,YAAY,GAEd,oBAAqB,CACnBF,QAAS,kBACT/G,MAAO,eAET+F,KAAM,OAGV,OAAU,YAGd,uBAAwB,CACtBgB,QAAS,uCACTc,QAAQ,EACR7H,MAAO,UAET,OAAU,CACR+G,QAAS,mDACTc,QAAQ,GAEV,SAAY,CACVd,QAAS,4CACTE,YAAY,GAEd,aAAc,CACZF,QAAS,mBACTE,YAAY,GAEd,UAAa,CACXF,QAAS,2BACTE,YAAY,EACZjH,MAAO,CACL,aACA,eAEFiD,OAAQ,CAAE,YAAe,OAE3B,QAAW,wNACX,QAAW,shBACX,QAAW,0BACX,OAAU,mJACV,SAAY,uDACZ,YAAe,iBAEjBrE,MAAM6D,UAAUkN,OAAO,wBAAwB1M,OAAsB,cAAEA,OAAO8C,KAAOnH,MAAM6D,UAAUkN,OACrG/Q,MAAM6D,UAAUmN,GAAKhR,MAAM6D,UAAUkN,OACpC,SAAU/Q,GACTA,EAAM6D,UAAUoN,KAAOjR,EAAM6D,UAAUK,OAAO,QAAS,CACrD,QAAW,CACTiE,QAAS,8BACTc,QAAQ,GAEV,aAAc,CACZd,QAAS,4EACTE,YAAY,EACZhE,OAAQ,CAAE,YAAe,UAE3B,QAAW,mSACX,SAAY,4EACZ,YAAe,iBAEjBrE,EAAM6D,UAAUO,aAAa,OAAQ,WAAY,CAC/C,eAAgB,CACd+D,QAAS,KACT/G,MAAO,iBAGX,IAAI0N,EAAgB,CAClB3G,QAAS,oDACTE,YAAY,EACZhE,OAAQ,CACN,QAAW,CACT8D,QAAS,uBACTE,YAAY,EACZhE,OAAQrE,EAAM6D,UAAUoN,MAE1B,UAAa,CACX9I,QAAS,WACT/G,MAAO,wBAINpB,EAAM6D,UAAUoN,KAAKzB,SAC5B,IAAI0B,EAAoB,MAAQ,CAC9B,oDAAoDnO,OACpD,sDAAsDA,OACtD,sDAAsDA,OACtD,0DAA0DA,OAC1D,kDAAkDA,QAClDwH,KAAK,KAAO,IACV4G,EAAa,sEAAsEpO,OACvF/C,EAAM6D,UAAUO,aAAa,OAAQ,UAAW,CAC9C,gBAAiB,CACf,CACE+D,QAASrF,OAAO,KAAKC,OAASmO,EAAoB,mBAAmBnO,QACrEkG,QAAQ,EACR5E,OAAQ,CACN,cAAiByK,EACjB,MAAS,YAGb,CACE3G,QAAS,iGACTE,YAAY,EACZY,QAAQ,EACR5E,OAAQ,CACN,cAAiByK,EACjB,MAAS,aAIf,SAAY,+BACZ,OAAU,CACR,CACE3G,QAASrF,OAAO,YAAYC,OAASoO,GACrC9I,YAAY,EACZY,QAAQ,GAEV,CACEd,QAASrF,OAAO,oBAAoBC,OAASoO,EAAa,aAAapO,QACvEsF,YAAY,EACZY,QAAQ,IAGZ,oBAAqB,CACnBd,QAAS,gCACTE,YAAY,EACZhE,OAAQ,CACN,SAAY,SACZ,QAAW,UACX,aAAc,OACd,YAAe,SAIrBrE,EAAM6D,UAAUO,aAAa,OAAQ,SAAU,CAC7C,iBAAkB,CAChB,CACE+D,QAASrF,OAAO,cAAcC,OAASmO,GACvCjI,QAAQ,EACR5E,OAAQ,CACN,cAAiByK,EACjB,OAAU,YAGd,CACE3G,QAAS,oEACTc,QAAQ,EACR5E,OAAQ,CACN,cAAiByK,EACjB,OAAU,YAGd,CACE3G,QAAS,kDACT/G,MAAO,iBACP6H,QAAQ,EACR5E,OAAQ,CACN,UAAa,CACX8D,QAAS,kCACT9D,OAAQ,CACN,OAAU,QACV,YAAe,aAGnB,cAAiByK,EACjB,OAAU,YAGd,CACE3G,QAAS,oDACT/G,MAAO,iBACP6H,QAAQ,EACR5E,OAAQ,CACN,UAAa,CACX8D,QAAS,oCACT9D,OAAQ,CACN,OAAU,QACV,YAAe,iBAGnB,OAAU,aAIhB,kBAAmB,CACjB,CACE8D,QAASrF,OAAO,KAAKC,OAASmO,GAC9BjI,QAAQ,EACR5E,OAAQ,CACN,cAAiByK,EACjB,QAAW,CACT3G,QAAS,UACT/G,MAAO,YAIb,CACE+G,QAAS,0DACTc,QAAQ,EACR5E,OAAQ,CACN,cAAiByK,EACjB,QAAW,CACT3G,QAAS,UACT/G,MAAO,sBAMVpB,EAAM6D,UAAUoN,KAAK/B,OAC5BlP,EAAM6D,UAAUO,aAAa,OAAQ,SAAU,CAC7C,QAAW,+OACX,SAAY,iCAEdpE,EAAM6D,UAAUuN,GAAKpR,EAAM6D,UAAUoN,IACvC,CA1KA,CA0KEjR,OAEY,CAAEqR,WADF7Q,EAAUb,QAG1B,IACA,IAAI2R,EAAQ/R,OAAOS,MACnBT,OAAOS,MAAQD,CAEjB,CAviEA,MAuiEE5C,EAAWsC,EAAWC,GACxB,IAAI6R,EAAU7R,EAAOC,QAAQ0R,WASzBG,EAAM,SAAUC,GAClB,OAAOnS,EAAOU,OALO,SAAUyR,GAC/B,OAAOA,EAAOC,SAAS,6BAA6B,EAAO,UAC7D,CAGyBC,CAAiBF,GAAUnS,EAAOU,MAAQuR,CACnE,EAEIK,EAAwB,SAAUH,GACpC,IAxkEqBI,EAAG9T,EAwkEpB2J,EAAO+J,EAAOK,UAAYL,EAAOK,UAAUC,UAAY,KAC3D,OAzkEqBF,EAykEPhT,EAAa6I,GAzkEH3J,EAykEU2J,EAxkE3BmK,EAAIxT,EAASP,KAAKC,GAAKM,EAASjC,MAykEzC,EA+EI4V,EAAO,SAAUP,GACnB,IAAI5N,EAzDa,SAAU4N,GAC3B,IA0CIQ,EAhFe,SAAUR,GAC7B,OAAOA,EAAOC,SAAS,uBACzB,CA8EwBQ,CAAeT,GACrC,OAAOQ,GA3CgB,CACrB,CACEjO,KAAM,WACNjI,MAAO,UAET,CACEiI,KAAM,aACNjI,MAAO,cAET,CACEiI,KAAM,MACNjI,MAAO,OAET,CACEiI,KAAM,MACNjI,MAAO,OAET,CACEiI,KAAM,OACNjI,MAAO,QAET,CACEiI,KAAM,SACNjI,MAAO,UAET,CACEiI,KAAM,OACNjI,MAAO,QAET,CACEiI,KAAM,IACNjI,MAAO,KAET,CACEiI,KAAM,KACNjI,MAAO,UAET,CACEiI,KAAM,MACNjI,MAAO,OAKb,CAYkBoW,CAAaV,GACzBW,EAAkB7T,EAAKsF,GAAWvH,KAAKR,EAAS,KAAK,SAAUuW,GACjE,OAAOA,EAAEtW,KACX,IACIuW,EAfmB,SAAUb,EAAQc,GAEzC,OADWX,EAAsBH,GACrBnV,MAAK,WACf,OAAOiW,CACT,IAAG,SAAUhW,GACX,IAAIiW,EAAUjW,EAAEyC,UAAUuJ,MAAM,kBAChC,OAAOiK,EAAUA,EAAQ,GAAKD,CAChC,GACF,CAOwBE,CAAmBhB,EAAQW,GAC7CM,EArEe,SAAUjB,GAE7B,OADWG,EAAsBH,GACrBnV,KAAKR,EAAS,KAAK,SAAUS,GACvC,OAAOA,EAAE0J,WACX,GACF,CAgEoB0M,CAAelB,GACjCA,EAAOmB,cAAcZ,KAAK,CACxBa,MAAO,0BACPC,KAAM,QACNC,KAAM,CACJ7R,KAAM,QACN8R,MAAO,CACL,CACE9R,KAAM,YACN6G,KAAM,WACNkL,MAAO,WACPD,MAAOnP,GAET,CACE3C,KAAM,WACN6G,KAAM,OACNkL,MAAO,eAIbC,QAAS,CACP,CACEhS,KAAM,SACN6G,KAAM,SACN/D,KAAM,UAER,CACE9C,KAAM,SACN6G,KAAM,OACN/D,KAAM,OACNmP,SAAS,IAGbC,YAAa,CACXvQ,SAAUyP,EACVtM,KAAM0M,GAERW,SAAU,SAAUC,GAClB,IAAI1M,EAAO0M,EAAIC,WA1HE,SAAU9B,EAAQ5O,EAAUmD,GACjDyL,EAAO+B,YAAYC,UAAS,WAC1B,IAAI/L,EAAOkK,EAAsBH,GAEjC,OADAzL,EAAOpH,EAAS8U,IAAI3S,OAAOiF,GACpB0B,EAAKpL,MAAK,WACfmV,EAAOkC,cAAc,mCAAqC9Q,EAAW,KAAOmD,EAAO,UACnFyL,EAAOK,UAAU8B,OAAOnC,EAAOoC,EAAE,UAAUC,WAAW,MAAM,GAC9D,IAAG,SAAUvX,GACXkV,EAAOsC,IAAIC,UAAUzX,EAAG,QAAS,YAAcsG,GAC/CtG,EAAE6J,UAAYJ,EACdwL,EAAIC,GAAQ3L,iBAAiBvJ,GAC7BkV,EAAOK,UAAU8B,OAAOrX,EAC1B,GACF,GACF,CA6GM0X,CAAiBxC,EAAQ7K,EAAK/D,SAAU+D,EAAKZ,MAC7CsN,EAAI3I,OACN,GAEJ,EA2EEnP,EAASyH,IAAI,cAAc,SAAUwO,IA9D3B,SAAUA,GACpB,IAAIoC,EAAIpC,EAAOoC,EACfpC,EAAOyC,GAAG,cAAc,SAAUhK,GAChC2J,EAAE,6BAA8B3J,EAAExC,MAAM/J,OAAOuB,EAAQL,IAAetB,MAAK,SAAU4W,EAAKrV,GACxF,IAAIsV,EAAOP,EAAE/U,GAAMkH,EAAOlH,EAAImH,YAC9BmO,EAAK7F,KAAK,QAASsF,EAAE5G,KAAKmH,EAAK7F,KAAK,WACpC6F,EAAKN,WAAW,mBAChBM,EAAKC,QAAQC,OAAOT,EAAE,iBAAiBtW,MAAK,WAC1C+C,KAAK2F,YAAcD,CACrB,IACF,GACF,IACAyL,EAAOyC,GAAG,cAAc,WACtB,IAAIK,EAAyBV,EAAE,OAAOlW,OAAOuB,EAAQL,IAAelB,QAAO,SAAUwW,EAAKrV,GACxF,MAA+B,UAAxBA,EAAI0V,eACb,IACID,EAAuB7V,QACzB+S,EAAO+B,YAAYC,UAAS,WAC1Bc,EAAuBhX,MAAK,SAAU4W,EAAKrV,GACzC+U,EAAE/U,GAAK2V,KAAK,MAAMlX,MAAK,SAAU4W,EAAKrV,GACpCA,EAAI4V,WAAWC,aAAalD,EAAOmD,SAASC,eAAe,MAAO/V,EACpE,IACAA,EAAI0V,gBAAkB,QACtB1V,EAAIsH,UAAYqL,EAAOsC,IAAIhT,OAAOjC,EAAImH,aACtCuL,EAAIC,GAAQ3L,iBAAiBhH,GAC7BA,EAAIE,UAAY6U,EAAE5G,KAAKnO,EAAIE,UAC7B,GACF,GAEJ,GACF,CAiCI8V,CAAMrD,GA3BK,SAAUA,GACvB,IAAIsD,EAAW,WACb,OAAOtD,EAAOuD,YAAY,aAC5B,EACAvD,EAAOwD,GAAGC,SAASC,gBAAgB,aAAc,CAC/CC,KAAM,cACNC,QAAS,0BACTN,SAAUA,EACVO,QAAS,SAAUhC,GACjB,IAAIiC,EAAoB,WACtBjC,EAAIkC,UAdgB,SAAU/D,GACpC,IAAI/J,EAAO+J,EAAOK,UAAU2D,WAC5B,OAAOhE,EAAOsC,IAAI2B,GAAGhO,EAAM,0BAC7B,CAWsBiO,CAAsBlE,GACtC,EAEA,OADAA,EAAOyC,GAAG,aAAcqB,GACjB,WACL,OAAO9D,EAAOmE,IAAI,aAAcL,EAClC,CACF,IAEF9D,EAAOwD,GAAGC,SAASW,YAAY,aAAc,CAC3C7R,KAAM,iBACNoR,KAAM,cACNL,SAAUA,GAEd,CAKIe,CAASrE,GA3EI,SAAUA,GACzBA,EAAOsE,WAAW,cAAc,WAC9B,IAAIrO,EAAO+J,EAAOK,UAAUC,UACxBN,EAAOK,UAAUkE,eAAiBnX,EAAa6I,GACjDsK,EAAKP,GAELA,EAAOwE,UAAUC,OAAO,OAE5B,GACF,CAmEIC,CAAW1E,GACXA,EAAOyC,GAAG,YAAY,SAAUkC,GAC1BvX,EAAauX,EAAGC,SAClBrE,EAAKP,EAET,GACF,GAKN,CAr5EA,E","sources":["webpack://plone-mosaic/./node_modules/tinymce/plugins/codesample/plugin.js"],"sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.10.7 (2022-12-06)\n */\n(function () {\n    'use strict';\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var identity = function (x) {\n      return x;\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = identity;\n      var me = {\n        fold: function (n, _s) {\n          return n();\n        },\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: function () {\n          return none();\n        },\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Optional = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var get$1 = function (xs, i) {\n      return i >= 0 && i < xs.length ? Optional.some(xs[i]) : Optional.none();\n    };\n    var head = function (xs) {\n      return get$1(xs, 0);\n    };\n\n    var someIf = function (b, a) {\n      return b ? Optional.some(a) : Optional.none();\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var isCodeSample = function (elm) {\n      return elm && elm.nodeName === 'PRE' && elm.className.indexOf('language-') !== -1;\n    };\n    var trimArg = function (predicateFn) {\n      return function (arg1, arg2) {\n        return predicateFn(arg2);\n      };\n    };\n\n    var Global = typeof window !== 'undefined' ? window : Function('return this;')();\n\n    var exports$1 = {}, module = { exports: exports$1 }, global = {};\n    (function (define, exports, module, require) {\n      var oldprism = window.Prism;\n      window.Prism = { manual: true };\n      (function (global, factory) {\n        typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.EphoxContactWrapper = factory());\n      }(this, function () {\n        var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n        var prismCore = { exports: {} };\n        (function (module) {\n          var _self = typeof window !== 'undefined' ? window : typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope ? self : {};\n          var Prism = function (_self) {\n            var lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n            var uniqueId = 0;\n            var plainTextGrammar = {};\n            var _ = {\n              manual: _self.Prism && _self.Prism.manual,\n              disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n              util: {\n                encode: function encode(tokens) {\n                  if (tokens instanceof Token) {\n                    return new Token(tokens.type, encode(tokens.content), tokens.alias);\n                  } else if (Array.isArray(tokens)) {\n                    return tokens.map(encode);\n                  } else {\n                    return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n                  }\n                },\n                type: function (o) {\n                  return Object.prototype.toString.call(o).slice(8, -1);\n                },\n                objId: function (obj) {\n                  if (!obj['__id']) {\n                    Object.defineProperty(obj, '__id', { value: ++uniqueId });\n                  }\n                  return obj['__id'];\n                },\n                clone: function deepClone(o, visited) {\n                  visited = visited || {};\n                  var clone;\n                  var id;\n                  switch (_.util.type(o)) {\n                  case 'Object':\n                    id = _.util.objId(o);\n                    if (visited[id]) {\n                      return visited[id];\n                    }\n                    clone = {};\n                    visited[id] = clone;\n                    for (var key in o) {\n                      if (o.hasOwnProperty(key)) {\n                        clone[key] = deepClone(o[key], visited);\n                      }\n                    }\n                    return clone;\n                  case 'Array':\n                    id = _.util.objId(o);\n                    if (visited[id]) {\n                      return visited[id];\n                    }\n                    clone = [];\n                    visited[id] = clone;\n                    o.forEach(function (v, i) {\n                      clone[i] = deepClone(v, visited);\n                    });\n                    return clone;\n                  default:\n                    return o;\n                  }\n                },\n                getLanguage: function (element) {\n                  while (element) {\n                    var m = lang.exec(element.className);\n                    if (m) {\n                      return m[1].toLowerCase();\n                    }\n                    element = element.parentElement;\n                  }\n                  return 'none';\n                },\n                setLanguage: function (element, language) {\n                  element.className = element.className.replace(RegExp(lang.source, 'gi'), '');\n                  element.classList.add('language-' + language);\n                },\n                currentScript: function () {\n                  if (typeof document === 'undefined') {\n                    return null;\n                  }\n                  if ('currentScript' in document && 1 < 2) {\n                    return document.currentScript;\n                  }\n                  try {\n                    throw new Error();\n                  } catch (err) {\n                    var src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n                    if (src) {\n                      var scripts = document.getElementsByTagName('script');\n                      for (var i in scripts) {\n                        if (scripts[i].src == src) {\n                          return scripts[i];\n                        }\n                      }\n                    }\n                    return null;\n                  }\n                },\n                isActive: function (element, className, defaultActivation) {\n                  var no = 'no-' + className;\n                  while (element) {\n                    var classList = element.classList;\n                    if (classList.contains(className)) {\n                      return true;\n                    }\n                    if (classList.contains(no)) {\n                      return false;\n                    }\n                    element = element.parentElement;\n                  }\n                  return !!defaultActivation;\n                }\n              },\n              languages: {\n                plain: plainTextGrammar,\n                plaintext: plainTextGrammar,\n                text: plainTextGrammar,\n                txt: plainTextGrammar,\n                extend: function (id, redef) {\n                  var lang = _.util.clone(_.languages[id]);\n                  for (var key in redef) {\n                    lang[key] = redef[key];\n                  }\n                  return lang;\n                },\n                insertBefore: function (inside, before, insert, root) {\n                  root = root || _.languages;\n                  var grammar = root[inside];\n                  var ret = {};\n                  for (var token in grammar) {\n                    if (grammar.hasOwnProperty(token)) {\n                      if (token == before) {\n                        for (var newToken in insert) {\n                          if (insert.hasOwnProperty(newToken)) {\n                            ret[newToken] = insert[newToken];\n                          }\n                        }\n                      }\n                      if (!insert.hasOwnProperty(token)) {\n                        ret[token] = grammar[token];\n                      }\n                    }\n                  }\n                  var old = root[inside];\n                  root[inside] = ret;\n                  _.languages.DFS(_.languages, function (key, value) {\n                    if (value === old && key != inside) {\n                      this[key] = ret;\n                    }\n                  });\n                  return ret;\n                },\n                DFS: function DFS(o, callback, type, visited) {\n                  visited = visited || {};\n                  var objId = _.util.objId;\n                  for (var i in o) {\n                    if (o.hasOwnProperty(i)) {\n                      callback.call(o, i, o[i], type || i);\n                      var property = o[i];\n                      var propertyType = _.util.type(property);\n                      if (propertyType === 'Object' && !visited[objId(property)]) {\n                        visited[objId(property)] = true;\n                        DFS(property, callback, null, visited);\n                      } else if (propertyType === 'Array' && !visited[objId(property)]) {\n                        visited[objId(property)] = true;\n                        DFS(property, callback, i, visited);\n                      }\n                    }\n                  }\n                }\n              },\n              plugins: {},\n              highlightAll: function (async, callback) {\n                _.highlightAllUnder(document, async, callback);\n              },\n              highlightAllUnder: function (container, async, callback) {\n                var env = {\n                  callback: callback,\n                  container: container,\n                  selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n                };\n                _.hooks.run('before-highlightall', env);\n                env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n                _.hooks.run('before-all-elements-highlight', env);\n                for (var i = 0, element; element = env.elements[i++];) {\n                  _.highlightElement(element, async === true, env.callback);\n                }\n              },\n              highlightElement: function (element, async, callback) {\n                var language = _.util.getLanguage(element);\n                var grammar = _.languages[language];\n                _.util.setLanguage(element, language);\n                var parent = element.parentElement;\n                if (parent && parent.nodeName.toLowerCase() === 'pre') {\n                  _.util.setLanguage(parent, language);\n                }\n                var code = element.textContent;\n                var env = {\n                  element: element,\n                  language: language,\n                  grammar: grammar,\n                  code: code\n                };\n                function insertHighlightedCode(highlightedCode) {\n                  env.highlightedCode = highlightedCode;\n                  _.hooks.run('before-insert', env);\n                  env.element.innerHTML = env.highlightedCode;\n                  _.hooks.run('after-highlight', env);\n                  _.hooks.run('complete', env);\n                  callback && callback.call(env.element);\n                }\n                _.hooks.run('before-sanity-check', env);\n                parent = env.element.parentElement;\n                if (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n                  parent.setAttribute('tabindex', '0');\n                }\n                if (!env.code) {\n                  _.hooks.run('complete', env);\n                  callback && callback.call(env.element);\n                  return;\n                }\n                _.hooks.run('before-highlight', env);\n                if (!env.grammar) {\n                  insertHighlightedCode(_.util.encode(env.code));\n                  return;\n                }\n                if (async && _self.Worker) {\n                  var worker = new Worker(_.filename);\n                  worker.onmessage = function (evt) {\n                    insertHighlightedCode(evt.data);\n                  };\n                  worker.postMessage(JSON.stringify({\n                    language: env.language,\n                    code: env.code,\n                    immediateClose: true\n                  }));\n                } else {\n                  insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n                }\n              },\n              highlight: function (text, grammar, language) {\n                var env = {\n                  code: text,\n                  grammar: grammar,\n                  language: language\n                };\n                _.hooks.run('before-tokenize', env);\n                if (!env.grammar) {\n                  throw new Error('The language \"' + env.language + '\" has no grammar.');\n                }\n                env.tokens = _.tokenize(env.code, env.grammar);\n                _.hooks.run('after-tokenize', env);\n                return Token.stringify(_.util.encode(env.tokens), env.language);\n              },\n              tokenize: function (text, grammar) {\n                var rest = grammar.rest;\n                if (rest) {\n                  for (var token in rest) {\n                    grammar[token] = rest[token];\n                  }\n                  delete grammar.rest;\n                }\n                var tokenList = new LinkedList();\n                addAfter(tokenList, tokenList.head, text);\n                matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n                return toArray(tokenList);\n              },\n              hooks: {\n                all: {},\n                add: function (name, callback) {\n                  var hooks = _.hooks.all;\n                  hooks[name] = hooks[name] || [];\n                  hooks[name].push(callback);\n                },\n                run: function (name, env) {\n                  var callbacks = _.hooks.all[name];\n                  if (!callbacks || !callbacks.length) {\n                    return;\n                  }\n                  for (var i = 0, callback; callback = callbacks[i++];) {\n                    callback(env);\n                  }\n                }\n              },\n              Token: Token\n            };\n            _self.Prism = _;\n            function Token(type, content, alias, matchedStr) {\n              this.type = type;\n              this.content = content;\n              this.alias = alias;\n              this.length = (matchedStr || '').length | 0;\n            }\n            Token.stringify = function stringify(o, language) {\n              if (typeof o == 'string') {\n                return o;\n              }\n              if (Array.isArray(o)) {\n                var s = '';\n                o.forEach(function (e) {\n                  s += stringify(e, language);\n                });\n                return s;\n              }\n              var env = {\n                type: o.type,\n                content: stringify(o.content, language),\n                tag: 'span',\n                classes: [\n                  'token',\n                  o.type\n                ],\n                attributes: {},\n                language: language\n              };\n              var aliases = o.alias;\n              if (aliases) {\n                if (Array.isArray(aliases)) {\n                  Array.prototype.push.apply(env.classes, aliases);\n                } else {\n                  env.classes.push(aliases);\n                }\n              }\n              _.hooks.run('wrap', env);\n              var attributes = '';\n              for (var name in env.attributes) {\n                attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n              }\n              return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n            };\n            function matchPattern(pattern, pos, text, lookbehind) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n              if (match && lookbehind && match[1]) {\n                var lookbehindLength = match[1].length;\n                match.index += lookbehindLength;\n                match[0] = match[0].slice(lookbehindLength);\n              }\n              return match;\n            }\n            function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n              for (var token in grammar) {\n                if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n                  continue;\n                }\n                var patterns = grammar[token];\n                patterns = Array.isArray(patterns) ? patterns : [patterns];\n                for (var j = 0; j < patterns.length; ++j) {\n                  if (rematch && rematch.cause == token + ',' + j) {\n                    return;\n                  }\n                  var patternObj = patterns[j];\n                  var inside = patternObj.inside;\n                  var lookbehind = !!patternObj.lookbehind;\n                  var greedy = !!patternObj.greedy;\n                  var alias = patternObj.alias;\n                  if (greedy && !patternObj.pattern.global) {\n                    var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n                    patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n                  }\n                  var pattern = patternObj.pattern || patternObj;\n                  for (var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n                    if (rematch && pos >= rematch.reach) {\n                      break;\n                    }\n                    var str = currentNode.value;\n                    if (tokenList.length > text.length) {\n                      return;\n                    }\n                    if (str instanceof Token) {\n                      continue;\n                    }\n                    var removeCount = 1;\n                    var match;\n                    if (greedy) {\n                      match = matchPattern(pattern, pos, text, lookbehind);\n                      if (!match || match.index >= text.length) {\n                        break;\n                      }\n                      var from = match.index;\n                      var to = match.index + match[0].length;\n                      var p = pos;\n                      p += currentNode.value.length;\n                      while (from >= p) {\n                        currentNode = currentNode.next;\n                        p += currentNode.value.length;\n                      }\n                      p -= currentNode.value.length;\n                      pos = p;\n                      if (currentNode.value instanceof Token) {\n                        continue;\n                      }\n                      for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n                        removeCount++;\n                        p += k.value.length;\n                      }\n                      removeCount--;\n                      str = text.slice(pos, p);\n                      match.index -= pos;\n                    } else {\n                      match = matchPattern(pattern, 0, str, lookbehind);\n                      if (!match) {\n                        continue;\n                      }\n                    }\n                    var from = match.index;\n                    var matchStr = match[0];\n                    var before = str.slice(0, from);\n                    var after = str.slice(from + matchStr.length);\n                    var reach = pos + str.length;\n                    if (rematch && reach > rematch.reach) {\n                      rematch.reach = reach;\n                    }\n                    var removeFrom = currentNode.prev;\n                    if (before) {\n                      removeFrom = addAfter(tokenList, removeFrom, before);\n                      pos += before.length;\n                    }\n                    removeRange(tokenList, removeFrom, removeCount);\n                    var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n                    currentNode = addAfter(tokenList, removeFrom, wrapped);\n                    if (after) {\n                      addAfter(tokenList, currentNode, after);\n                    }\n                    if (removeCount > 1) {\n                      var nestedRematch = {\n                        cause: token + ',' + j,\n                        reach: reach\n                      };\n                      matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n                      if (rematch && nestedRematch.reach > rematch.reach) {\n                        rematch.reach = nestedRematch.reach;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            function LinkedList() {\n              var head = {\n                value: null,\n                prev: null,\n                next: null\n              };\n              var tail = {\n                value: null,\n                prev: head,\n                next: null\n              };\n              head.next = tail;\n              this.head = head;\n              this.tail = tail;\n              this.length = 0;\n            }\n            function addAfter(list, node, value) {\n              var next = node.next;\n              var newNode = {\n                value: value,\n                prev: node,\n                next: next\n              };\n              node.next = newNode;\n              next.prev = newNode;\n              list.length++;\n              return newNode;\n            }\n            function removeRange(list, node, count) {\n              var next = node.next;\n              for (var i = 0; i < count && next !== list.tail; i++) {\n                next = next.next;\n              }\n              node.next = next;\n              next.prev = node;\n              list.length -= i;\n            }\n            function toArray(list) {\n              var array = [];\n              var node = list.head.next;\n              while (node !== list.tail) {\n                array.push(node.value);\n                node = node.next;\n              }\n              return array;\n            }\n            if (!_self.document) {\n              if (!_self.addEventListener) {\n                return _;\n              }\n              if (!_.disableWorkerMessageHandler) {\n                _self.addEventListener('message', function (evt) {\n                  var message = JSON.parse(evt.data);\n                  var lang = message.language;\n                  var code = message.code;\n                  var immediateClose = message.immediateClose;\n                  _self.postMessage(_.highlight(code, _.languages[lang], lang));\n                  if (immediateClose) {\n                    _self.close();\n                  }\n                }, false);\n              }\n              return _;\n            }\n            var script = _.util.currentScript();\n            if (script) {\n              _.filename = script.src;\n              if (script.hasAttribute('data-manual')) {\n                _.manual = true;\n              }\n            }\n            function highlightAutomaticallyCallback() {\n              if (!_.manual) {\n                _.highlightAll();\n              }\n            }\n            if (!_.manual) {\n              var readyState = document.readyState;\n              if (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n                document.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n              } else {\n                if (window.requestAnimationFrame) {\n                  window.requestAnimationFrame(highlightAutomaticallyCallback);\n                } else {\n                  window.setTimeout(highlightAutomaticallyCallback, 16);\n                }\n              }\n            }\n            return _;\n          }(_self);\n          if (module.exports) {\n            module.exports = Prism;\n          }\n          if (typeof commonjsGlobal !== 'undefined') {\n            commonjsGlobal.Prism = Prism;\n          }\n        }(prismCore));\n        Prism.languages.clike = {\n          'comment': [\n            {\n              pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              pattern: /(^|[^\\\\:])\\/\\/.*/,\n              lookbehind: true,\n              greedy: true\n            }\n          ],\n          'string': {\n            pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n          },\n          'class-name': {\n            pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n            lookbehind: true,\n            inside: { 'punctuation': /[.\\\\]/ }\n          },\n          'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n          'boolean': /\\b(?:false|true)\\b/,\n          'function': /\\b\\w+(?=\\()/,\n          'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n          'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n          'punctuation': /[{}[\\];(),.:]/\n        };\n        (function (Prism) {\n          function getPlaceholder(language, index) {\n            return '___' + language.toUpperCase() + index + '___';\n          }\n          Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n            buildPlaceholders: {\n              value: function (env, language, placeholderPattern, replaceFilter) {\n                if (env.language !== language) {\n                  return;\n                }\n                var tokenStack = env.tokenStack = [];\n                env.code = env.code.replace(placeholderPattern, function (match) {\n                  if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n                    return match;\n                  }\n                  var i = tokenStack.length;\n                  var placeholder;\n                  while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n                    ++i;\n                  }\n                  tokenStack[i] = match;\n                  return placeholder;\n                });\n                env.grammar = Prism.languages.markup;\n              }\n            },\n            tokenizePlaceholders: {\n              value: function (env, language) {\n                if (env.language !== language || !env.tokenStack) {\n                  return;\n                }\n                env.grammar = Prism.languages[language];\n                var j = 0;\n                var keys = Object.keys(env.tokenStack);\n                function walkTokens(tokens) {\n                  for (var i = 0; i < tokens.length; i++) {\n                    if (j >= keys.length) {\n                      break;\n                    }\n                    var token = tokens[i];\n                    if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n                      var k = keys[j];\n                      var t = env.tokenStack[k];\n                      var s = typeof token === 'string' ? token : token.content;\n                      var placeholder = getPlaceholder(language, k);\n                      var index = s.indexOf(placeholder);\n                      if (index > -1) {\n                        ++j;\n                        var before = s.substring(0, index);\n                        var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                        var after = s.substring(index + placeholder.length);\n                        var replacement = [];\n                        if (before) {\n                          replacement.push.apply(replacement, walkTokens([before]));\n                        }\n                        replacement.push(middle);\n                        if (after) {\n                          replacement.push.apply(replacement, walkTokens([after]));\n                        }\n                        if (typeof token === 'string') {\n                          tokens.splice.apply(tokens, [\n                            i,\n                            1\n                          ].concat(replacement));\n                        } else {\n                          token.content = replacement;\n                        }\n                      }\n                    } else if (token.content) {\n                      walkTokens(token.content);\n                    }\n                  }\n                  return tokens;\n                }\n                walkTokens(env.tokens);\n              }\n            }\n          });\n        }(Prism));\n        Prism.languages.c = Prism.languages.extend('clike', {\n          'comment': {\n            pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n            greedy: true\n          },\n          'string': {\n            pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n            greedy: true\n          },\n          'class-name': {\n            pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n            lookbehind: true\n          },\n          'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n          'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n          'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n          'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n        });\n        Prism.languages.insertBefore('c', 'string', {\n          'char': {\n            pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n            greedy: true\n          }\n        });\n        Prism.languages.insertBefore('c', 'string', {\n          'macro': {\n            pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n            lookbehind: true,\n            greedy: true,\n            alias: 'property',\n            inside: {\n              'string': [\n                {\n                  pattern: /^(#\\s*include\\s*)<[^>]+>/,\n                  lookbehind: true\n                },\n                Prism.languages.c['string']\n              ],\n              'char': Prism.languages.c['char'],\n              'comment': Prism.languages.c['comment'],\n              'macro-name': [\n                {\n                  pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n                  lookbehind: true\n                },\n                {\n                  pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n                  lookbehind: true,\n                  alias: 'function'\n                }\n              ],\n              'directive': {\n                pattern: /^(#\\s*)[a-z]+/,\n                lookbehind: true,\n                alias: 'keyword'\n              },\n              'directive-hash': /^#/,\n              'punctuation': /##|\\\\(?=[\\r\\n])/,\n              'expression': {\n                pattern: /\\S[\\s\\S]*/,\n                inside: Prism.languages.c\n              }\n            }\n          }\n        });\n        Prism.languages.insertBefore('c', 'function', { 'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/ });\n        delete Prism.languages.c['boolean'];\n        (function (Prism) {\n          var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n          var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () {\n            return keyword.source;\n          });\n          Prism.languages.cpp = Prism.languages.extend('c', {\n            'class-name': [\n              {\n                pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n                  return keyword.source;\n                })),\n                lookbehind: true\n              },\n              /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,\n              /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,\n              /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n            ],\n            'keyword': keyword,\n            'number': {\n              pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n              greedy: true\n            },\n            'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n            'boolean': /\\b(?:false|true)\\b/\n          });\n          Prism.languages.insertBefore('cpp', 'string', {\n            'module': {\n              pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + '(?:' + /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + '|' + /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () {\n                return modName;\n              }) + ')'),\n              lookbehind: true,\n              greedy: true,\n              inside: {\n                'string': /^[<\"][\\s\\S]+/,\n                'operator': /:/,\n                'punctuation': /\\./\n              }\n            },\n            'raw-string': {\n              pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n              alias: 'string',\n              greedy: true\n            }\n          });\n          Prism.languages.insertBefore('cpp', 'keyword', {\n            'generic-function': {\n              pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n              inside: {\n                'function': /^\\w+/,\n                'generic': {\n                  pattern: /<[\\s\\S]+/,\n                  alias: 'class-name',\n                  inside: Prism.languages.cpp\n                }\n              }\n            }\n          });\n          Prism.languages.insertBefore('cpp', 'operator', {\n            'double-colon': {\n              pattern: /::/,\n              alias: 'punctuation'\n            }\n          });\n          Prism.languages.insertBefore('cpp', 'class-name', {\n            'base-clause': {\n              pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n              lookbehind: true,\n              greedy: true,\n              inside: Prism.languages.extend('cpp', {})\n            }\n          });\n          Prism.languages.insertBefore('inside', 'double-colon', { 'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i }, Prism.languages.cpp['base-clause']);\n        }(Prism));\n        (function (Prism) {\n          function replace(pattern, replacements) {\n            return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n              return '(?:' + replacements[+index] + ')';\n            });\n          }\n          function re(pattern, replacements, flags) {\n            return RegExp(replace(pattern, replacements), flags || '');\n          }\n          function nested(pattern, depthLog2) {\n            for (var i = 0; i < depthLog2; i++) {\n              pattern = pattern.replace(/<<self>>/g, function () {\n                return '(?:' + pattern + ')';\n              });\n            }\n            return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]');\n          }\n          var keywordKinds = {\n            type: 'bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void',\n            typeDeclaration: 'class enum interface record struct',\n            contextual: 'add alias and ascending async await by descending from(?=\\\\s*(?:\\\\w|$)) get global group into init(?=\\\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\\\s*{)',\n            other: 'abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield'\n          };\n          function keywordsToPattern(words) {\n            return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b';\n          }\n          var typeDeclarationKeywords = keywordsToPattern(keywordKinds.typeDeclaration);\n          var keywords = RegExp(keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.typeDeclaration + ' ' + keywordKinds.contextual + ' ' + keywordKinds.other));\n          var nonTypeKeywords = keywordsToPattern(keywordKinds.typeDeclaration + ' ' + keywordKinds.contextual + ' ' + keywordKinds.other);\n          var nonContextualKeywords = keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.typeDeclaration + ' ' + keywordKinds.other);\n          var generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2);\n          var nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2);\n          var name = /@?\\b[A-Za-z_]\\w*\\b/.source;\n          var genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [\n            name,\n            generic\n          ]);\n          var identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [\n            nonTypeKeywords,\n            genericName\n          ]);\n          var array = /\\[\\s*(?:,\\s*)*\\]/.source;\n          var typeExpressionWithoutTuple = replace(/<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source, [\n            identifier,\n            array\n          ]);\n          var tupleElement = replace(/[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source, [\n            generic,\n            nestedRound,\n            array\n          ]);\n          var tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [tupleElement]);\n          var typeExpression = replace(/(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source, [\n            tuple,\n            identifier,\n            array\n          ]);\n          var typeInside = {\n            'keyword': keywords,\n            'punctuation': /[<>()?,.:[\\]]/\n          };\n          var character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source;\n          var regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source;\n          var verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source;\n          Prism.languages.csharp = Prism.languages.extend('clike', {\n            'string': [\n              {\n                pattern: re(/(^|[^$\\\\])<<0>>/.source, [verbatimString]),\n                lookbehind: true,\n                greedy: true\n              },\n              {\n                pattern: re(/(^|[^@$\\\\])<<0>>/.source, [regularString]),\n                lookbehind: true,\n                greedy: true\n              }\n            ],\n            'class-name': [\n              {\n                pattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [identifier]),\n                lookbehind: true,\n                inside: typeInside\n              },\n              {\n                pattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [\n                  name,\n                  typeExpression\n                ]),\n                lookbehind: true,\n                inside: typeInside\n              },\n              {\n                pattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [name]),\n                lookbehind: true\n              },\n              {\n                pattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [\n                  typeDeclarationKeywords,\n                  genericName\n                ]),\n                lookbehind: true,\n                inside: typeInside\n              },\n              {\n                pattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [identifier]),\n                lookbehind: true,\n                inside: typeInside\n              },\n              {\n                pattern: re(/(\\bwhere\\s+)<<0>>/.source, [name]),\n                lookbehind: true\n              },\n              {\n                pattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [typeExpressionWithoutTuple]),\n                lookbehind: true,\n                inside: typeInside\n              },\n              {\n                pattern: re(/\\b<<0>>(?=\\s+(?!<<1>>|with\\s*\\{)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/.source, [\n                  typeExpression,\n                  nonContextualKeywords,\n                  name\n                ]),\n                inside: typeInside\n              }\n            ],\n            'keyword': keywords,\n            'number': /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:[dflmu]|lu|ul)?\\b/i,\n            'operator': />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\n            'punctuation': /\\?\\.?|::|[{}[\\];(),.:]/\n          });\n          Prism.languages.insertBefore('csharp', 'number', {\n            'range': {\n              pattern: /\\.\\./,\n              alias: 'operator'\n            }\n          });\n          Prism.languages.insertBefore('csharp', 'punctuation', {\n            'named-parameter': {\n              pattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [name]),\n              lookbehind: true,\n              alias: 'punctuation'\n            }\n          });\n          Prism.languages.insertBefore('csharp', 'class-name', {\n            'namespace': {\n              pattern: re(/(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source, [name]),\n              lookbehind: true,\n              inside: { 'punctuation': /\\./ }\n            },\n            'type-expression': {\n              pattern: re(/(\\b(?:default|sizeof|typeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))/.source, [nestedRound]),\n              lookbehind: true,\n              alias: 'class-name',\n              inside: typeInside\n            },\n            'return-type': {\n              pattern: re(/<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source, [\n                typeExpression,\n                identifier\n              ]),\n              inside: typeInside,\n              alias: 'class-name'\n            },\n            'constructor-invocation': {\n              pattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [typeExpression]),\n              lookbehind: true,\n              inside: typeInside,\n              alias: 'class-name'\n            },\n            'generic-method': {\n              pattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [\n                name,\n                generic\n              ]),\n              inside: {\n                'function': re(/^<<0>>/.source, [name]),\n                'generic': {\n                  pattern: RegExp(generic),\n                  alias: 'class-name',\n                  inside: typeInside\n                }\n              }\n            },\n            'type-list': {\n              pattern: re(/\\b((?:<<0>>\\s+<<1>>|record\\s+<<1>>\\s*<<5>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>|<<1>>\\s*<<5>>|<<6>>)(?:\\s*,\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\s*(?:where|[{;]|=>|$))/.source, [\n                typeDeclarationKeywords,\n                genericName,\n                name,\n                typeExpression,\n                keywords.source,\n                nestedRound,\n                /\\bnew\\s*\\(\\s*\\)/.source\n              ]),\n              lookbehind: true,\n              inside: {\n                'record-arguments': {\n                  pattern: re(/(^(?!new\\s*\\()<<0>>\\s*)<<1>>/.source, [\n                    genericName,\n                    nestedRound\n                  ]),\n                  lookbehind: true,\n                  greedy: true,\n                  inside: Prism.languages.csharp\n                },\n                'keyword': keywords,\n                'class-name': {\n                  pattern: RegExp(typeExpression),\n                  greedy: true,\n                  inside: typeInside\n                },\n                'punctuation': /[,()]/\n              }\n            },\n            'preprocessor': {\n              pattern: /(^[\\t ]*)#.*/m,\n              lookbehind: true,\n              alias: 'property',\n              inside: {\n                'directive': {\n                  pattern: /(#)\\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\\b/,\n                  lookbehind: true,\n                  alias: 'keyword'\n                }\n              }\n            }\n          });\n          var regularStringOrCharacter = regularString + '|' + character;\n          var regularStringCharacterOrComment = replace(/\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source, [regularStringOrCharacter]);\n          var roundExpression = nested(replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [regularStringCharacterOrComment]), 2);\n          var attrTarget = /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/.source;\n          var attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [\n            identifier,\n            roundExpression\n          ]);\n          Prism.languages.insertBefore('csharp', 'class-name', {\n            'attribute': {\n              pattern: re(/((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/.source, [\n                attrTarget,\n                attr\n              ]),\n              lookbehind: true,\n              greedy: true,\n              inside: {\n                'target': {\n                  pattern: re(/^<<0>>(?=\\s*:)/.source, [attrTarget]),\n                  alias: 'keyword'\n                },\n                'attribute-arguments': {\n                  pattern: re(/\\(<<0>>*\\)/.source, [roundExpression]),\n                  inside: Prism.languages.csharp\n                },\n                'class-name': {\n                  pattern: RegExp(identifier),\n                  inside: { 'punctuation': /\\./ }\n                },\n                'punctuation': /[:,]/\n              }\n            }\n          });\n          var formatString = /:[^}\\r\\n]+/.source;\n          var mInterpolationRound = nested(replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [regularStringCharacterOrComment]), 2);\n          var mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n            mInterpolationRound,\n            formatString\n          ]);\n          var sInterpolationRound = nested(replace(/[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/.source, [regularStringOrCharacter]), 2);\n          var sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n            sInterpolationRound,\n            formatString\n          ]);\n          function createInterpolationInside(interpolation, interpolationRound) {\n            return {\n              'interpolation': {\n                pattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [interpolation]),\n                lookbehind: true,\n                inside: {\n                  'format-string': {\n                    pattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [\n                      interpolationRound,\n                      formatString\n                    ]),\n                    lookbehind: true,\n                    inside: { 'punctuation': /^:/ }\n                  },\n                  'punctuation': /^\\{|\\}$/,\n                  'expression': {\n                    pattern: /[\\s\\S]+/,\n                    alias: 'language-csharp',\n                    inside: Prism.languages.csharp\n                  }\n                }\n              },\n              'string': /[\\s\\S]+/\n            };\n          }\n          Prism.languages.insertBefore('csharp', 'string', {\n            'interpolation-string': [\n              {\n                pattern: re(/(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source, [mInterpolation]),\n                lookbehind: true,\n                greedy: true,\n                inside: createInterpolationInside(mInterpolation, mInterpolationRound)\n              },\n              {\n                pattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [sInterpolation]),\n                lookbehind: true,\n                greedy: true,\n                inside: createInterpolationInside(sInterpolation, sInterpolationRound)\n              }\n            ],\n            'char': {\n              pattern: RegExp(character),\n              greedy: true\n            }\n          });\n          Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp;\n        }(Prism));\n        (function (Prism) {\n          var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n          Prism.languages.css = {\n            'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n            'atrule': {\n              pattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n              inside: {\n                'rule': /^@[\\w-]+/,\n                'selector-function-argument': {\n                  pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n                  lookbehind: true,\n                  alias: 'selector'\n                },\n                'keyword': {\n                  pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n                  lookbehind: true\n                }\n              }\n            },\n            'url': {\n              pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n              greedy: true,\n              inside: {\n                'function': /^url/i,\n                'punctuation': /^\\(|\\)$/,\n                'string': {\n                  pattern: RegExp('^' + string.source + '$'),\n                  alias: 'url'\n                }\n              }\n            },\n            'selector': {\n              pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n              lookbehind: true\n            },\n            'string': {\n              pattern: string,\n              greedy: true\n            },\n            'property': {\n              pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n              lookbehind: true\n            },\n            'important': /!important\\b/i,\n            'function': {\n              pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n              lookbehind: true\n            },\n            'punctuation': /[(){};:,]/\n          };\n          Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n          var markup = Prism.languages.markup;\n          if (markup) {\n            markup.tag.addInlined('style', 'css');\n            markup.tag.addAttribute('style', 'css');\n          }\n        }(Prism));\n        (function (Prism) {\n          var keywords = /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\s*[(){}[\\]<>=%~.:,;?+\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/;\n          var classNamePrefix = /(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source;\n          var className = {\n            pattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n            lookbehind: true,\n            inside: {\n              'namespace': {\n                pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n                inside: { 'punctuation': /\\./ }\n              },\n              'punctuation': /\\./\n            }\n          };\n          Prism.languages.java = Prism.languages.extend('clike', {\n            'string': {\n              pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n              lookbehind: true,\n              greedy: true\n            },\n            'class-name': [\n              className,\n              {\n                pattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()]|\\s*(?:\\[[\\s,]*\\]\\s*)?::\\s*new\\b)/.source),\n                lookbehind: true,\n                inside: className.inside\n              },\n              {\n                pattern: RegExp(/(\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\s+)/.source + classNamePrefix + /[A-Z]\\w*\\b/.source),\n                lookbehind: true,\n                inside: className.inside\n              }\n            ],\n            'keyword': keywords,\n            'function': [\n              Prism.languages.clike.function,\n              {\n                pattern: /(::\\s*)[a-z_]\\w*/,\n                lookbehind: true\n              }\n            ],\n            'number': /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n            'operator': {\n              pattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n              lookbehind: true\n            },\n            'constant': /\\b[A-Z][A-Z_\\d]+\\b/\n          });\n          Prism.languages.insertBefore('java', 'string', {\n            'triple-quoted-string': {\n              pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n              greedy: true,\n              alias: 'string'\n            },\n            'char': {\n              pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n              greedy: true\n            }\n          });\n          Prism.languages.insertBefore('java', 'class-name', {\n            'annotation': {\n              pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n              lookbehind: true,\n              alias: 'punctuation'\n            },\n            'generics': {\n              pattern: /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n              inside: {\n                'class-name': className,\n                'keyword': keywords,\n                'punctuation': /[<>(),.:]/,\n                'operator': /[?&|]/\n              }\n            },\n            'import': [\n              {\n                pattern: RegExp(/(\\bimport\\s+)/.source + classNamePrefix + /(?:[A-Z]\\w*|\\*)(?=\\s*;)/.source),\n                lookbehind: true,\n                inside: {\n                  'namespace': className.inside.namespace,\n                  'punctuation': /\\./,\n                  'operator': /\\*/,\n                  'class-name': /\\w+/\n                }\n              },\n              {\n                pattern: RegExp(/(\\bimport\\s+static\\s+)/.source + classNamePrefix + /(?:\\w+|\\*)(?=\\s*;)/.source),\n                lookbehind: true,\n                alias: 'static',\n                inside: {\n                  'namespace': className.inside.namespace,\n                  'static': /\\b\\w+$/,\n                  'punctuation': /\\./,\n                  'operator': /\\*/,\n                  'class-name': /\\w+/\n                }\n              }\n            ],\n            'namespace': {\n              pattern: RegExp(/(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(/<keyword>/g, function () {\n                return keywords.source;\n              })),\n              lookbehind: true,\n              inside: { 'punctuation': /\\./ }\n            }\n          });\n        }(Prism));\n        Prism.languages.javascript = Prism.languages.extend('clike', {\n          'class-name': [\n            Prism.languages.clike['class-name'],\n            {\n              pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n              lookbehind: true\n            }\n          ],\n          'keyword': [\n            {\n              pattern: /((?:^|\\})\\s*)catch\\b/,\n              lookbehind: true\n            },\n            {\n              pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n              lookbehind: true\n            }\n          ],\n          'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n          'number': {\n            pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + (/NaN|Infinity/.source + '|' + /0[bB][01]+(?:_[01]+)*n?/.source + '|' + /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' + /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' + /\\d+(?:_\\d+)*n/.source + '|' + /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n            lookbehind: true\n          },\n          'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n        });\n        Prism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n        Prism.languages.insertBefore('javascript', 'keyword', {\n          'regex': {\n            pattern: RegExp(/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source + /\\//.source + '(?:' + /(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source + '|' + /(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source + ')' + /(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source),\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              'regex-source': {\n                pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n                lookbehind: true,\n                alias: 'language-regex',\n                inside: Prism.languages.regex\n              },\n              'regex-delimiter': /^\\/|\\/$/,\n              'regex-flags': /^[a-z]+$/\n            }\n          },\n          'function-variable': {\n            pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n            alias: 'function'\n          },\n          'parameter': [\n            {\n              pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n              lookbehind: true,\n              inside: Prism.languages.javascript\n            },\n            {\n              pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n              lookbehind: true,\n              inside: Prism.languages.javascript\n            },\n            {\n              pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n              lookbehind: true,\n              inside: Prism.languages.javascript\n            },\n            {\n              pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n              lookbehind: true,\n              inside: Prism.languages.javascript\n            }\n          ],\n          'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n        });\n        Prism.languages.insertBefore('javascript', 'string', {\n          'hashbang': {\n            pattern: /^#!.*/,\n            greedy: true,\n            alias: 'comment'\n          },\n          'template-string': {\n            pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n            greedy: true,\n            inside: {\n              'template-punctuation': {\n                pattern: /^`|`$/,\n                alias: 'string'\n              },\n              'interpolation': {\n                pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n                lookbehind: true,\n                inside: {\n                  'interpolation-punctuation': {\n                    pattern: /^\\$\\{|\\}$/,\n                    alias: 'punctuation'\n                  },\n                  rest: Prism.languages.javascript\n                }\n              },\n              'string': /[\\s\\S]+/\n            }\n          },\n          'string-property': {\n            pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n            lookbehind: true,\n            greedy: true,\n            alias: 'property'\n          }\n        });\n        Prism.languages.insertBefore('javascript', 'operator', {\n          'literal-property': {\n            pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n            lookbehind: true,\n            alias: 'property'\n          }\n        });\n        if (Prism.languages.markup) {\n          Prism.languages.markup.tag.addInlined('script', 'javascript');\n          Prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n        }\n        Prism.languages.js = Prism.languages.javascript;\n        Prism.languages.markup = {\n          'comment': {\n            pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n            greedy: true\n          },\n          'prolog': {\n            pattern: /<\\?[\\s\\S]+?\\?>/,\n            greedy: true\n          },\n          'doctype': {\n            pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n            greedy: true,\n            inside: {\n              'internal-subset': {\n                pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n                lookbehind: true,\n                greedy: true,\n                inside: null\n              },\n              'string': {\n                pattern: /\"[^\"]*\"|'[^']*'/,\n                greedy: true\n              },\n              'punctuation': /^<!|>$|[[\\]]/,\n              'doctype-tag': /^DOCTYPE/i,\n              'name': /[^\\s<>'\"]+/\n            }\n          },\n          'cdata': {\n            pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n            greedy: true\n          },\n          'tag': {\n            pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n            greedy: true,\n            inside: {\n              'tag': {\n                pattern: /^<\\/?[^\\s>\\/]+/,\n                inside: {\n                  'punctuation': /^<\\/?/,\n                  'namespace': /^[^\\s>\\/:]+:/\n                }\n              },\n              'special-attr': [],\n              'attr-value': {\n                pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n                inside: {\n                  'punctuation': [\n                    {\n                      pattern: /^=/,\n                      alias: 'attr-equals'\n                    },\n                    {\n                      pattern: /^(\\s*)[\"']|[\"']$/,\n                      lookbehind: true\n                    }\n                  ]\n                }\n              },\n              'punctuation': /\\/?>/,\n              'attr-name': {\n                pattern: /[^\\s>\\/]+/,\n                inside: { 'namespace': /^[^\\s>\\/:]+:/ }\n              }\n            }\n          },\n          'entity': [\n            {\n              pattern: /&[\\da-z]{1,8};/i,\n              alias: 'named-entity'\n            },\n            /&#x?[\\da-f]{1,8};/i\n          ]\n        };\n        Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\n        Prism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n        Prism.hooks.add('wrap', function (env) {\n          if (env.type === 'entity') {\n            env.attributes['title'] = env.content.replace(/&amp;/, '&');\n          }\n        });\n        Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n          value: function addInlined(tagName, lang) {\n            var includedCdataInside = {};\n            includedCdataInside['language-' + lang] = {\n              pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n              lookbehind: true,\n              inside: Prism.languages[lang]\n            };\n            includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n            var inside = {\n              'included-cdata': {\n                pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n                inside: includedCdataInside\n              }\n            };\n            inside['language-' + lang] = {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages[lang]\n            };\n            var def = {};\n            def[tagName] = {\n              pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n                return tagName;\n              }), 'i'),\n              lookbehind: true,\n              greedy: true,\n              inside: inside\n            };\n            Prism.languages.insertBefore('markup', 'cdata', def);\n          }\n        });\n        Object.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n          value: function (attrName, lang) {\n            Prism.languages.markup.tag.inside['special-attr'].push({\n              pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n              lookbehind: true,\n              inside: {\n                'attr-name': /^[^\\s=]+/,\n                'attr-value': {\n                  pattern: /=[\\s\\S]+/,\n                  inside: {\n                    'value': {\n                      pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n                      lookbehind: true,\n                      alias: [\n                        lang,\n                        'language-' + lang\n                      ],\n                      inside: Prism.languages[lang]\n                    },\n                    'punctuation': [\n                      {\n                        pattern: /^=/,\n                        alias: 'attr-equals'\n                      },\n                      /\"|'/\n                    ]\n                  }\n                }\n              }\n            });\n          }\n        });\n        Prism.languages.html = Prism.languages.markup;\n        Prism.languages.mathml = Prism.languages.markup;\n        Prism.languages.svg = Prism.languages.markup;\n        Prism.languages.xml = Prism.languages.extend('markup', {});\n        Prism.languages.ssml = Prism.languages.xml;\n        Prism.languages.atom = Prism.languages.xml;\n        Prism.languages.rss = Prism.languages.xml;\n        (function (Prism) {\n          var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/;\n          var constant = [\n            {\n              pattern: /\\b(?:false|true)\\b/i,\n              alias: 'boolean'\n            },\n            {\n              pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n              greedy: true,\n              lookbehind: true\n            },\n            {\n              pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n              greedy: true,\n              lookbehind: true\n            },\n            /\\b(?:null)\\b/i,\n            /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/\n          ];\n          var number = /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i;\n          var operator = /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/;\n          var punctuation = /[{}\\[\\](),:;]/;\n          Prism.languages.php = {\n            'delimiter': {\n              pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n              alias: 'important'\n            },\n            'comment': comment,\n            'variable': /\\$+(?:\\w+\\b|(?=\\{))/,\n            'package': {\n              pattern: /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n              lookbehind: true,\n              inside: { 'punctuation': /\\\\/ }\n            },\n            'class-name-definition': {\n              pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n              lookbehind: true,\n              alias: 'class-name'\n            },\n            'function-definition': {\n              pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n              lookbehind: true,\n              alias: 'function'\n            },\n            'keyword': [\n              {\n                pattern: /(\\(\\s*)\\b(?:array|bool|boolean|float|int|integer|object|string)\\b(?=\\s*\\))/i,\n                alias: 'type-casting',\n                greedy: true,\n                lookbehind: true\n              },\n              {\n                pattern: /([(,?]\\s*)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string)\\b(?=\\s*\\$)/i,\n                alias: 'type-hint',\n                greedy: true,\n                lookbehind: true\n              },\n              {\n                pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|never|object|self|static|string|void)\\b/i,\n                alias: 'return-type',\n                greedy: true,\n                lookbehind: true\n              },\n              {\n                pattern: /\\b(?:array(?!\\s*\\()|bool|float|int|iterable|mixed|object|string|void)\\b/i,\n                alias: 'type-declaration',\n                greedy: true\n              },\n              {\n                pattern: /(\\|\\s*)(?:false|null)\\b|\\b(?:false|null)(?=\\s*\\|)/i,\n                alias: 'type-declaration',\n                greedy: true,\n                lookbehind: true\n              },\n              {\n                pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n                alias: 'static-context',\n                greedy: true\n              },\n              {\n                pattern: /(\\byield\\s+)from\\b/i,\n                lookbehind: true\n              },\n              /\\bclass\\b/i,\n              {\n                pattern: /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|never|new|or|parent|print|private|protected|public|readonly|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\\b/i,\n                lookbehind: true\n              }\n            ],\n            'argument-name': {\n              pattern: /([(,]\\s*)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n              lookbehind: true\n            },\n            'class-name': [\n              {\n                pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                greedy: true,\n                lookbehind: true\n              },\n              {\n                pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                greedy: true,\n                lookbehind: true\n              },\n              {\n                pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n                greedy: true\n              },\n              {\n                pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n                alias: 'class-name-fully-qualified',\n                greedy: true,\n                lookbehind: true,\n                inside: { 'punctuation': /\\\\/ }\n              },\n              {\n                pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n                alias: 'class-name-fully-qualified',\n                greedy: true,\n                inside: { 'punctuation': /\\\\/ }\n              },\n              {\n                pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n                alias: 'class-name-fully-qualified',\n                greedy: true,\n                lookbehind: true,\n                inside: { 'punctuation': /\\\\/ }\n              },\n              {\n                pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n                alias: 'type-declaration',\n                greedy: true\n              },\n              {\n                pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n                alias: [\n                  'class-name-fully-qualified',\n                  'type-declaration'\n                ],\n                greedy: true,\n                inside: { 'punctuation': /\\\\/ }\n              },\n              {\n                pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n                alias: 'static-context',\n                greedy: true\n              },\n              {\n                pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n                alias: [\n                  'class-name-fully-qualified',\n                  'static-context'\n                ],\n                greedy: true,\n                inside: { 'punctuation': /\\\\/ }\n              },\n              {\n                pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n                alias: 'type-hint',\n                greedy: true,\n                lookbehind: true\n              },\n              {\n                pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n                alias: [\n                  'class-name-fully-qualified',\n                  'type-hint'\n                ],\n                greedy: true,\n                lookbehind: true,\n                inside: { 'punctuation': /\\\\/ }\n              },\n              {\n                pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                alias: 'return-type',\n                greedy: true,\n                lookbehind: true\n              },\n              {\n                pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n                alias: [\n                  'class-name-fully-qualified',\n                  'return-type'\n                ],\n                greedy: true,\n                lookbehind: true,\n                inside: { 'punctuation': /\\\\/ }\n              }\n            ],\n            'constant': constant,\n            'function': {\n              pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n              lookbehind: true,\n              inside: { 'punctuation': /\\\\/ }\n            },\n            'property': {\n              pattern: /(->\\s*)\\w+/,\n              lookbehind: true\n            },\n            'number': number,\n            'operator': operator,\n            'punctuation': punctuation\n          };\n          var string_interpolation = {\n            pattern: /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n            lookbehind: true,\n            inside: Prism.languages.php\n          };\n          var string = [\n            {\n              pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n              alias: 'nowdoc-string',\n              greedy: true,\n              inside: {\n                'delimiter': {\n                  pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n                  alias: 'symbol',\n                  inside: { 'punctuation': /^<<<'?|[';]$/ }\n                }\n              }\n            },\n            {\n              pattern: /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n              alias: 'heredoc-string',\n              greedy: true,\n              inside: {\n                'delimiter': {\n                  pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n                  alias: 'symbol',\n                  inside: { 'punctuation': /^<<<\"?|[\";]$/ }\n                },\n                'interpolation': string_interpolation\n              }\n            },\n            {\n              pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n              alias: 'backtick-quoted-string',\n              greedy: true\n            },\n            {\n              pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n              alias: 'single-quoted-string',\n              greedy: true\n            },\n            {\n              pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n              alias: 'double-quoted-string',\n              greedy: true,\n              inside: { 'interpolation': string_interpolation }\n            }\n          ];\n          Prism.languages.insertBefore('php', 'variable', {\n            'string': string,\n            'attribute': {\n              pattern: /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n              greedy: true,\n              inside: {\n                'attribute-content': {\n                  pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n                  lookbehind: true,\n                  inside: {\n                    'comment': comment,\n                    'string': string,\n                    'attribute-class-name': [\n                      {\n                        pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                        alias: 'class-name',\n                        greedy: true,\n                        lookbehind: true\n                      },\n                      {\n                        pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n                        alias: [\n                          'class-name',\n                          'class-name-fully-qualified'\n                        ],\n                        greedy: true,\n                        lookbehind: true,\n                        inside: { 'punctuation': /\\\\/ }\n                      }\n                    ],\n                    'constant': constant,\n                    'number': number,\n                    'operator': operator,\n                    'punctuation': punctuation\n                  }\n                },\n                'delimiter': {\n                  pattern: /^#\\[|\\]$/,\n                  alias: 'punctuation'\n                }\n              }\n            }\n          });\n          Prism.hooks.add('before-tokenize', function (env) {\n            if (!/<\\?/.test(env.code)) {\n              return;\n            }\n            var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/g;\n            Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n          });\n          Prism.hooks.add('after-tokenize', function (env) {\n            Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n          });\n        }(Prism));\n        Prism.languages.python = {\n          'comment': {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true,\n            greedy: true\n          },\n          'string-interpolation': {\n            pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n            greedy: true,\n            inside: {\n              'interpolation': {\n                pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n                lookbehind: true,\n                inside: {\n                  'format-spec': {\n                    pattern: /(:)[^:(){}]+(?=\\}$)/,\n                    lookbehind: true\n                  },\n                  'conversion-option': {\n                    pattern: /![sra](?=[:}]$)/,\n                    alias: 'punctuation'\n                  },\n                  rest: null\n                }\n              },\n              'string': /[\\s\\S]+/\n            }\n          },\n          'triple-quoted-string': {\n            pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n            greedy: true,\n            alias: 'string'\n          },\n          'string': {\n            pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n            greedy: true\n          },\n          'function': {\n            pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n            lookbehind: true\n          },\n          'class-name': {\n            pattern: /(\\bclass\\s+)\\w+/i,\n            lookbehind: true\n          },\n          'decorator': {\n            pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n            lookbehind: true,\n            alias: [\n              'annotation',\n              'punctuation'\n            ],\n            inside: { 'punctuation': /\\./ }\n          },\n          'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n          'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n          'boolean': /\\b(?:False|None|True)\\b/,\n          'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n          'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n          'punctuation': /[{}[\\];(),.:]/\n        };\n        Prism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\n        Prism.languages.py = Prism.languages.python;\n        (function (Prism) {\n          Prism.languages.ruby = Prism.languages.extend('clike', {\n            'comment': {\n              pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\n              greedy: true\n            },\n            'class-name': {\n              pattern: /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\n              lookbehind: true,\n              inside: { 'punctuation': /[.\\\\]/ }\n            },\n            'keyword': /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\n            'operator': /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\n            'punctuation': /[(){}[\\].,;]/\n          });\n          Prism.languages.insertBefore('ruby', 'operator', {\n            'double-colon': {\n              pattern: /::/,\n              alias: 'punctuation'\n            }\n          });\n          var interpolation = {\n            pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\n            lookbehind: true,\n            inside: {\n              'content': {\n                pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\n                lookbehind: true,\n                inside: Prism.languages.ruby\n              },\n              'delimiter': {\n                pattern: /^#\\{|\\}$/,\n                alias: 'punctuation'\n              }\n            }\n          };\n          delete Prism.languages.ruby.function;\n          var percentExpression = '(?:' + [\n            /([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n            /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source,\n            /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source,\n            /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source,\n            /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source\n          ].join('|') + ')';\n          var symbolName = /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/.source;\n          Prism.languages.insertBefore('ruby', 'keyword', {\n            'regex-literal': [\n              {\n                pattern: RegExp(/%r/.source + percentExpression + /[egimnosux]{0,6}/.source),\n                greedy: true,\n                inside: {\n                  'interpolation': interpolation,\n                  'regex': /[\\s\\S]+/\n                }\n              },\n              {\n                pattern: /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                  'interpolation': interpolation,\n                  'regex': /[\\s\\S]+/\n                }\n              }\n            ],\n            'variable': /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n            'symbol': [\n              {\n                pattern: RegExp(/(^|[^:]):/.source + symbolName),\n                lookbehind: true,\n                greedy: true\n              },\n              {\n                pattern: RegExp(/([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source),\n                lookbehind: true,\n                greedy: true\n              }\n            ],\n            'method-definition': {\n              pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\n              lookbehind: true,\n              inside: {\n                'function': /\\b\\w+$/,\n                'keyword': /^self\\b/,\n                'class-name': /^\\w+/,\n                'punctuation': /\\./\n              }\n            }\n          });\n          Prism.languages.insertBefore('ruby', 'string', {\n            'string-literal': [\n              {\n                pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\n                greedy: true,\n                inside: {\n                  'interpolation': interpolation,\n                  'string': /[\\s\\S]+/\n                }\n              },\n              {\n                pattern: /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n                greedy: true,\n                inside: {\n                  'interpolation': interpolation,\n                  'string': /[\\s\\S]+/\n                }\n              },\n              {\n                pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n                alias: 'heredoc-string',\n                greedy: true,\n                inside: {\n                  'delimiter': {\n                    pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\n                    inside: {\n                      'symbol': /\\b\\w+/,\n                      'punctuation': /^<<[-~]?/\n                    }\n                  },\n                  'interpolation': interpolation,\n                  'string': /[\\s\\S]+/\n                }\n              },\n              {\n                pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n                alias: 'heredoc-string',\n                greedy: true,\n                inside: {\n                  'delimiter': {\n                    pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\n                    inside: {\n                      'symbol': /\\b\\w+/,\n                      'punctuation': /^<<[-~]?'|'$/\n                    }\n                  },\n                  'string': /[\\s\\S]+/\n                }\n              }\n            ],\n            'command-literal': [\n              {\n                pattern: RegExp(/%x/.source + percentExpression),\n                greedy: true,\n                inside: {\n                  'interpolation': interpolation,\n                  'command': {\n                    pattern: /[\\s\\S]+/,\n                    alias: 'string'\n                  }\n                }\n              },\n              {\n                pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\n                greedy: true,\n                inside: {\n                  'interpolation': interpolation,\n                  'command': {\n                    pattern: /[\\s\\S]+/,\n                    alias: 'string'\n                  }\n                }\n              }\n            ]\n          });\n          delete Prism.languages.ruby.string;\n          Prism.languages.insertBefore('ruby', 'number', {\n            'builtin': /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\n            'constant': /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\n          });\n          Prism.languages.rb = Prism.languages.ruby;\n        }(Prism));\n        var Prism$1 = prismCore.exports;\n        var prismjs = { boltExport: Prism$1 };\n        return prismjs;\n      }));\n      var prism = window.Prism;\n      window.Prism = oldprism;\n      return prism;\n    }(undefined, exports$1, module));\n    var Prism$1 = module.exports.boltExport;\n\n    var getLanguages$1 = function (editor) {\n      return editor.getParam('codesample_languages');\n    };\n    var useGlobalPrismJS = function (editor) {\n      return editor.getParam('codesample_global_prismjs', false, 'boolean');\n    };\n\n    var get = function (editor) {\n      return Global.Prism && useGlobalPrismJS(editor) ? Global.Prism : Prism$1;\n    };\n\n    var getSelectedCodeSample = function (editor) {\n      var node = editor.selection ? editor.selection.getNode() : null;\n      return someIf(isCodeSample(node), node);\n    };\n    var insertCodeSample = function (editor, language, code) {\n      editor.undoManager.transact(function () {\n        var node = getSelectedCodeSample(editor);\n        code = global$1.DOM.encode(code);\n        return node.fold(function () {\n          editor.insertContent('<pre id=\"__new\" class=\"language-' + language + '\">' + code + '</pre>');\n          editor.selection.select(editor.$('#__new').removeAttr('id')[0]);\n        }, function (n) {\n          editor.dom.setAttrib(n, 'class', 'language-' + language);\n          n.innerHTML = code;\n          get(editor).highlightElement(n);\n          editor.selection.select(n);\n        });\n      });\n    };\n    var getCurrentCode = function (editor) {\n      var node = getSelectedCodeSample(editor);\n      return node.fold(constant(''), function (n) {\n        return n.textContent;\n      });\n    };\n\n    var getLanguages = function (editor) {\n      var defaultLanguages = [\n        {\n          text: 'HTML/XML',\n          value: 'markup'\n        },\n        {\n          text: 'JavaScript',\n          value: 'javascript'\n        },\n        {\n          text: 'CSS',\n          value: 'css'\n        },\n        {\n          text: 'PHP',\n          value: 'php'\n        },\n        {\n          text: 'Ruby',\n          value: 'ruby'\n        },\n        {\n          text: 'Python',\n          value: 'python'\n        },\n        {\n          text: 'Java',\n          value: 'java'\n        },\n        {\n          text: 'C',\n          value: 'c'\n        },\n        {\n          text: 'C#',\n          value: 'csharp'\n        },\n        {\n          text: 'C++',\n          value: 'cpp'\n        }\n      ];\n      var customLanguages = getLanguages$1(editor);\n      return customLanguages ? customLanguages : defaultLanguages;\n    };\n    var getCurrentLanguage = function (editor, fallback) {\n      var node = getSelectedCodeSample(editor);\n      return node.fold(function () {\n        return fallback;\n      }, function (n) {\n        var matches = n.className.match(/language-(\\w+)/);\n        return matches ? matches[1] : fallback;\n      });\n    };\n\n    var open = function (editor) {\n      var languages = getLanguages(editor);\n      var defaultLanguage = head(languages).fold(constant(''), function (l) {\n        return l.value;\n      });\n      var currentLanguage = getCurrentLanguage(editor, defaultLanguage);\n      var currentCode = getCurrentCode(editor);\n      editor.windowManager.open({\n        title: 'Insert/Edit Code Sample',\n        size: 'large',\n        body: {\n          type: 'panel',\n          items: [\n            {\n              type: 'selectbox',\n              name: 'language',\n              label: 'Language',\n              items: languages\n            },\n            {\n              type: 'textarea',\n              name: 'code',\n              label: 'Code view'\n            }\n          ]\n        },\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: {\n          language: currentLanguage,\n          code: currentCode\n        },\n        onSubmit: function (api) {\n          var data = api.getData();\n          insertCodeSample(editor, data.language, data.code);\n          api.close();\n        }\n      });\n    };\n\n    var register$1 = function (editor) {\n      editor.addCommand('codesample', function () {\n        var node = editor.selection.getNode();\n        if (editor.selection.isCollapsed() || isCodeSample(node)) {\n          open(editor);\n        } else {\n          editor.formatter.toggle('code');\n        }\n      });\n    };\n\n    var setup = function (editor) {\n      var $ = editor.$;\n      editor.on('PreProcess', function (e) {\n        $('pre[contenteditable=false]', e.node).filter(trimArg(isCodeSample)).each(function (idx, elm) {\n          var $elm = $(elm), code = elm.textContent;\n          $elm.attr('class', $.trim($elm.attr('class')));\n          $elm.removeAttr('contentEditable');\n          $elm.empty().append($('<code></code>').each(function () {\n            this.textContent = code;\n          }));\n        });\n      });\n      editor.on('SetContent', function () {\n        var unprocessedCodeSamples = $('pre').filter(trimArg(isCodeSample)).filter(function (idx, elm) {\n          return elm.contentEditable !== 'false';\n        });\n        if (unprocessedCodeSamples.length) {\n          editor.undoManager.transact(function () {\n            unprocessedCodeSamples.each(function (idx, elm) {\n              $(elm).find('br').each(function (idx, elm) {\n                elm.parentNode.replaceChild(editor.getDoc().createTextNode('\\n'), elm);\n              });\n              elm.contentEditable = 'false';\n              elm.innerHTML = editor.dom.encode(elm.textContent);\n              get(editor).highlightElement(elm);\n              elm.className = $.trim(elm.className);\n            });\n          });\n        }\n      });\n    };\n\n    var isCodeSampleSelection = function (editor) {\n      var node = editor.selection.getStart();\n      return editor.dom.is(node, 'pre[class*=\"language-\"]');\n    };\n    var register = function (editor) {\n      var onAction = function () {\n        return editor.execCommand('codesample');\n      };\n      editor.ui.registry.addToggleButton('codesample', {\n        icon: 'code-sample',\n        tooltip: 'Insert/edit code sample',\n        onAction: onAction,\n        onSetup: function (api) {\n          var nodeChangeHandler = function () {\n            api.setActive(isCodeSampleSelection(editor));\n          };\n          editor.on('NodeChange', nodeChangeHandler);\n          return function () {\n            return editor.off('NodeChange', nodeChangeHandler);\n          };\n        }\n      });\n      editor.ui.registry.addMenuItem('codesample', {\n        text: 'Code sample...',\n        icon: 'code-sample',\n        onAction: onAction\n      });\n    };\n\n    function Plugin () {\n      global$2.add('codesample', function (editor) {\n        setup(editor);\n        register(editor);\n        register$1(editor);\n        editor.on('dblclick', function (ev) {\n          if (isCodeSample(ev.target)) {\n            open(editor);\n          }\n        });\n      });\n    }\n\n    Plugin();\n\n}());\n"],"names":["call","id","global$2","tinymce","util","Tools","resolve","noop","constant","value","identity","x","never","always","none","NONE","fold","n","_s","isSome","isNone","getOr","getOrThunk","thunk","getOrDie","msg","Error","getOrNull","getOrUndefined","undefined","or","orThunk","map","each","bind","exists","forall","filter","toArray","toString","some","a","constant_a","self","me","f","s","Optional","from","head","xs","i","length","get$1","global$1","isCodeSample","elm","nodeName","className","indexOf","trimArg","predicateFn","arg1","arg2","Global","window","Function","exports$1","module","exports","global","define","require","oldprism","Prism","manual","factory","amd","globalThis","EphoxContactWrapper","this","commonjsGlobal","prismCore","_self","lang","uniqueId","plainTextGrammar","_","disableWorkerMessageHandler","encode","tokens","Token","type","content","alias","Array","isArray","replace","o","Object","prototype","slice","objId","obj","defineProperty","clone","deepClone","visited","key","hasOwnProperty","forEach","v","getLanguage","element","m","exec","toLowerCase","parentElement","setLanguage","language","RegExp","source","classList","add","currentScript","document","err","src","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","contains","languages","plain","plaintext","text","txt","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","parent","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","hasAttribute","setAttribute","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","rest","tokenList","LinkedList","addAfter","matchGrammar","list","array","node","next","tail","push","all","name","callbacks","matchedStr","matchPattern","pattern","pos","lookbehind","lastIndex","match","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","greedy","flags","currentNode","reach","str","removeCount","to","p","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","e","tag","classes","attributes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","setTimeout","WorkerGlobalScope","clike","getPlaceholder","toUpperCase","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","placeholder","markup","tokenizePlaceholders","keys","walkTokens","t","substring","middle","replacement","splice","concat","c","keyword","modName","cpp","replacements","re","nested","depthLog2","keywordKinds","keywordsToPattern","words","trim","typeDeclarationKeywords","keywords","nonTypeKeywords","nonContextualKeywords","generic","nestedRound","genericName","identifier","typeExpressionWithoutTuple","tupleElement","tuple","typeExpression","typeInside","character","regularString","verbatimString","csharp","regularStringOrCharacter","regularStringCharacterOrComment","roundExpression","attrTarget","attr","formatString","mInterpolationRound","mInterpolation","sInterpolationRound","sInterpolation","createInterpolationInside","interpolation","interpolationRound","dotnet","cs","string","css","addInlined","addAttribute","classNamePrefix","java","function","namespace","javascript","regex","js","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","comment","number","operator","punctuation","php","string_interpolation","test","python","py","ruby","percentExpression","symbolName","rb","boltExport","prism","Prism$1","get","editor","getParam","useGlobalPrismJS","getSelectedCodeSample","b","selection","getNode","open","customLanguages","getLanguages$1","getLanguages","defaultLanguage","l","currentLanguage","fallback","matches","getCurrentLanguage","currentCode","getCurrentCode","windowManager","title","size","body","items","label","buttons","primary","initialData","onSubmit","api","getData","undoManager","transact","DOM","insertContent","select","$","removeAttr","dom","setAttrib","insertCodeSample","on","idx","$elm","empty","append","unprocessedCodeSamples","contentEditable","find","parentNode","replaceChild","getDoc","createTextNode","setup","onAction","execCommand","ui","registry","addToggleButton","icon","tooltip","onSetup","nodeChangeHandler","setActive","getStart","is","isCodeSampleSelection","off","addMenuItem","register","addCommand","isCollapsed","formatter","toggle","register$1","ev","target"],"sourceRoot":""}