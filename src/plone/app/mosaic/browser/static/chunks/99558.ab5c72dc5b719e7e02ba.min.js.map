{"version":3,"file":"chunks/99558.ab5c72dc5b719e7e02ba.min.js","mappings":"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","sources":["webpack://plone-mosaic/./node_modules/@plone/mockup/src/pat/select2/select2.js","webpack://plone-mosaic/./node_modules/@plone/mockup/src/pat/relateditems/relateditems.js","webpack://plone-mosaic/./node_modules/@plone/mockup/src/pat/autotoc/autotoc.js","webpack://plone-mosaic/./node_modules/@plone/mockup/src/pat/tinymce/js/links.js","webpack://plone-mosaic/./node_modules/@plone/mockup/src/pat/upload/upload.js"],"sourcesContent":["import $ from \"jquery\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\nimport utils from \"../../core/utils\";\n\nexport default Base.extend({\n    name: \"select2\",\n    trigger: \".pat-select2\",\n    parser: \"mockup\",\n    defaults: {\n        separator: \",\",\n    },\n    initializeValues: function () {\n        var self = this;\n        // Init Selection ---------------------------------------------\n        if (self.options.initialValues) {\n            self.options.id = function (term) {\n                return term.id;\n            };\n            self.options.initSelection = function ($el, callback) {\n                var data = [],\n                    value = $el.val(),\n                    seldefaults = self.options.initialValues;\n\n                // Create the initSelection value that contains the default selection,\n                // but in a javascript object\n                if (\n                    typeof self.options.initialValues === \"string\" &&\n                    self.options.initialValues !== \"\"\n                ) {\n                    // if default selection value starts with a '{', then treat the value as\n                    // a JSON object that needs to be parsed\n                    if (self.options.initialValues[0] === \"{\") {\n                        seldefaults = JSON.parse(self.options.initialValues);\n                    }\n                    // otherwise, treat the value as a list, separated by the defaults.separator value of\n                    // strings in the format \"id:text\", and convert it to an object\n                    else {\n                        seldefaults = {};\n                        $(self.options.initialValues.split(self.options.separator)).each(\n                            function () {\n                                var selection = this.split(\":\");\n                                var id = $.trim(selection[0]);\n                                var text = $.trim(selection[1]);\n                                seldefaults[id] = text;\n                            }\n                        );\n                    }\n                }\n\n                $(value.split(self.options.separator)).each(function () {\n                    var text = this;\n                    if (seldefaults[this]) {\n                        text = seldefaults[this];\n                    }\n                    data.push({\n                        id: utils.removeHTML(this),\n                        text: utils.removeHTML(text),\n                    });\n                });\n                callback(data);\n            };\n        }\n    },\n    initializeTags: function () {\n        var self = this;\n        if (self.options.tags && typeof self.options.tags === \"string\") {\n            if (self.options.tags.substr(0, 1) === \"[\") {\n                self.options.tags = JSON.parse(self.options.tags);\n            } else {\n                self.options.tags = self.options.tags.split(self.options.separator);\n            }\n        }\n\n        if (self.options.tags && !self.options.allowNewItems) {\n            self.options.data = $.map(self.options.tags, function (value, i) {\n                return { id: value, text: value };\n            });\n            self.options.multiple = true;\n            delete self.options.tags;\n        }\n    },\n    initializeOrdering: function () {\n        if (!this.options.orderable) {\n            return;\n        }\n        // TODO: fix sorting!\n        this.$el.on(\"change\", async () => {\n            let Sortable = await import(\"sortablejs\");\n            Sortable = Sortable.default;\n\n            const sortable_el = this.$select2[0].querySelector(\".select2-choices\");\n\n            new Sortable(sortable_el, {\n                draggable: \"li\",\n                dragClass: \"select2-choice-dragging\",\n                chosenClass: \"dragging\",\n                onStart: () => this.$el.select2(\"onSortStart\"),\n                onEnd: () => this.$el.select2(\"onSortEnd\"),\n            });\n        });\n    },\n    initializeSelect2: async function () {\n        import(\"select2/select2.css\");\n        import(\"./select2.scss\");\n        await import(\"select2\");\n\n        var self = this;\n        self.options.formatResultCssClass = function (ob) {\n            if (ob.id) {\n                return (\n                    \"select2-option-\" +\n                    ob.id.toLowerCase().replace(/[ \\:\\)\\(\\[\\]\\{\\}\\_\\+\\=\\&\\*\\%\\#]/g, \"-\")\n                );\n            }\n        };\n\n        function callback(action, e) {\n            if (action) {\n                if (self.options.debug) {\n                    console.debug(\"callback\", action, e);\n                }\n                if (typeof action === \"string\") {\n                    action = window[action];\n                }\n                return action(e);\n            } else {\n                return action;\n            }\n        }\n\n        $(self.el).select2(self.options);\n        self.$el.on(\"select2-selected\", function (e) {\n            callback(self.options.onSelected, e);\n        });\n        self.$el.on(\"select2-selecting\", function (e) {\n            callback(self.options.onSelecting, e);\n        });\n        self.$el.on(\"select2-deselecting\", function (e) {\n            callback(self.options.onDeselecting, e);\n        });\n        self.$el.on(\"select2-deselected\", function (e) {\n            callback(self.options.onDeselected, e);\n        });\n        self.$select2 = self.$el.parent().find(\".select2-container\");\n        self.$el.parent().off(\"close.plone-modal.patterns\");\n        if (self.options.orderable) {\n            self.$select2.addClass(\"select2-orderable\");\n        }\n    },\n    opened: function () {\n        var self = this;\n        var isOpen = $(\".select2-dropdown-open\", self.$el.parent()).length === 1;\n        return isOpen;\n    },\n    init: async function () {\n        var self = this;\n\n        self.options.allowNewItems = self.options.hasOwnProperty(\"allowNewItems\")\n            ? JSON.parse(self.options.allowNewItems)\n            : true;\n\n        if (self.options.ajax || self.options.vocabularyUrl) {\n            if (self.options.vocabularyUrl) {\n                self.options.multiple =\n                    self.options.multiple === undefined ? true : self.options.multiple;\n                self.options.ajax = self.options.ajax || {};\n                self.options.ajax.url = self.options.vocabularyUrl;\n                // XXX removing the following function does'nt break tests. dead code?\n                self.options.initSelection = function ($el, callback) {\n                    var data = [],\n                        value = $el.val();\n                    $(value.split(self.options.separator)).each(function () {\n                        var val = utils.removeHTML(this);\n                        data.push({ id: val, text: val });\n                    });\n                    callback(data);\n                };\n            }\n\n            var queryTerm = \"\";\n            self.options.ajax = $.extend(\n                {\n                    quietMillis: 300,\n                    data: function (term, page) {\n                        queryTerm = term;\n                        return {\n                            query: term,\n                            page_limit: 10,\n                            page: page,\n                        };\n                    },\n                    results: function (data, page) {\n                        var results = data.results;\n                        if (self.options.vocabularyUrl) {\n                            var dataIds = [];\n                            $.each(data.results, function (i, item) {\n                                dataIds.push(item.id);\n                            });\n                            results = [];\n\n                            var haveResult =\n                                queryTerm === \"\" || $.inArray(queryTerm, dataIds) >= 0;\n                            if (self.options.allowNewItems && !haveResult) {\n                                queryTerm = utils.removeHTML(queryTerm);\n                                results.push({\n                                    id: queryTerm,\n                                    text: queryTerm,\n                                });\n                            }\n\n                            $.each(data.results, function (i, item) {\n                                results.push(item);\n                            });\n                        }\n                        return { results: results };\n                    },\n                },\n                self.options.ajax\n            );\n        } else if (self.options.multiple && self.$el.is(\"select\")) {\n            // Multiselects need to be converted to input[type=hidden]\n            // for Select2\n            var vals = self.$el.val() || [];\n            var options = $.map(self.$el.find(\"option\"), function (o) {\n                return { text: $(o).html(), id: o.value };\n            });\n            var $hidden = $('<input type=\"hidden\" />');\n            $hidden.val(vals.join(self.options.separator));\n            $hidden.attr(\"class\", self.$el.attr(\"class\"));\n            $hidden.attr(\"name\", self.$el.attr(\"name\"));\n            $hidden.attr(\"id\", self.$el.attr(\"id\"));\n            self.$orig = self.$el;\n            self.$el.replaceWith($hidden);\n            self.$el = $hidden;\n            self.options.data = options;\n        }\n\n        self.initializeValues();\n        self.initializeTags();\n        self.initializeOrdering();\n        await self.initializeSelect2();\n    },\n});\n","import $ from \"jquery\";\nimport _ from \"underscore\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\nimport _t from \"../../core/i18n-wrapper\";\nimport utils from \"../../core/utils\";\nimport registry from \"@patternslib/patternslib/src/core/registry\";\nimport Select2 from \"../select2/select2\";\n\nconst KEY = {\n    LEFT: 37,\n    RIGHT: 39,\n};\n\nexport default Base.extend({\n    name: \"relateditems\",\n    trigger: \".pat-relateditems\",\n    parser: \"mockup\",\n    currentPath: undefined,\n    selectedUIDs: [],\n    openAfterInit: undefined,\n    defaults: {\n        // main option\n        vocabularyUrl: null, // must be set to work\n\n        // more options\n        attributes: [\n            \"UID\",\n            \"Title\",\n            \"portal_type\",\n            \"path\",\n            \"getURL\",\n            \"getIcon\",\n            \"is_folderish\",\n            \"review_state\",\n        ], // used by utils.QueryHelper\n        basePath: \"\",\n        pageSize: 10,\n        browsing: undefined,\n        closeOnSelect: true,\n        contextPath: undefined,\n        dropdownCssClass: \"pat-relateditems-dropdown\",\n        favorites: [],\n        recentlyUsed: false,\n        recentlyUsedMaxItems: 20,\n        recentlyUsedKey: \"relateditems_recentlyused\",\n        maximumSelectionSize: -1,\n        minimumInputLength: 0,\n        mode: \"browse\", // possible values are 'auto', 'search' and 'browse'.\n        orderable: true, // mockup-patterns-select2\n        pathOperator: \"plone.app.querystring.operation.string.path\",\n        rootPath: \"/\",\n        rootUrl: \"\", // default to be relative.\n        scanSelection: false, // False, to no unnecessarily use CPU time on this.\n        selectableTypes: null, // null means everything is selectable, otherwise a list of strings to match types that are selectable\n        separator: \",\",\n        sortOn: null,\n        sortOrder: \"ascending\",\n        tokenSeparators: [\",\", \" \"],\n        upload: false,\n        uploadAllowView: undefined,\n\n        // templates\n        breadcrumbTemplateSelector: null,\n        favoriteTemplateSelector: null,\n        recentlyusedTemplateSelector: null,\n        resultTemplateSelector: null,\n        selectionTemplateSelector: null,\n        toolbarTemplateSelector: null,\n\n        // needed\n        multiple: true,\n    },\n\n    recentlyUsed: function (filterSelectable) {\n        var ret = utils.storage.get(this.options.recentlyUsedKey) || [];\n        // hard-limit to 1000 entries\n        ret = ret.slice(ret.length - 1000, ret.length);\n        if (filterSelectable) {\n            // Filter out only selectable items.\n            // This is used only to create the list of items to be displayed.\n            // the list to be stored is unfiltered and can be reused among\n            // different instances of this widget with different settings.\n            ret.filter(this.isSelectable.bind(this));\n        }\n        // max is applied AFTER filtering selectable items.\n        var max = parseInt(this.options.recentlyUsedMaxItems, 10);\n        if (max) {\n            // return the slice from the end, as we want to display newest items first.\n            ret = ret.slice(ret.length - max, ret.length);\n        }\n        return ret;\n    },\n\n    applyTemplate: function (tpl, item) {\n        var self = this;\n        var template;\n        if (self.options[tpl + \"TemplateSelector\"]) {\n            template = $(self.options[tpl + \"TemplateSelector\"]).html();\n        }\n        if (!template) {\n            if(self.options[tpl + \"Template\"]) {\n                template = self.options[tpl + \"Template\"];\n            } else {\n                template = self[tpl + \"Template\"];\n            }\n        }\n        // let's give all the options possible to the template generation\n        var options = $.extend(true, {}, self.options, item, {\n            browsing: self.browsing,\n            open_folder: _t(\"Open folder\"),\n            current_directory: _t(\"current directory:\"),\n            one_level_up: _t(\"Go one level up\"),\n        });\n        options._item = item;\n        return _.template(template)(options);\n    },\n\n    setAjax: function () {\n        var ajax = {\n            url: this.options.vocabularyUrl,\n            dataType: \"JSON\",\n            quietMillis: 500,\n\n            data: function (term, page) {\n                var criterias = [];\n                if (term) {\n                    term = \"*\" + term + \"*\";\n                    criterias.push({\n                        i: \"SearchableText\",\n                        o: \"plone.app.querystring.operation.string.contains\",\n                        v: term,\n                    });\n                }\n\n                // We don't restrict for selectable types while browsing...\n                if (!this.browsing && this.options.selectableTypes) {\n                    criterias.push({\n                        i: \"portal_type\",\n                        o: \"plone.app.querystring.operation.selection.any\",\n                        v: this.options.selectableTypes,\n                    });\n                }\n\n                criterias.push({\n                    i: \"path\",\n                    o: this.options.pathOperator,\n                    v:\n                        this.options.rootPath +\n                        this.currentPath +\n                        (this.browsing ? \"::1\" : \"\"),\n                });\n\n                var sort_on = this.options.sortOn;\n                var sort_order = sort_on ? this.options.sortOrder : null;\n                if (this.browsing && sort_on === null) {\n                    sort_on = \"getObjPositionInParent\";\n                    sort_order = \"ascending\";\n                }\n\n                var data = {\n                    query: JSON.stringify({\n                        criteria: criterias,\n                        sort_on: sort_on,\n                        sort_order: sort_order,\n                    }),\n                    attributes: JSON.stringify(this.options.attributes),\n                    batch: JSON.stringify({\n                        page: page ? page : 1,\n                        size: this.options.pageSize,\n                    }),\n                };\n                return data;\n            }.bind(this),\n\n            results: function (data, page) {\n                var more = page * this.options.pageSize < data.total;\n                var results = data.results;\n\n                this.selectedUIDs = ($(this.el).select2(\"data\") || []).map(function (\n                    el\n                ) {\n                    // populate current selection. Reuse in formatResult\n                    return el.UID;\n                });\n\n                // Filter out items:\n                // While browsing: always include folderish items\n                // Browsing and searching: Only include selectable items which are not already selected, and all folders\n                // even if they're selected, as we need them available for browsing/selecting their children\n                results = results.filter(\n                    function (item) {\n                        if (\n                            (this.browsing && item.is_folderish) ||\n                            (this.isSelectable(item) &&\n                                this.selectedUIDs.indexOf(item.UID) === -1)\n                        ) {\n                            return true;\n                        }\n                        return false;\n                    }.bind(this)\n                );\n\n                // Extend ``data`` with a ``oneLevelUp`` item when browsing\n                var path = this.currentPath.split(\"/\");\n                if (\n                    page === 1 && // Show level up only on top.\n                    this.browsing && // only level up when browsing\n                    path.length > 1 && // do not try to level up one level under root.\n                    this.currentPath !== \"/\" // do not try to level up beyond root\n                ) {\n                    results = [\n                        {\n                            oneLevelUp: true,\n                            Title: _t(\"One level up\"),\n                            path: path.slice(0, path.length - 1).join(\"/\") || \"/\",\n                            currentPath: this.currentPath,\n                            is_folderish: true,\n                            selectable: false,\n                        },\n                    ].concat(results);\n                }\n                return {\n                    results: results,\n                    more: more,\n                };\n            }.bind(this),\n        };\n        this.options.ajax = ajax;\n    },\n\n    renderToolbar: async function () {\n        var self = this;\n        var path = self.currentPath;\n        var html;\n\n        var paths = path.split(\"/\");\n        var itemPath = \"\";\n        var itemsHtml = \"\";\n        _.each(paths, function (node) {\n            if (node !== \"\") {\n                var item = {};\n                item.path = itemPath = itemPath + \"/\" + node;\n                item.text = node;\n                itemsHtml = itemsHtml + self.applyTemplate(\"breadcrumb\", item);\n            }\n        });\n\n        // favorites\n        var favoritesHtml = \"\";\n        _.each(self.options.favorites, function (item) {\n            var item_copy = _.clone(item);\n            item_copy.path = item_copy.path.substr(self.options.rootPath.length) || \"/\";\n            favoritesHtml = favoritesHtml + self.applyTemplate(\"favorite\", item_copy);\n        });\n\n        var recentlyUsedHtml = \"\";\n        if (self.options.recentlyUsed) {\n            var recentlyUsed = self.recentlyUsed(true); // filter out only those items which can actually be selected\n            _.each(recentlyUsed.reverse(), function (item) {\n                // reverse to get newest first.\n                recentlyUsedHtml =\n                    recentlyUsedHtml + self.applyTemplate(\"recentlyused\", item);\n            });\n        }\n\n        html = self.applyTemplate(\"toolbar\", {\n            items: itemsHtml,\n            favItems: favoritesHtml,\n            favText: _t(\"Favorites\"),\n            searchText: _t(\"Current path:\"),\n            searchModeText: _t(\"Search\"),\n            browseModeText: _t(\"Browse\"),\n            recentlyUsedItems: recentlyUsedHtml,\n            recentlyUsedText: _t(\"Recently Used\"),\n            icon_root: await utils.resolveIcon(\"house-fill\"),\n            icon_recently_used: await utils.resolveIcon(\"grid-fill\"),\n            icon_favorites: await utils.resolveIcon(\"star-fill\"),\n            icon_upload: await utils.resolveIcon(\"cloud-arrow-up\"),\n            upload: this.options.upload,\n            upload_text: _t(\"Upload\"),\n        });\n\n        self.$toolbar.html(html);\n\n        // unbind mouseup event from select2 to override the behavior:\n        $(\".pat-relateditems-dropdown\").unbind(\"mouseup\");\n        $(\".pat-relateditems-dropdown\").bind(\"mouseup\", function (e) {\n            e.stopPropagation();\n        });\n\n        $(\"button.mode.search\", self.$toolbar).on(\"click\", function (e) {\n            e.preventDefault();\n            if (self.browsing) {\n                $(\"button.mode.search\", self.$toolbar).toggleClass(\n                    \"btn-primary btn-default\"\n                );\n                $(\"button.mode.browse\", self.$toolbar).toggleClass(\n                    \"btn-primary btn-default\"\n                );\n                self.browsing = false;\n                if ($(self.el).select2(\"data\").length > 0) {\n                    // Have to call after initialization\n                    self.openAfterInit = true;\n                }\n                if (!self.openAfterInit) {\n                    $(self.el).select2(\"close\");\n                    $(self.el).select2(\"open\");\n                }\n            } else {\n                // just open result list\n                $(self.el).select2(\"close\");\n                $(self.el).select2(\"open\");\n            }\n        });\n\n        $(\"button.mode.browse\", self.$toolbar).on(\"click\", function (e) {\n            e.preventDefault();\n            if (!self.browsing) {\n                $(\"button.mode.search\", self.$toolbar).toggleClass(\n                    \"btn-primary btn-default\"\n                );\n                $(\"button.mode.browse\", self.$toolbar).toggleClass(\n                    \"btn-primary btn-default\"\n                );\n                self.browsing = true;\n                if ($(self.el).select2(\"data\").length > 0) {\n                    // Have to call after initialization\n                    self.openAfterInit = true;\n                }\n                if (!self.openAfterInit) {\n                    $(self.el).select2(\"close\");\n                    $(self.el).select2(\"open\");\n                }\n            } else {\n                // just open result list\n                $(self.el).select2(\"close\");\n                $(self.el).select2(\"open\");\n            }\n        });\n\n        $(\"a.crumb\", self.$toolbar).on(\"click\", function (e) {\n            e.preventDefault();\n            self.browseTo($(this).attr(\"href\"));\n        });\n\n        $(\"a.fav\", self.$toolbar).on(\"click\", function (e) {\n            e.preventDefault();\n            self.browseTo($(this).attr(\"href\"));\n        });\n\n        if (self.options.recentlyUsed) {\n            $(\".pat-relateditems-recentlyused-select\", self.$toolbar).on(\n                \"click\",\n                function (event) {\n                    event.preventDefault();\n                    var uid = $(this).data(\"uid\");\n                    var item = self.recentlyUsed().filter(function (it) {\n                        return it.UID === uid;\n                    });\n                    if (item.length > 0) {\n                        item = item[0];\n                    } else {\n                        return;\n                    }\n                    self.selectItem(item);\n                    if (self.options.maximumSelectionSize > 0) {\n                        var items = $(self.el).select2(\"data\");\n                        if (items.length >= self.options.maximumSelectionSize) {\n                            return;\n                        }\n                    }\n                }\n            );\n        }\n\n        async function initUploadView(disabled) {\n            let Upload = await import(\"../upload/upload\");\n            Upload = Upload.default;\n\n            const upload_button = self.$toolbar[0].querySelector(\".upload button\");\n            upload_button.disabled = disabled;\n\n            const upload_el = self.$toolbar[0].querySelector(\".upload .pat-upload\");\n\n            const upload_config = {\n                success: (e, response) => {\n                    const uid = response.UID;\n                    if (uid) {\n                        const query = new utils.QueryHelper({\n                            vocabularyUrl: self.options.vocabularyUrl,\n                            attributes: self.options.attributes,\n                        });\n                        query.search(\n                            \"UID\",\n                            \"plone.app.querystring.operation.selection.is\",\n                            uid,\n                            (e) => {\n                                var data = self.$el.select2(\"data\");\n                                data.push.apply(data, e.results);\n                                self.$el.select2(\"data\", data, true);\n                                self.emit(\"selected\");\n                                self.popover.hide();\n                            },\n                            false\n                        );\n                    }\n                },\n                uloadMultiple: true,\n                allowPathSelection: false,\n                relativePath: \"fileUpload\",\n                baseUrl: self.options.rootUrl,\n            };\n            const upload = new Upload($(upload_el), upload_config);\n\n            upload_button.addEventListener(\"show.bs.dropdown\", () => {\n                if (self.currentPath !== upload.currentPath) {\n                    upload.setPath(self.currentPath);\n                }\n            });\n        }\n\n        // upload\n        if (\n            self.options.upload &&\n            utils.featureSupport.dragAndDrop() &&\n            utils.featureSupport.fileApi()\n        ) {\n            if (self.options.uploadAllowView) {\n                // Check, if uploads are allowed in current context\n                $.ajax({\n                    url: self.options.uploadAllowView,\n                    // url: self.currentUrl() + self.options.uploadAllowView,  // not working yet\n                    dataType: \"JSON\",\n                    data: {\n                        path: self.options.rootPath + self.currentPath,\n                    },\n                    type: \"GET\",\n                    success: function (result) {\n                        initUploadView(!result.allowUpload);\n                    },\n                });\n            } else {\n                // just initialize upload view without checking, if uploads are allowed.\n                initUploadView();\n            }\n        }\n    },\n\n    browseTo: function (path) {\n        var self = this;\n        self.emit(\"before-browse\");\n        self.currentPath = path;\n        $(self.el).select2(\"close\");\n        self.renderToolbar();\n        $(self.el).select2(\"open\");\n        self.emit(\"after-browse\");\n    },\n\n    selectItem: function (item) {\n        var self = this;\n        self.emit(\"selecting\");\n        var data = $(self.el).select2(\"data\");\n        data.push(item);\n        $(self.el).select2(\"data\", data, true);\n\n        if (self.options.recentlyUsed) {\n            // add to recently added items\n            var recentlyUsed = self.recentlyUsed(); // do not filter for selectable but get all. append to that list the new item.\n            var alreadyPresent = recentlyUsed.filter(function (it) {\n                return it.UID === item.UID;\n            });\n            if (alreadyPresent.length > 0) {\n                recentlyUsed.splice(recentlyUsed.indexOf(alreadyPresent[0]), 1);\n            }\n            recentlyUsed.push(item);\n            utils.storage.set(self.options.recentlyUsedKey, recentlyUsed);\n        }\n\n        self.emit(\"selected\");\n    },\n\n    deselectItem: function (item) {\n        var self = this;\n        self.emit(\"deselecting\");\n        var data = $(self.el).select2(\"data\");\n        _.each(data, function (obj, i) {\n            if (obj.UID === item.UID) {\n                data.splice(i, 1);\n            }\n        });\n        $(self.el).select2(\"data\", data, true);\n        self.emit(\"deselected\");\n    },\n\n    isSelectable: function (item) {\n        var self = this;\n        if (item.selectable === false) {\n            return false;\n        }\n        if (self.options.selectableTypes === null) {\n            return true;\n        } else {\n            return self.options.selectableTypes.indexOf(item.portal_type) !== -1;\n        }\n    },\n\n    init: async function () {\n        (await import(\"bootstrap\")).Dropdown;\n        import(\"./relateditems.scss\");\n\n        // templates\n        this.breadcrumbTemplate = (await import(\"./templates/breadcrumb.xml\")).default; // prettier-ignore\n        this.favoriteTemplate = (await import(\"./templates/favorite.xml\")).default; // prettier-ignore\n        this.recentlyusedTemplate = (await import(\"./templates/recentlyused.xml\")).default; // prettier-ignore\n        this.resultTemplate = (await import(\"./templates/result.xml\")).default; // prettier-ignore\n        this.selectionTemplate = (await import(\"./templates/selection.xml\")).default; // prettier-ignore\n        this.toolbarTemplate = (await import(\"./templates/toolbar.xml\")).default; // prettier-ignore\n\n        var self = this;\n\n        self.browsing = self.options.mode !== \"search\";\n\n        // Remove trailing slash\n        self.options.rootPath = self.options.rootPath.replace(/\\/$/, \"\");\n        // Substract rootPath from basePath with is the relative currentPath. Has a leading slash. Or use '/'\n        self.currentPath =\n            self.options.basePath.substr(self.options.rootPath.length) || \"/\";\n\n        self.setAjax();\n\n        self.$el.wrap('<div class=\"pat-relateditems-container\" />');\n        self.$container = self.$el.parents(\".pat-relateditems-container\");\n\n        Select2.prototype.initializeValues.call(self);\n        Select2.prototype.initializeTags.call(self);\n\n        self.options.formatSelection = function (item) {\n            item = $.extend(\n                true,\n                {\n                    Title: \"\",\n                    getIcon: \"\",\n                    getURL: \"\",\n                    path: \"\",\n                    portal_type: \"\",\n                    review_state: \"\",\n                },\n                item\n            );\n\n            // activate petterns on the result set.\n            var $selection = $(self.applyTemplate(\"selection\", item));\n            if (self.options.scanSelection) {\n                registry.scan($selection);\n            }\n            if (self.options.maximumSelectionSize == 1) {\n                // If this related field accepts only 1 item, the breadcrumbs should\n                // reflect the location for this particular item\n                var itemPath = item.path;\n                var path_split = itemPath.split(\"/\");\n                path_split = path_split.slice(0, -1); // Remove last part of path, we always want the parent path\n                itemPath = path_split.join(\"/\");\n                self.currentPath = itemPath;\n                self.renderToolbar();\n            }\n            return $selection;\n        };\n\n        Select2.prototype.initializeOrdering.call(self);\n\n        const icon_level_up = await utils.resolveIcon(\"arrow-left-circle\");\n        const icon_level_down = await utils.resolveIcon(\"arrow-right-circle\");\n\n        self.options.formatResult = function (item) {\n            item.selectable = self.isSelectable(item);\n            item = $.extend(\n                true,\n                {\n                    Title: \"\",\n                    getIcon: \"\",\n                    getURL: \"\",\n                    is_folderish: false,\n                    oneLevelUp: false,\n                    iconLevelUp: icon_level_up,\n                    iconLevelDown: icon_level_down,\n                    path: \"\",\n                    portal_type: \"\",\n                    review_state: \"\",\n                    selectable: false,\n                },\n                item\n            );\n\n            if (self.selectedUIDs.indexOf(item.UID) !== -1) {\n                // do not allow already selected items to be selected again.\n                item.selectable = false;\n            }\n            var result = $(self.applyTemplate(\"result\", item));\n\n            $(\".pat-relateditems-result-select\", result).on(\"click\", function (event) {\n                event.preventDefault();\n                // event.stopPropagation();\n                if ($(this).is(\".selectable\")) {\n                    var $parent = $(this).parents(\".pat-relateditems-result\");\n                    if ($parent.is(\".pat-relateditems-active\")) {\n                        $parent.removeClass(\"pat-relateditems-active\");\n                        self.deselectItem(item);\n                    } else {\n                        if (self.options.maximumSelectionSize > 0) {\n                            var items = $(self.el).select2(\"data\");\n                            if (items.length >= self.options.maximumSelectionSize) {\n                                $(self.el).select2(\"close\");\n                            }\n                        }\n                        self.selectItem(item);\n                        $parent.addClass(\"pat-relateditems-active\");\n                        if (self.options.closeOnSelect) {\n                            $(self.el).select2(\"close\");\n                        }\n                    }\n                }\n            });\n\n            $(\".pat-relateditems-result-browse\", result).on(\"click\", function (event) {\n                event.preventDefault();\n                event.stopPropagation();\n                var path = $(this).data(\"path\");\n                self.browseTo(path);\n            });\n\n            return $(result);\n        };\n\n        self.options.initSelection = function (element, callback) {\n            var value = $(element).val();\n            if (value !== \"\") {\n                var ids = value.split(self.options.separator);\n                var query = new utils.QueryHelper(\n                    $.extend(true, {}, self.options, {\n                        pattern: self,\n                    })\n                );\n                query.search(\n                    \"UID\",\n                    \"plone.app.querystring.operation.list.contains\",\n                    ids,\n                    function (data) {\n                        var results = data.results.reduce(function (prev, item) {\n                            prev[item.UID] = item;\n                            return prev;\n                        }, {});\n\n                        try {\n                            callback(\n                                ids\n                                    .map(function (uid) {\n                                        return results[uid];\n                                    })\n                                    .filter(function (item) {\n                                        return item !== undefined;\n                                    })\n                            );\n                        } catch (e) {\n                            // Select2 3.5.4 throws an error in some cases in\n                            // updateSelection, ``this.selection.find(\".select2-search-choice\").remove();``\n                            // No idea why, hard to track.\n                        }\n\n                        if (self.openAfterInit) {\n                            // open after initialization\n                            $(self.el).select2(\"open\");\n                            self.openAfterInit = undefined;\n                        }\n                    },\n                    false\n                );\n            }\n        };\n\n        self.options.tokenizer = function (input) {\n            if (this.options.mode === \"auto\") {\n                this.browsing = input ? false : true;\n            }\n        }.bind(this);\n\n        self.options.id = function (item) {\n            return item.UID;\n        };\n\n        Select2.prototype.initializeSelect2.call(self);\n\n        self.$toolbar = $('<div class=\"toolbar d-flex\" />');\n        self.$container.prepend(self.$toolbar);\n        self.$el.on(\"select2-selecting\", function (event) {\n            if (!self.isSelectable(event.choice)) {\n                event.preventDefault();\n            }\n        });\n        self.renderToolbar();\n\n        $(document).on(\"keyup\", self.$el, function (event) {\n            var isOpen = Select2.prototype.opened.call(self);\n\n            if (!isOpen) {\n                return;\n            }\n\n            if (event.which === KEY.LEFT || event.which === KEY.RIGHT) {\n                event.stopPropagation();\n\n                var selectorContext =\n                    event.which === KEY.LEFT\n                        ? \".pat-relateditems-result.one-level-up\"\n                        : \".select2-highlighted\";\n\n                var browsableItemSelector = \".pat-relateditems-result-browse\";\n                var browsableItem = $(browsableItemSelector, selectorContext);\n\n                if (browsableItem.length !== 1) {\n                    return;\n                }\n\n                var path = browsableItem.data(\"path\");\n\n                self.browseTo(path);\n            }\n        });\n    },\n});\n","import $ from \"jquery\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\n\nexport default Base.extend({\n    name: \"autotoc\",\n    trigger: \".pat-autotoc\",\n    parser: \"mockup\",\n    defaults: {\n        section: \"section\",\n        levels: \"h1,h2,h3\",\n        IDPrefix: \"autotoc-item-\",\n        classTOCName: \"autotoc-nav\",\n        classSectionName: \"autotoc-section\",\n        classLevelPrefixName: \"autotoc-level-\",\n        classActiveName: \"active\",\n        scrollDuration: \"slow\",\n        scrollEasing: \"swing\",\n    },\n    init: function () {\n        import(\"./autotoc.scss\");\n\n        var self = this;\n\n        self.$toc = $(\"<nav/>\").addClass(self.options.classTOCName);\n\n        if (self.options.prependTo) {\n            self.$toc.prependTo(self.options.prependTo);\n        } else if (self.options.appendTo) {\n            self.$toc.appendTo(self.options.appendTo);\n        } else {\n            self.$toc.prependTo(self.$el);\n        }\n\n        if (self.options.className) {\n            self.$el.addClass(self.options.className);\n        }\n\n        $(self.options.section, self.$el).addClass(self.options.classSectionName);\n\n        var asTabs = self.$el.hasClass(\"autotabs\");\n\n        var activeId = null;\n\n        $(self.options.levels, self.$el).each(function (i) {\n            var $level = $(this),\n                id = $level.prop(\"id\")\n                    ? $level.prop(\"id\")\n                    : $level.parents(self.options.section).prop(\"id\");\n            if (!id || $(\"#\" + id).length > 0) {\n                id = self.options.IDPrefix + self.name + \"-\" + i;\n            }\n            if (window.location.hash === \"#\" + id) {\n                activeId = id;\n            }\n            if (activeId === null && $level.hasClass(self.options.classActiveName)) {\n                activeId = id;\n            }\n            $level.data(\"navref\", id);\n            $(\"<a/>\")\n                .appendTo(self.$toc)\n                .text($level.text())\n                .attr(\"id\", id)\n                .attr(\"href\", \"#\" + id)\n                .addClass(self.options.classLevelPrefixName + self.getLevel($level))\n                .on(\"click\", function (e, options) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    if (!options) {\n                        options = {\n                            doScroll: true,\n                            skipHash: false,\n                        };\n                    }\n                    var $el = $(this);\n                    self.$toc\n                        .children(\".\" + self.options.classActiveName)\n                        .removeClass(self.options.classActiveName);\n                    self.$el\n                        .children(\".\" + self.options.classActiveName)\n                        .removeClass(self.options.classActiveName);\n                    $(e.target).addClass(self.options.classActiveName);\n                    $level\n                        .parents(self.options.section)\n                        .addClass(self.options.classActiveName);\n                    if (\n                        options.doScroll !== false &&\n                        self.options.scrollDuration &&\n                        $level &&\n                        !asTabs\n                    ) {\n                        $(\"body,html\").animate(\n                            {\n                                scrollTop: $level.offset().top,\n                            },\n                            self.options.scrollDuration,\n                            self.options.scrollEasing\n                        );\n                    }\n                    if (self.$el.parents(\".plone-modal\").length !== 0) {\n                        self.$el.trigger(\"resize.plone-modal.patterns\");\n                    }\n                    $(this).trigger(\"clicked\");\n                    if (!options.skipHash) {\n                        if (window.history && window.history.pushState) {\n                            window.history.pushState({}, \"\", \"#\" + $el.attr(\"id\"));\n                        }\n                    }\n                });\n            $level.data(\"autotoc-trigger-id\", id);\n        });\n\n        if (activeId) {\n            $(\"a#\" + activeId).trigger(\"click\", {\n                doScroll: true,\n                skipHash: true,\n            });\n        } else {\n            self.$toc.find(\"a\").first().trigger(\"click\", {\n                doScroll: false,\n                skipHash: true,\n            });\n        }\n    },\n    getLevel: function ($el) {\n        var elementLevel = 0;\n        $.each(this.options.levels.split(\",\"), function (level, levelSelector) {\n            if ($el.filter(levelSelector).length === 1) {\n                elementLevel = level + 1;\n                return false;\n            }\n        });\n        return elementLevel;\n    },\n});\n","import $ from \"jquery\";\nimport _ from \"underscore\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\nimport registry from \"@patternslib/patternslib/src/core/registry\";\n\nimport tinymce from \"tinymce/tinymce\";\nimport LinkTemplate from \"../templates/link.xml\";\nimport ImageTemplate from \"../templates/image.xml\";\nimport RelatedItems from \"../../relateditems/relateditems\";\nimport \"../../autotoc/autotoc\";\nimport \"../../modal/modal\";\nimport PatternUpload from \"../../upload/upload\";\n\nvar LinkType = Base.extend({\n    name: \"linktype\",\n    trigger: \".pat-linktype-dummy\",\n    defaults: {\n        linkModal: null, // required\n    },\n\n    init: function () {\n        this.linkModal = this.options.linkModal;\n        this.tinypattern = this.options.tinypattern;\n        this.tiny = this.tinypattern.tiny;\n        this.dom = this.tiny.dom;\n    },\n\n    getEl: function () {\n        return this.$el.find(\"input\");\n    },\n\n    value: function () {\n        return $.trim(this.getEl().val());\n    },\n\n    toUrl: function () {\n        return this.value();\n    },\n\n    load: function (element) {\n        let val = this.tiny.dom.getAttrib(element, \"data-val\");\n        this.getEl().attr(\"value\", val);\n    },\n\n    set: function (val) {\n        var $el = this.getEl();\n        $el.attr(\"value\", val);\n        $el.val(val);\n    },\n\n    attributes: function () {\n        return {\n            \"data-val\": this.value(),\n        };\n    },\n    updateRelatedItems: function () {},\n});\n\nvar ExternalLink = LinkType.extend({\n    name: \"externallinktype\",\n    trigger: \".pat-externallinktype-dummy\",\n    init: function () {\n        LinkType.prototype.init.call(this);\n        this.getEl().on(\"change\", function () {\n            // check here if we should automatically add in http:// to url\n            var val = $(this).val();\n            if (new RegExp(\"https?://\").test(val)) {\n                // already valid url\n                return;\n            }\n            var domain = $(this).val().split(\"/\")[0];\n            if (domain.indexOf(\".\") !== -1) {\n                $(this).val(\"http://\" + val);\n            }\n        });\n    },\n});\n\nvar InternalLink = LinkType.extend({\n    name: \"internallinktype\",\n    trigger: \".pat-internallinktype-dummy\",\n    init: function () {\n        if (!this.getEl().length) {\n            return;\n        }\n        LinkType.prototype.init.call(this);\n        this.getEl().addClass(\"pat-relateditems\");\n        this.createRelatedItems();\n    },\n\n    getEl: function () {\n        return this.$el.find(\"input:not(.select2-input)\");\n    },\n\n    createRelatedItems: function () {\n        if (!this.getEl().length) {\n            return;\n        }\n        var options = this.linkModal.options.relatedItems;\n        options.upload = false; // ensure that related items upload is off.\n        this.relatedItems = new RelatedItems(this.getEl(), options);\n    },\n\n    updateRelatedItems: function (val) {\n        if (!this.relatedItems) {\n            // prevent toolbar from being rendered twice\n            this.createRelatedItems();\n        }\n        this.relatedItems.selectItem(val);\n    },\n\n    value: function () {\n        var val = this.getEl().select2(\"data\");\n        if (val && typeof val === \"object\") {\n            val = val[0];\n        }\n        return val;\n    },\n\n    toUrl: function () {\n        var value = this.value();\n        if (value) {\n            return this.tinypattern.generateUrl(value);\n        }\n        return null;\n    },\n    load: function (element) {\n        var val = this.tiny.dom.getAttrib(element, \"data-val\");\n        if (val) {\n            this.set(val);\n        }\n    },\n\n    set: function (val) {\n        var $el = this.getEl();\n        $el.val(val).trigger(\"change\");\n        this.updateRelatedItems(val);\n    },\n\n    attributes: function () {\n        var val = this.value();\n        if (val) {\n            return {\n                \"data-val\": val.UID,\n            };\n        }\n        return {};\n    },\n});\n\nvar UploadLink = LinkType.extend({\n    name: \"uploadlinktype\",\n    trigger: \".pat-uploadlinktype-dummy\",\n    /* need to do it a bit differently here.\n       when a user uploads and tries to upload from\n       it, you need to delegate to the real insert\n       linke types */\n    getDelegatedLinkType: function () {\n        if (this.linkModal.linkType === \"uploadImage\") {\n            return this.linkModal.linkTypes.image;\n        } else {\n            return this.linkModal.linkTypes.internal;\n        }\n    },\n    toUrl: function () {\n        return this.getDelegatedLinkType().toUrl();\n    },\n    attributes: function () {\n        return this.getDelegatedLinkType().attributes();\n    },\n    set: function (val) {\n        return this.getDelegatedLinkType().set(val);\n    },\n    load: function (element) {\n        return this.getDelegatedLinkType().load(element);\n    },\n    value: function () {\n        return this.getDelegatedLinkType().value();\n    },\n});\n\nvar ImageLink = InternalLink.extend({\n    name: \"imagelinktype\",\n    trigger: \".pat-imagelinktype-dummy\",\n    toUrl: function () {\n        var value = this.value();\n        return this.tinypattern.generateImageUrl(\n            value,\n            this.linkModal.getScaleFromSrcset(this.linkModal.$scale.val())\n        );\n    },\n});\n\nvar EmailLink = LinkType.extend({\n    name: \"emaillinktype\",\n    trigger: \".pat-emaillinktype-dummy\",\n    toUrl: function () {\n        var self = this;\n        var val = self.value();\n        if (val) {\n            var subject = self.getSubject();\n            var href = \"mailto:\" + val;\n            if (subject) {\n                href += \"?subject=\" + subject;\n            }\n            return href;\n        }\n        return null;\n    },\n\n    load: function (element) {\n        LinkType.prototype.load.apply(this, [element]);\n        this.linkModal.$subject.val(this.tiny.dom.getAttrib(element, \"data-subject\"));\n    },\n\n    getSubject: function () {\n        return this.linkModal.$subject.val();\n    },\n\n    attributes: function () {\n        var attribs = LinkType.prototype.attributes.call(this);\n        attribs[\"data-subject\"] = this.getSubject();\n        return attribs;\n    },\n});\n\nvar AnchorLink = LinkType.extend({\n    name: \"anchorlinktype\",\n    trigger: \".pat-anchorlinktype-dummy\",\n    init: function () {\n        LinkType.prototype.init.call(this);\n        this.$select = this.$el.find(\"select\");\n        this.anchorNodes = [];\n        this.anchorData = [];\n        this.populate();\n    },\n\n    value: function () {\n        var val = this.$select.select2(\"data\");\n        if (val && typeof val === \"object\") {\n            val = val.id;\n        }\n        return val;\n    },\n\n    populate: function () {\n        var self = this;\n        self.$select.find(\"option\").remove();\n        self.anchorNodes = [];\n        self.anchorData = [];\n        var node, i, j, name, title;\n\n        var nodes = self.tiny.dom.select(\".mceItemAnchor,.mce-item-anchor\");\n        for (i = 0; i < nodes.length; i = i + 1) {\n            node = nodes[i];\n            name = self.tiny.dom.getAttrib(node, \"name\");\n            if (!name) {\n                name = self.tiny.dom.getAttrib(node, \"id\");\n            }\n            if (name !== \"\") {\n                self.anchorNodes.push(node);\n                self.anchorData.push({ name: name, title: name });\n            }\n        }\n\n        nodes = self.tiny.dom.select(self.linkModal.options.anchorSelector);\n        if (nodes.length > 0) {\n            for (i = 0; i < nodes.length; i = i + 1) {\n                node = nodes[i];\n                title = $(node)\n                    .text()\n                    .replace(/^\\s+|\\s+$/g, \"\");\n                if (title === \"\") {\n                    continue;\n                }\n                name = title.toLowerCase().substring(0, 1024);\n                name = name.replace(/[^a-z0-9]/g, \"-\");\n                /* okay, ugly, but we need to first check that this anchor isn't already available */\n                var found = false;\n                for (j = 0; j < self.anchorNodes.length; j = j + 1) {\n                    var anode = self.anchorData[j];\n                    if (anode.name === name) {\n                        found = true;\n                        // so it's also found, let's update the title to be more presentable\n                        anode.title = title;\n                        break;\n                    }\n                }\n                if (!found) {\n                    self.anchorData.push({\n                        name: name,\n                        title: title,\n                        newAnchor: true,\n                    });\n                    self.anchorNodes.push(node);\n                }\n            }\n        }\n        if (self.anchorNodes.length > 0) {\n            for (i = 0; i < self.anchorData.length; i = i + 1) {\n                var data = self.anchorData[i];\n                self.$select.append(\n                    '<option value=\"' + i + '\">' + data.title + \"</option>\"\n                );\n            }\n        } else {\n            self.$select.append(\"<option>No anchors found..</option>\");\n        }\n    },\n\n    getIndex: function (name) {\n        for (var i = 0; i < this.anchorData.length; i = i + 1) {\n            var data = this.anchorData[i];\n            if (data.name === name) {\n                return i;\n            }\n        }\n        return 0;\n    },\n\n    toUrl: function () {\n        var val = this.value();\n        if (val) {\n            var index = parseInt(val, 10);\n            var node = this.anchorNodes[index];\n            var data = this.anchorData[index];\n            if (data.newAnchor) {\n                node.innerHTML =\n                    '<a name=\"' +\n                    data.name +\n                    '\" class=\"mce-item-anchor\"></a>' +\n                    node.innerHTML;\n            }\n            return \"#\" + data.name;\n        }\n        return null;\n    },\n\n    set: function (val) {\n        var anchor = this.getIndex(val);\n        this.$select.select2(\"data\", \"\" + anchor);\n    },\n});\n\ntinymce.PluginManager.add(\"ploneimage\", function (editor) {\n    editor.ui.registry.addButton(\"ploneimage\", {\n        icon: \"image\",\n        text: \"Insert image\",\n        tooltip: \"Insert/edit image\",\n        onAction: editor.settings.addImageClicked,\n        // stateSelector: \"img:not([data-mce-object])\",\n    });\n});\n\n/* register the tinymce plugin */\ntinymce.PluginManager.add(\"plonelink\", function (editor) {\n    editor.ui.registry.addButton(\"plonelink\", {\n        icon: \"link\",\n        tooltip: \"Insert/edit link\",\n        shortcut: \"Ctrl+K\",\n        onAction: editor.settings.addLinkClicked,\n        stateSelector: \"a[href]\",\n    });\n\n    editor.ui.registry.addButton(\"unlink\", {\n        icon: \"unlink\",\n        tooltip: \"Remove link\",\n        onAction: function () {\n            editor.execCommand(\"unlink\");\n        },\n        stateSelector: \"a[href]\",\n    });\n\n    // editor.ui.registry.addButton(\"Ctrl+K\", \"\", editor.settings.addLinkClicked);\n\n    // editor.ui.registry.addButton(\"plonelink\", {\n    //     icon: \"link\",\n    //     text: \"Insert link\",\n    //     shortcut: \"Ctrl+K\",\n    //     onAction: editor.settings.addLinkClicked,\n    //     stateSelector: \"a[href]\",\n    //     context: \"insert\",\n    //     prependToContext: true,\n    // });\n});\n\nexport default Base.extend({\n    name: \"linkmodal\",\n    trigger: \".pat-linkmodal\",\n    defaults: {\n        anchorSelector: \"h1,h2,h3\",\n        linkTypes: [\n            /* available, none activate by default because these options\n         * only get merged, not set.\n        'internal',\n        'upload',\n        'external',\n        'email',\n        'anchor',\n        'image'\n        'externalImage'*/\n        ],\n        initialLinkType: \"internal\",\n        text: {\n            insertHeading: \"Insert Link\",\n        },\n        linkTypeClassMapping: {\n            internal: InternalLink,\n            upload: UploadLink,\n            external: ExternalLink,\n            email: EmailLink,\n            anchor: AnchorLink,\n            image: ImageLink,\n            uploadImage: UploadLink,\n            externalImage: LinkType,\n        },\n    },\n    // XXX: this is a temporary work around for having separated templates.\n    // Image modal is going to have its own modal class, funcs and template.\n    linkTypeTemplateMapping: {\n        internal: LinkTemplate,\n        upload: LinkTemplate,\n        external: LinkTemplate,\n        email: LinkTemplate,\n        anchor: LinkTemplate,\n        image: ImageTemplate,\n        uploadImage: ImageTemplate,\n        externalImage: ImageTemplate,\n    },\n\n    template: function (data) {\n        return _.template(this.linkTypeTemplateMapping[this.linkType])(data);\n    },\n\n    init: function () {\n        var self = this;\n        self.tinypattern = self.options.tinypattern;\n        if (self.tinypattern.options.anchorSelector) {\n            self.options.anchorSelector = self.tinypattern.options.anchorSelector;\n        }\n        self.tiny = self.tinypattern.tiny;\n        self.dom = self.tiny.dom;\n        self.linkType = self.options.initialLinkType;\n        self.linkTypes = {};\n        self.modal = registry.patterns[\"plone-modal\"].init(self.$el, {\n            html: self.generateModalHtml(),\n            content: null,\n            buttons: \".plone-btn\",\n            reloadWindowOnClose: false,\n            templateOptions: {\n                classDialog: \"modal-dialog modal-lg\",\n                reloadWindowOnClose: false,\n            },\n            actionOptions: { reloadWindowOnClose: false },\n            backdropOptions: {\n                zIndex: \"1340\",\n                closeOnClick: false\n            },\n        });\n        self.modal.on(\"shown\", (e) => {\n            self.modalShown.apply(self, [e]);\n        });\n    },\n\n    isOnlyTextSelected: function () {\n        /* pulled from TinyMCE link plugin */\n        var html = this.tiny.selection.getContent();\n\n        // Partial html and not a fully selected anchor element\n        if (\n            /</.test(html) &&\n            (!/^<a [^>]+>[^<]+<\\/a>$/.test(html) || html.indexOf(\"href=\") === -1)\n        ) {\n            return false;\n        }\n\n        if (this.anchorElm) {\n            var nodes = this.anchorElm.childNodes,\n                i;\n\n            if (nodes.length === 0) {\n                return false;\n            }\n\n            for (var ii = nodes.length - 1; ii >= 0; ii--) {\n                if (nodes[ii].nodeType !== 3) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    },\n\n    generateModalHtml: function () {\n        return this.template({\n            options: this.options,\n            upload: this.options.upload,\n            text: this.options.text,\n            insertHeading: this.options.text.insertHeading,\n            insertImageHelp: this.options.text.insertImageHelp,\n            uploadText: this.options.text.upload,\n            insertLinkHelp: this.options.text.insertLinkHelp,\n            internal: this.options.text.internal,\n            external: this.options.text.external,\n            anchor: this.options.text.anchor,\n            anchorLabel: this.options.text.anchorLabel,\n            target: this.options.text.target,\n            linkTypes: this.options.linkTypes,\n            externalText: this.options.text.externalText,\n            emailText: this.options.text.email,\n            subjectText: this.options.text.subject,\n            targetList: this.options.targetList,\n            titleText: this.options.text.title,\n            internalImageText: this.options.text.internalImage,\n            externalImage: this.options.text.externalImage,\n            externalImageText: this.options.text.externalImageText,\n            altText: this.options.text.alt,\n            imageAlignText: this.options.text.imageAlign,\n            captionFromDescriptionText: this.options.text.captionFromDescription,\n            enableImageZoom: this.options.text.enableImageZoom,\n            captionText: this.options.text.caption,\n            scaleText: this.options.text.scale,\n            pictureVariants: this.options.pictureVariants,\n            imageCaptioningEnabled: this.options.imageCaptioningEnabled,\n            cancelBtn: this.options.text.cancelBtn,\n            insertBtn: this.options.text.insertBtn,\n        });\n    },\n\n    isImageMode: function () {\n        return [\"image\", \"uploadImage\", \"externalImage\"].indexOf(this.linkType) !== -1;\n    },\n\n    initElements: function () {\n        var self = this;\n        self.$target = $('select[name=\"target\"]', self.modal.$modal);\n        self.$button = $('.modal-footer input[name=\"insert\"]', self.modal.$modal);\n        self.$title = $('input[name=\"title\"]', self.modal.$modal);\n        self.$subject = $('input[name=\"subject\"]', self.modal.$modal);\n\n        self.$alt = $('input[name=\"alt\"]', self.modal.$modal);\n        self.$align = $('select[name=\"align\"]', self.modal.$modal);\n        self.$scale = $('select[name=\"scale\"]', self.modal.$modal);\n        self.$enableImageZoom = $('input[name=\"enableImageZoom\"]', self.modal.$modal);\n        self.$captionFromDescription = $(\n            'input[name=\"captionFromDescription\"]',\n            self.modal.$modal\n        );\n        self.$caption = $('textarea[name=\"caption\"]', self.modal.$modal);\n\n        /* load up all the link types */\n        _.each(self.options.linkTypes, function (type) {\n            var $container = $(\".linkType.\" + type + \" .main\", self.modal.$modal);\n            if ($container.length) {\n                self.linkTypes[type] = new self.options.linkTypeClassMapping[type](\n                    $container,\n                    {\n                        linkModal: self,\n                        tinypattern: self.tinypattern,\n                    }\n                );\n            }\n        });\n\n        $(\".autotoc-nav a\", self.modal.$modal).click(function () {\n            var $fieldset = $(\"fieldset.linkType\", self.modal.$modal).eq(\n                $(this).index()\n            );\n            var classes = $fieldset[0].className.split(/\\s+/);\n            _.each(classes, function (val) {\n                if (_.indexOf(self.options.linkTypes, val) !== -1) {\n                    self.linkType = val;\n                }\n            });\n        });\n\n        self.$captionFromDescription.change(function () {\n            if (this.checked) {\n                self.$caption.prop(\"disabled\", true);\n            } else {\n                self.$caption.prop(\"disabled\", false);\n            }\n        });\n    },\n\n    getLinkUrl: function () {\n        // get the url, only get one uid\n        return this.linkTypes[this.linkType].toUrl();\n    },\n\n    getValue: function () {\n        return this.linkTypes[this.linkType].value();\n    },\n\n    updateAnchor: function (href) {\n        var self = this;\n\n        self.tiny.focus();\n        self.tiny.selection.setRng(self.rng);\n\n        var target = self.$target.val();\n        var title = self.$title.val();\n        var linkAttrs = $.extend(\n            true,\n            self.data,\n            {\n                \"title\": title ? title : null,\n                \"target\": target ? target : null,\n                \"data-linkType\": self.linkType,\n                \"href\": href,\n            },\n            self.linkTypes[self.linkType].attributes()\n        );\n        if (self.anchorElm) {\n            if (self.onlyText && linkAttrs.text !== self.initialText) {\n                if (\"innerText\" in self.anchorElm) {\n                    self.anchorElm.innerText = self.data.text;\n                } else {\n                    self.anchorElm.textContent = self.data.text;\n                }\n            }\n\n            self.tiny.dom.setAttribs(self.anchorElm, linkAttrs);\n\n            self.tiny.selection.select(self.anchorElm);\n            self.tiny.undoManager.add();\n        } else {\n            if (self.onlyText) {\n                self.tiny.insertContent(\n                    self.tiny.dom.createHTML(\n                        \"a\",\n                        linkAttrs,\n                        self.tiny.dom.encode(self.data.text)\n                    )\n                );\n            } else {\n                self.tiny.execCommand(\"mceInsertLink\", false, linkAttrs);\n            }\n        }\n    },\n\n    focusElement: function (elm) {\n        this.tiny.focus();\n        this.tiny.selection.select(elm);\n        this.tiny.nodeChanged();\n    },\n\n    getScaleFromSrcset: function (pictureVariant) {\n        let pictureVariantsConfig = this.options.pictureVariants[pictureVariant];\n        return pictureVariantsConfig.sourceset[\n            pictureVariantsConfig.sourceset.length - 1\n        ].scale;\n    },\n\n    updateImage: function (src) {\n        var self = this;\n        var title = self.$title.val();\n        var captionFromDescription = self.$captionFromDescription.prop(\"checked\");\n        var enableImageZoom = self.$enableImageZoom.prop(\"checked\");\n        var caption = self.$caption.val();\n\n        self.tiny.focus();\n        self.tiny.selection.setRng(self.rng);\n        var cssclasses = [\n            \"image-richtext\",\n            self.$align.val(),\n            \"picture-variant-\" + self.$scale.val(),\n        ];\n        if (captionFromDescription || caption) {\n            cssclasses.push(\"captioned\");\n        }\n        if (enableImageZoom) {\n            cssclasses.push(\"zoomable\");\n        }\n        var data = $.extend(\n            true,\n            {},\n            {\n                \"src\": src,\n                \"title\": title ? title : null,\n                \"alt\": self.$alt.val(),\n                \"class\": cssclasses.join(\" \"),\n                \"data-linkType\": self.linkType,\n                \"data-picturevariant\": self.$scale.val(),\n                \"data-scale\": self.getScaleFromSrcset(self.$scale.val()),\n            },\n            self.linkTypes[self.linkType].attributes()\n        );\n        if (caption && !captionFromDescription) {\n            data[\"data-captiontext\"] = caption;\n        }\n        if (self.imgElm && !self.imgElm.getAttribute(\"data-mce-object\")) {\n            const imgWidth = self.dom.getAttrib(self.imgElm, \"width\");\n            const imgHight = self.dom.getAttrib(self.imgElm, \"height\");\n            if (imgWidth) {\n                data.width = imgWidth;\n            }\n            if (imgHight) {\n                data.height = imgHight;\n            }\n        } else {\n            self.imgElm = null;\n        }\n\n        function waitLoad(imgElm) {\n            imgElm.onload = imgElm.onerror = function () {\n                imgElm.onload = imgElm.onerror = null;\n                self.focusElement(imgElm);\n            };\n        }\n\n        if (self.imgElm) {\n            self.dom.remove(self.imgElm);\n        }\n\n        data.id = \"__mcenew\";\n        var html_inner = self.dom.createHTML(\"img\", data);\n        var html_string;\n        html_string = html_inner;\n        self.tiny.insertContent(html_string);\n        self.imgElm = self.dom.get(\"__mcenew\");\n        self.dom.setAttrib(self.imgElm, \"id\", null);\n\n        waitLoad(self.imgElm);\n        if (self.imgElm.complete) {\n            self.focusElement(self.imgElm);\n        }\n    },\n\n    modalShown: function (e) {\n        var self = this;\n        self.initElements();\n        self.initData();\n        // upload init\n        if (self.options.upload) {\n            self.$upload = $(\".uploadify-me\", self.modal.$modal);\n            self.options.upload.relatedItems = $.extend(\n                true,\n                {},\n                self.options.relatedItems\n            );\n            self.options.upload.relatedItems.selectableTypes = self.options.folderTypes;\n            self.$upload.addClass(\"pat-upload\");\n            new PatternUpload(self.$upload, self.options.upload);\n            self.$upload.on(\n                \"uploadAllCompleted\",\n                function (evt, data) {\n                    if (self.linkTypes.image) {\n                        self.linkTypes.image.set(data.data.UID);\n                        $(\n                            \"#\" + $(\"#tinylink-image\", self.modal.$modal).data(\"navref\")\n                        ).trigger(\"click\");\n                    } else {\n                        self.linkTypes.internal.set(data.data.UID);\n                        $(\n                            \"#\" +\n                                $(\"#tinylink-internal\", self.modal.$modal).data(\"navref\")\n                        ).trigger(\"click\");\n                    }\n                }.bind(self)\n            );\n        }\n\n        self.$button.off(\"click\").on(\"click\", function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            self.linkType = self.modal.$modal.find(\"fieldset.active\").data(\"linktype\");\n\n            if (self.linkType === \"uploadImage\" || self.linkType === \"upload\") {\n                var patUpload = self.$upload.data().patternUpload;\n                if (patUpload.dropzone.files.length > 0) {\n                    patUpload.processUpload();\n                    self.$upload.on(\"uploadAllCompleted\", function (evt, data) {\n                        var counter = 0;\n                        var checkUpload = function () {\n                            if (counter < 5 && !self.linkTypes[self.linkType].value()) {\n                                counter += 1;\n                                setTimeout(checkUpload, 100);\n                                return;\n                            } else {\n                                var href = self.getLinkUrl();\n                                self.updateImage(href);\n                                self.hide();\n                            }\n                        };\n                        checkUpload();\n                    });\n                }\n            }\n            var href;\n            try {\n                href = self.getLinkUrl();\n            } catch (error) {\n                return; // just cut out if no url\n            }\n            if (!href) {\n                return; // just cut out if no url\n            }\n            if (self.isImageMode()) {\n                self.updateImage(href);\n            } else {\n                /* regular anchor */\n                self.updateAnchor(href);\n            }\n            self.hide();\n        });\n        $('.modal-footer input[name=\"cancel\"]', self.modal.$modal).click(function (e) {\n            e.preventDefault();\n            self.hide();\n        });\n    },\n\n    show: function () {\n        this.modal.show();\n    },\n\n    hide: function () {\n        this.modal.hide();\n    },\n\n    initData: function () {\n        var self = this;\n\n        self.data = {};\n        // get selection BEFORE..\n        // This is pulled from TinyMCE link plugin\n        self.initialText = null;\n        var value;\n        self.rng = self.tiny.selection.getRng();\n        self.selectedElm = self.tiny.selection.getNode();\n        self.anchorElm = self.tiny.dom.getParent(self.selectedElm, \"a[href]\");\n        self.onlyText = self.isOnlyTextSelected();\n\n        self.data.text = self.initialText = self.anchorElm\n            ? self.anchorElm.innerText || self.anchorElm.textContent\n            : self.tiny.selection.getContent({ format: \"text\" });\n        self.data.href = self.anchorElm\n            ? self.tiny.dom.getAttrib(self.anchorElm, \"href\")\n            : \"\";\n\n        if (self.anchorElm) {\n            self.data.target = self.tiny.dom.getAttrib(self.anchorElm, \"target\");\n        } else if (self.tiny.settings.default_link_target) {\n            self.data.target = self.tiny.settings.default_link_target;\n        }\n\n        if ((value = self.tiny.dom.getAttrib(self.anchorElm, \"rel\"))) {\n            self.data.rel = value;\n        }\n\n        if ((value = self.tiny.dom.getAttrib(self.anchorElm, \"class\"))) {\n            self.data[\"class\"] = value;\n        }\n\n        if ((value = self.tiny.dom.getAttrib(self.anchorElm, \"title\"))) {\n            self.data.title = value;\n        }\n\n        self.tiny.focus();\n        self.anchorElm = self.dom.getParent(self.selectedElm, \"a[href]\");\n\n        var linkType;\n        if (self.isImageMode()) {\n            var img;\n            img = self.selectedElm;\n            self.imgElm = img;\n\n            var src = self.dom.getAttrib(self.imgElm, \"src\");\n            var captionText = self.dom.getAttrib(self.imgElm, \"data-captiontext\");\n            self.$title.val(self.dom.getAttrib(self.imgElm, \"title\"));\n            self.$alt.val(self.dom.getAttrib(self.imgElm, \"alt\"));\n\n            if ($(self.imgElm).hasClass(\"zoomable\")) {\n                self.$enableImageZoom.prop(\"checked\", true);\n            }\n            if ($(self.imgElm).hasClass(\"captioned\") && !captionText) {\n                self.$captionFromDescription.prop(\"checked\", true);\n                self.$caption.prop(\"disabled\", true);\n            } else if ($(self.imgElm).hasClass(\"captioned\") && captionText) {\n                self.$captionFromDescription.prop(\"checked\", false);\n            } else {\n                self.$captionFromDescription.prop(\"checked\", false);\n            }\n            if (captionText) {\n                self.$caption.val(captionText);\n            }\n\n            linkType = self.dom.getAttrib(self.imgElm, \"data-linktype\");\n            if (linkType && (linkType in self.linkTypes)) {\n                self.linkType = linkType;\n                self.linkTypes[self.linkType].load(self.imgElm);\n                // set scale selection in link modal:\n                var pictureVariant = self.dom.getAttrib(\n                    self.imgElm,\n                    \"data-picturevariant\"\n                );\n                self.$scale.val(pictureVariant);\n                $(\"#tinylink-\" + self.linkType, self.modal.$modal).trigger(\"click\");\n            } else if (src) {\n                self.guessImageLink(src);\n            }\n            var className = self.dom.getAttrib(self.imgElm, \"class\");\n            var klasses = className.split(\" \");\n            for (var i = 0; i < klasses.length; i = i + 1) {\n                var klass = klasses[i];\n                for (var availClass in self.options.imageClasses) {\n                    if (availClass.indexOf(klass) !== -1) {\n                        self.$align.val(klass);\n                    }\n                }\n            }\n        } else if (self.anchorElm) {\n            self.focusElement(self.anchorElm);\n            var href = \"\";\n            href = self.dom.getAttrib(self.anchorElm, \"href\");\n            self.$target.val(self.dom.getAttrib(self.anchorElm, \"target\"));\n            self.$title.val(self.dom.getAttrib(self.anchorElm, \"title\"));\n            linkType = self.dom.getAttrib(self.anchorElm, \"data-linktype\");\n            if (linkType) {\n                self.linkType = linkType;\n                self.linkTypes[self.linkType].load(self.anchorElm);\n                var $panel = $(\"#tinylink-\" + self.linkType, self.modal.$modal);\n                // $('#tinylink-' + self.linkType, self.modal.$modal).trigger('click');\n                if ($panel.length === 1) {\n                    $(\"#\" + $panel.data(\"autotoc-trigger-id\")).trigger(\"click\");\n                }\n            } else if (href) {\n                self.guessAnchorLink(href);\n            }\n        }\n    },\n\n    guessImageLink: function (src) {\n        if (src.indexOf(this.options.prependToScalePart) !== -1) {\n            this.linkType = \"image\";\n            // TODO: use data-scale attribute instead:\n            this.$scale.val(this.tinypattern.getScaleFromUrl(src));\n            this.linkTypes.image.set(this.tinypattern.stripGeneratedUrl(src));\n        } else {\n            this.linkType = \"externalImage\";\n            this.linkTypes.externalImage.set(src);\n        }\n    },\n\n    guessAnchorLink: function (href) {\n        if (\n            this.options.prependToUrl &&\n            href.indexOf(this.options.prependToUrl) !== -1\n        ) {\n            // XXX if using default configuration, it gets more difficult\n            // here to detect internal urls so this might need to change...\n            this.linkType = \"internal\";\n            this.linkTypes.internal.set(this.tinypattern.stripGeneratedUrl(href));\n        } else if (href.indexOf(\"mailto:\") !== -1) {\n            this.linkType = \"email\";\n            var email = href.substring(\"mailto:\".length, href.length);\n            var split = email.split(\"?subject=\");\n            this.linkTypes.email.set(split[0]);\n            if (split.length > 1) {\n                this.$subject.val(decodeURIComponent(split[1]));\n            }\n        } else if (href[0] === \"#\") {\n            this.linkType = \"anchor\";\n            this.linkTypes.anchor.set(href.substring(1));\n        } else {\n            this.linkType = \"external\";\n            this.linkTypes.external.set(href);\n        }\n    },\n\n    setSelectElement: function ($el, val) {\n        $el.find(\"option:selected\").prop(\"selected\", false);\n        if (val) {\n            // update\n            $el.find('option[value=\"' + val + '\"]').prop(\"selected\", true);\n        }\n    },\n\n    reinitialize: function () {\n        /*\n         * This will probably be called before show is run.\n         * It will overwrite the base html template given to\n         * be able to privde default values for the overlay\n         */\n        this.modal.options.html = this.generateModalHtml();\n    },\n});\n","import $ from \"jquery\";\nimport _ from \"underscore\";\nimport _t from \"../../core/i18n-wrapper\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\nimport utils from \"../../core/utils\";\n\nlet Dropzone;\n\nexport default Base.extend({\n    name: \"upload\",\n    trigger: \".pat-upload\",\n    parser: \"mockup\",\n    defaults: {\n        showTitle: true,\n        url: null, // XXX MUST provide url to submit to OR be in a form\n        className: \"upload\",\n        wrap: false,\n        wrapperTemplate: '<div class=\"upload-wrapper\"/>',\n        fileaddedClassName: \"dropping\",\n        useTus: false,\n        container: \"\",\n        ajaxUpload: true,\n\n        paramName: \"file\",\n        addRemoveLinks: false,\n        autoCleanResults: true,\n        previewsContainer: \".previews\",\n        previewTemplate: null,\n        maxFiles: null,\n        maxFilesize: 99999999, // let's not have a max by default...\n\n        allowPathSelection: undefined,\n        relatedItems: {\n            // UID attribute is required here since we're working with related items\n            attributes: [\n                \"UID\",\n                \"Title\",\n                \"Description\",\n                \"getURL\",\n                \"portal_type\",\n                \"path\",\n                \"ModificationDate\",\n            ],\n            batchSize: 20,\n            basePath: \"/\",\n            vocabularyUrl: null,\n            width: 500,\n            maximumSelectionSize: 1,\n            selectableTypes: [\"Folder\"],\n        },\n    },\n\n    init: async function () {\n        import(\"dropzone/dist/dropzone.css\");\n        import(\"./upload.scss\");\n        Dropzone = (await import(\"dropzone\")).default;\n        /* we do not want this plugin to auto discover */\n        Dropzone.autoDiscover = false;\n\n        const UploadTemplate = (await import(\"./templates/upload.xml\")).default;\n\n        var self = this;\n\n        if (typeof self.options.allowPathSelection === \"undefined\") {\n            // Set allowPathSelection to true, if we can use path based urls.\n            self.options.allowPathSelection =\n                self.options.baseUrl && self.options.relativePath;\n        }\n\n        // TODO: find a way to make this work in firefox (and IE)\n        $(document).bind(\"paste\", function (e) {\n            var oe = e.originalEvent;\n            var items = oe.clipboardData.items;\n            if (items) {\n                for (var i = 0; i < items.length; i++) {\n                    if (items[i].type.indexOf(\"image\") !== -1) {\n                        var blob = items[i].getAsFile();\n                        self.dropzone.addFile(blob);\n                    }\n                }\n            }\n        });\n        // values that will change current processing\n        self.currentPath = self.options.currentPath;\n        self.currentFile = 0;\n\n        let template = _.template(UploadTemplate)({\n            _t: _t,\n            allowPathSelection: self.options.allowPathSelection,\n        });\n        self.$el.addClass(self.options.className);\n        self.$el.append(template);\n\n        self.$progress = $(\".progress-bar-success\", self.$el);\n\n        if (!self.options.showTitle) {\n            self.$el.find(\"h2.title\").hide();\n        }\n\n        if (!self.options.ajaxUpload) {\n            // no ajax upload, drop the fallback\n            $(\".fallback\", this.$el).remove();\n            if (this.$el.hasClass(\".upload-container\")) {\n                this.$el.addClass(\"no-ajax-upload\");\n            } else {\n                this.$el.closest(\".upload-container\").addClass(\"no-ajax-upload\");\n            }\n        }\n\n        if (self.options.wrap) {\n            self.$el.wrap(self.options.wrapperTemplate);\n            self.$el = self.$el.parent();\n        }\n\n        if (self.options.allowPathSelection) {\n            // only use related items if we can generate path based urls and if it's not turned off.\n            self.$pathInput = $('input[name=\"location\"]', self.$el);\n            self.relatedItems = await self.setupRelatedItems(self.$pathInput);\n        } else {\n            $('input[name=\"location\"]', self.$el).parent().remove();\n            self.relatedItems = null;\n        }\n\n        self.$dropzone = $(\".upload-area\", self.$el);\n\n        $(\"div.browse-select button.browse\", self.$el).click(function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            if (\n                !self.options.maxFiles ||\n                self.dropzone.files.length < self.options.maxFiles\n            ) {\n                self.dropzone.hiddenFileInput.click();\n            }\n        });\n\n        var dzoneOptions = await this.getDzoneOptions();\n\n        try {\n            // if init of Dropzone fails it says nothing and\n            // it fails silently. Using this block we make sure\n            // that if you break it w/ some weird or missing option\n            // you can get a proper log of it\n            //\n            self.dropzone = new Dropzone(self.$dropzone[0], dzoneOptions);\n        } catch (e) {\n            if (window.DEBUG) {\n                // log it!\n                console.log(e);\n            }\n            throw e;\n        }\n\n        self.dropzone.on(\"maxfilesreached\", function () {\n            self.showHideControls();\n        });\n\n        self.dropzone.on(\"addedfile\", function (/* file */) {\n            self.showHideControls();\n        });\n\n        self.dropzone.on(\"removedfile\", function () {\n            self.showHideControls();\n        });\n\n        self.dropzone.on(\"success\", function (e, response) {\n            // Trigger event 'uploadAllCompleted' and pass the server's reponse and\n            // the path uid. This event can be listened to by patterns using the\n            // upload pattern, e.g. the TinyMCE pattern's link plugin.\n            var data;\n            try {\n                data = $.parseJSON(response);\n            } catch (ex) {\n                data = response;\n            }\n            self.$el.trigger(\"uploadAllCompleted\", {\n                data: data,\n                path_uid: self.$pathInput ? self.$pathInput.val() : null,\n            });\n        });\n\n        if (self.options.autoCleanResults) {\n            self.dropzone.on(\"complete\", function (file) {\n                if (file.status === Dropzone.SUCCESS) {\n                    setTimeout(function () {\n                        $(file.previewElement).fadeOut();\n                    }, 3000);\n                }\n            });\n        }\n\n        self.dropzone.on(\"complete\", function (file) {\n            if (file.status === Dropzone.SUCCESS && self.dropzone.files.length === 1) {\n                self.showHideControls();\n            }\n        });\n\n        self.dropzone.on(\"error\", function (file, response, xmlhr) {\n            if (typeof xmlhr !== \"undefined\" && xmlhr.status !== 403) {\n                // If error other than 403, just print a generic message\n                $(\".dz-error-message span\", file.previewElement).html(\n                    _t(\"The file transfer failed\")\n                );\n            }\n        });\n\n        self.dropzone.on(\"totaluploadprogress\", function (pct) {\n            // need to caclulate total pct here in reality since we're manually\n            // processing each file one at a time.\n            pct =\n                (((self.currentFile - 1) * 100 + pct) /\n                    (self.dropzone.files.length * 100)) *\n                100;\n            self.$progress.attr(\"aria-valuenow\", pct).css(\"width\", pct + \"%\");\n        });\n\n        $(\".upload-all\", self.$el).click(function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            self.processUpload({\n                finished: function () {\n                    self.$progress.attr(\"aria-valuenow\", 0).css(\"width\", \"0%\");\n                },\n            });\n        });\n        if (self.options.clipboardfile) {\n            self.dropzone.addFile(self.options.clipboardfile);\n        }\n    },\n\n    showHideControls: function () {\n        /* we do this delayed because this can be called multiple times\n         AND we need to do this hide/show AFTER dropzone is done with\n         all it's own events. This is NASTY but the only way we can\n         enforce some numFiles with dropzone! */\n        var self = this;\n        if (self._showHideTimeout) {\n            clearTimeout(self._showHideTimeout);\n        }\n        self._showHideTimeout = setTimeout(function () {\n            self._showHideControls();\n        }, 50);\n    },\n\n    _showHideControls: function () {\n        var self = this;\n        var $controls = $(\".controls\", self.$el);\n        var $browse = $(\".browse-select\", self.$el);\n        var $input = $(\".dz-hidden-input\");\n\n        if (self.options.maxFiles) {\n            if (self.dropzone.files.length < self.options.maxFiles) {\n                $browse.show();\n                $input.prop(\"disabled\", false);\n            } else {\n                $browse.hide();\n                $input.prop(\"disabled\", true);\n            }\n        }\n        if (self.dropzone.files.length > 0) {\n            $controls.fadeIn(\"slow\");\n            var file = self.dropzone.files[0];\n            $(\".dz-error-message span\", file.previewElement).html(\"\");\n        } else {\n            $controls.fadeOut(\"slow\");\n        }\n    },\n\n    pathJoin: function () {\n        var parts = [];\n        _.each(arguments, function (part) {\n            if (!part) {\n                return;\n            }\n            if (part[0] === \"/\") {\n                part = part.substring(1);\n            }\n            if (part[part.length - 1] === \"/\") {\n                part = part.substring(0, part.length - 1);\n            }\n            parts.push(part);\n        });\n        return parts.join(\"/\");\n    },\n\n    getUrl: function () {\n        var self = this;\n        var url = self.options.url;\n        if (!url) {\n            if (self.options.baseUrl && self.options.relativePath) {\n                url = self.options.baseUrl;\n                if (url[url.length - 1] !== \"/\") {\n                    url = url + \"/\";\n                }\n                url = url + self.pathJoin(self.currentPath, self.options.relativePath);\n            } else {\n                var $form = self.$el.parents(\"form\");\n                if ($form.length > 0) {\n                    url = $form.attr(\"action\");\n                } else {\n                    url = window.location.href;\n                }\n            }\n        }\n        return url;\n    },\n\n    getDzoneOptions: async function () {\n        let PreviewTemplate = await import(\"./templates/preview.xml\");\n        PreviewTemplate = PreviewTemplate.default;\n\n        var self = this;\n\n        // This pattern REQUIRE dropzone to be clickable\n        self.options.clickable = true;\n\n        var options = $.extend({}, self.options);\n        options.url = self.getUrl();\n\n        options.headers = {\n            \"X-CSRF-TOKEN\": utils.getAuthenticator(),\n        };\n\n        // XXX force to only upload one to the server at a time,\n        // right now we don't support multiple for backends\n        options.uploadMultiple = false;\n\n        delete options.wrap;\n        delete options.wrapperTemplate;\n        delete options.resultTemplate;\n        delete options.autoCleanResults;\n        delete options.fileaddedClassName;\n        delete options.useTus;\n\n        if (self.options.previewsContainer) {\n            /*\n             * if they have a select but it's not an id, let's make an id selector\n             * so we can target the correct container. dropzone is weird here...\n             */\n            var $preview = self.$el.find(self.options.previewsContainer);\n            if ($preview.length > 0) {\n                options.previewsContainer = $preview[0];\n            }\n        }\n\n        // XXX: do we need to allow this?\n        options.autoProcessQueue = false;\n        // options.addRemoveLinks = true;  // we show them in the template\n        options.previewTemplate = PreviewTemplate;\n\n        // if our element is a form we should force some values\n        // https://github.com/enyo/dropzone/wiki/Combine-normal-form-with-Dropzone\n        return options;\n    },\n\n    processUpload: function (options) {\n        if (!options) {\n            options = {};\n        }\n\n        var self = this,\n            processing = false,\n            useTus = self.options.useTus,\n            fileaddedClassName = self.options.fileaddedClassName,\n            finished = options.finished;\n\n        self.currentFile = 0;\n\n        function process() {\n            processing = true;\n            if (self.dropzone.files.length === 0) {\n                processing = false;\n            }\n\n            var file = self.dropzone.files[0];\n            if (processing && file.status === Dropzone.ERROR) {\n                // Put the file back as \"queued\" for retrying\n                file.status = Dropzone.QUEUED;\n                processing = false;\n            }\n\n            if (!processing) {\n                self.$el.removeClass(fileaddedClassName);\n                if (finished !== undefined && typeof finished === \"function\") {\n                    finished();\n                }\n                return;\n            }\n\n            if ([Dropzone.SUCCESS, Dropzone.CANCELED].indexOf(file.status) !== -1) {\n                // remove it\n                self.dropzone.removeFile(file);\n                process();\n            } else if (file.status !== Dropzone.UPLOADING) {\n                // start processing file\n                if (useTus && window.tus) {\n                    // use tus upload if installed\n                    self.handleTusUpload(file);\n                } else {\n                    // otherwise, just use dropzone to process\n                    self.currentFile += 1;\n                    self.dropzone.processFile(file);\n                }\n                setTimeout(process, 100);\n            } else {\n                // currently processing\n                setTimeout(process, 100);\n            }\n        }\n        process();\n    },\n\n    handleTusUpload: function (file) {\n        /* this needs fixing... */\n        var self = this,\n            $preview = $(file.previewElement),\n            chunkSize = 1024 * 1024 * 5; // 5mb chunk size\n\n        file.status = Dropzone.UPLOADING;\n\n        window.tus\n            .upload(file, {\n                endpoint: self.dropzone.options.url,\n                headers: {\n                    \"FILENAME\": file.name,\n                    \"X-CSRF-TOKEN\": utils.getAuthenticator(),\n                },\n                chunkSize: chunkSize,\n            })\n            .fail(function () {\n                if (window.DEBUG) {\n                    console.alert(_t(\"Error uploading with TUS resumable uploads\"));\n                }\n                file.status = Dropzone.ERROR;\n            })\n            .progress(function (e, bytesUploaded, bytesTotal) {\n                var percentage = (bytesUploaded / bytesTotal) * 100;\n                self.$progress\n                    .attr(\"aria-valuenow\", percentage)\n                    .css(\"width\", percentage + \"%\");\n                self.$progress.html(\n                    _t(\"uploading...\") +\n                        \"<br />\" +\n                        self.formatBytes(bytesUploaded) +\n                        \" / \" +\n                        self.formatBytes(bytesTotal)\n                );\n            })\n            .done(function (url, file) {\n                file.status = Dropzone.SUCCESS;\n                self.dropzone.emit(\"success\", file);\n                self.dropzone.emit(\"complete\", file);\n            });\n    },\n\n    formatBytes: function (bytes) {\n        var kb = Math.round(bytes / 1024);\n        if (kb < 1024) {\n            return kb + \" KiB\";\n        }\n        var mb = Math.round(kb / 1024);\n        if (mb < 1024) {\n            return mb + \" MB\";\n        }\n        return Math.round(mb / 1024) + \" GB\";\n    },\n\n    setPath: function (path) {\n        var self = this;\n        self.currentPath = path;\n        self.options.url = null;\n        self.options.url = self.dropzone.options.url = self.getUrl();\n    },\n\n    setupRelatedItems: async function ($input) {\n        const RelatedItems = (await import(\"../relateditems/relateditems\")).default;\n\n        var self = this;\n        var options = self.options.relatedItems;\n        options.upload = false; // ensure that related items upload is off.\n        if (self.options.initialFolder) {\n            $input.attr(\"value\", self.options.initialFolder);\n        }\n        var ri = new RelatedItems($input, options);\n        ri.$el.on(\"change\", function () {\n            var result = $(this).select2(\"data\");\n            var path = null;\n            if (result.length > 0) {\n                path = result[0].path;\n            }\n            self.setPath(path);\n        });\n        return ri;\n    },\n});\n"],"names":["i","Base","name","trigger","parser","defaults","separator","initializeValues","self","this","options","initialValues","id","term","initSelection","$el","callback","data","value","val","seldefaults","JSON","parse","$","split","each","selection","text","push","utils","initializeTags","tags","substr","allowNewItems","multiple","initializeOrdering","orderable","on","Sortable","default","sortable_el","$select2","querySelector","draggable","dragClass","chosenClass","onStart","select2","onEnd","initializeSelect2","action","e","debug","console","window","formatResultCssClass","ob","toLowerCase","replace","el","onSelected","onSelecting","onDeselecting","onDeselected","parent","find","off","addClass","opened","length","init","hasOwnProperty","ajax","vocabularyUrl","undefined","url","queryTerm","quietMillis","page","query","page_limit","results","dataIds","item","haveResult","is","vals","o","html","$hidden","join","attr","$orig","replaceWith","KEY","currentPath","selectedUIDs","openAfterInit","attributes","basePath","pageSize","browsing","closeOnSelect","contextPath","dropdownCssClass","favorites","recentlyUsed","recentlyUsedMaxItems","recentlyUsedKey","maximumSelectionSize","minimumInputLength","mode","pathOperator","rootPath","rootUrl","scanSelection","selectableTypes","sortOn","sortOrder","tokenSeparators","upload","uploadAllowView","breadcrumbTemplateSelector","favoriteTemplateSelector","recentlyusedTemplateSelector","resultTemplateSelector","selectionTemplateSelector","toolbarTemplateSelector","filterSelectable","ret","slice","filter","isSelectable","bind","max","parseInt","applyTemplate","tpl","template","open_folder","_t","current_directory","one_level_up","_item","_","setAjax","dataType","criterias","v","sort_on","sort_order","stringify","criteria","batch","size","more","total","map","UID","is_folderish","indexOf","path","oneLevelUp","Title","selectable","concat","renderToolbar","initUploadView","disabled","Upload","upload_button","$toolbar","upload_el","upload_config","success","response","uid","search","apply","emit","popover","hide","uloadMultiple","allowPathSelection","relativePath","baseUrl","addEventListener","setPath","paths","itemPath","itemsHtml","node","favoritesHtml","item_copy","recentlyUsedHtml","reverse","items","favItems","favText","searchText","searchModeText","browseModeText","recentlyUsedItems","recentlyUsedText","icon_root","icon_recently_used","icon_favorites","icon_upload","upload_text","unbind","stopPropagation","preventDefault","toggleClass","browseTo","event","it","selectItem","type","result","allowUpload","alreadyPresent","splice","deselectItem","obj","portal_type","Dropdown","breadcrumbTemplate","favoriteTemplate","recentlyusedTemplate","resultTemplate","selectionTemplate","toolbarTemplate","wrap","$container","parents","Select2","formatSelection","getIcon","getURL","review_state","$selection","registry","path_split","icon_level_up","icon_level_down","formatResult","iconLevelUp","iconLevelDown","$parent","removeClass","element","ids","pattern","reduce","prev","tokenizer","input","prepend","choice","document","which","selectorContext","browsableItem","section","levels","IDPrefix","classTOCName","classSectionName","classLevelPrefixName","classActiveName","scrollDuration","scrollEasing","$toc","prependTo","appendTo","className","asTabs","hasClass","activeId","$level","prop","location","hash","getLevel","doScroll","skipHash","children","target","animate","scrollTop","offset","top","history","pushState","first","elementLevel","level","levelSelector","LinkType","linkModal","tinypattern","tiny","dom","getEl","toUrl","load","getAttrib","set","updateRelatedItems","ExternalLink","extend","prototype","call","RegExp","test","InternalLink","createRelatedItems","relatedItems","RelatedItems","generateUrl","UploadLink","getDelegatedLinkType","linkType","linkTypes","image","internal","ImageLink","generateImageUrl","getScaleFromSrcset","$scale","EmailLink","subject","getSubject","href","$subject","attribs","AnchorLink","$select","anchorNodes","anchorData","populate","j","title","remove","nodes","select","anchorSelector","substring","found","anode","newAnchor","append","getIndex","index","innerHTML","anchor","tinymce","editor","ui","addButton","icon","tooltip","onAction","settings","addImageClicked","shortcut","addLinkClicked","stateSelector","execCommand","initialLinkType","insertHeading","linkTypeClassMapping","external","email","uploadImage","externalImage","linkTypeTemplateMapping","LinkTemplate","ImageTemplate","modal","generateModalHtml","content","buttons","reloadWindowOnClose","templateOptions","classDialog","actionOptions","backdropOptions","zIndex","closeOnClick","modalShown","isOnlyTextSelected","getContent","anchorElm","childNodes","ii","nodeType","insertImageHelp","uploadText","insertLinkHelp","anchorLabel","externalText","emailText","subjectText","targetList","titleText","internalImageText","internalImage","externalImageText","altText","alt","imageAlignText","imageAlign","captionFromDescriptionText","captionFromDescription","enableImageZoom","captionText","caption","scaleText","scale","pictureVariants","imageCaptioningEnabled","cancelBtn","insertBtn","isImageMode","initElements","$target","$modal","$button","$title","$alt","$align","$enableImageZoom","$captionFromDescription","$caption","click","classes","eq","change","checked","getLinkUrl","getValue","updateAnchor","focus","setRng","rng","linkAttrs","onlyText","initialText","innerText","textContent","setAttribs","undoManager","add","insertContent","createHTML","encode","focusElement","elm","nodeChanged","pictureVariant","pictureVariantsConfig","sourceset","updateImage","src","cssclasses","html_string","imgElm","getAttribute","imgWidth","imgHight","width","height","get","setAttrib","onload","onerror","complete","initData","$upload","folderTypes","PatternUpload","evt","patUpload","patternUpload","dropzone","files","processUpload","counter","checkUpload","setTimeout","error","show","getRng","selectedElm","getNode","getParent","format","default_link_target","rel","img","guessImageLink","klasses","klass","availClass","imageClasses","$panel","guessAnchorLink","prependToScalePart","getScaleFromUrl","stripGeneratedUrl","prependToUrl","decodeURIComponent","setSelectElement","reinitialize","Dropzone","showTitle","wrapperTemplate","fileaddedClassName","useTus","container","ajaxUpload","paramName","addRemoveLinks","autoCleanResults","previewsContainer","previewTemplate","maxFiles","maxFilesize","batchSize","autoDiscover","UploadTemplate","originalEvent","clipboardData","blob","getAsFile","addFile","currentFile","$progress","closest","$pathInput","setupRelatedItems","$dropzone","hiddenFileInput","getDzoneOptions","dzoneOptions","DEBUG","log","showHideControls","ex","path_uid","file","status","SUCCESS","previewElement","fadeOut","xmlhr","pct","css","finished","clipboardfile","_showHideTimeout","clearTimeout","_showHideControls","$controls","$browse","$input","fadeIn","pathJoin","parts","arguments","part","getUrl","$form","PreviewTemplate","clickable","headers","uploadMultiple","$preview","autoProcessQueue","processing","process","ERROR","QUEUED","CANCELED","removeFile","UPLOADING","tus","handleTusUpload","processFile","endpoint","chunkSize","fail","alert","progress","bytesUploaded","bytesTotal","percentage","formatBytes","done","bytes","kb","Math","round","mb","initialFolder","ri"],"sourceRoot":""}