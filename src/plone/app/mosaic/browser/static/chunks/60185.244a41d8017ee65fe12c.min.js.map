{"version":3,"file":"chunks/60185.244a41d8017ee65fe12c.min.js","mappings":";umBACA,4gGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQ,s/CAMYC,EAAAA,EAAAA,UAAkB,qBAA9B,IAEqBC,EAAAA,WAEjB,WAAYC,G,uGAAQ,S,EAIX,CACLC,aAAc,CACV,MACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,UAEJC,cAAe,CACX,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,oBAEJC,oBAAqB,CACjB,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,0BACA,0BACA,6B,EA9CY,Y,EAAA,M,sFAChBC,KAAKJ,OAASA,CACjB,C,uDAiDD,SAAcK,GAAG,UACKD,KAAKE,OAAOL,cADjB,IACb,IAAK,EAAL,qBAA4C,KAAjCM,EAAiC,QACxC,GAAIC,IAAEH,GAAGI,SAASF,GACd,OAAOA,CAEd,CALY,+BAOb,OAAOH,KAAKE,OAAOL,aAAa,EACnC,G,oCAED,SAAuBI,GAEnB,IAAK,IAAIK,EAAI,EAAGA,EAAON,KAAKE,OAAOH,oBAAoBQ,OAAQD,IAC3D,GAAIF,IAAEH,GAAGI,SAASL,KAAKE,OAAOH,oBAAoBO,IAC9C,OAAOA,EAIf,OAAO,CACV,G,wBAED,SAAWE,EAAMC,GACb,IAUW,EAVPC,EAAOV,KAEPU,EAAKd,OAAOe,QAAQC,MAAMC,QAC1BH,EAAKd,OAAOe,QAAQC,MAAME,OAI9BV,IAAAA,KAAO,CACHI,KAAM,MACNC,IAAKA,EACLM,SAAO,cAAE,WAAgBC,GAAhB,wEAELA,EAAQN,EAAKd,OAAOqB,mBAAmBD,GAGvCN,EAAKd,OAAOsB,YAAYT,EAAKO,GALxB,SAQCN,EAAKS,QAAQX,EAAMQ,EAAMI,KAAK,kBAAkBC,OAAQZ,GARzD,2CAAF,8CAWd,G,2CAED,WAAqBD,EAAMc,EAAUb,GAArC,gFAIIO,GAFIN,EAAOV,MAEEJ,OAAOqB,mBAAmBK,GACvCZ,EAAKd,OAAOsB,YAAYT,EAAKO,GALjC,SAMUN,EAAKS,QAAQX,EAAMQ,EAAMI,KAAK,kBAAkBC,OAAQZ,GANlE,gD,2EASA,SAAYA,GACR,IAAIC,EAAOV,KAEXU,EAAKd,OAAOe,QAAQY,QAGpBC,OAAOC,OAAOC,QAGdtB,IAAAA,KAAO,CACHI,KAAM,MACNC,IAAKA,EACLM,QAAS,SAAUC,GAEfA,EAAQN,EAAKd,OAAOqB,mBAAmBD,GAGvCN,EAAKd,OAAO+B,eAAelB,GAG3BC,EAAKd,OAAOsB,YAAYT,EAAKO,GAG7B,IAAIY,EAAQxB,IACR,6CACAM,EAAKd,OAAOiC,UAEhBD,EAAMP,KAAKL,EAAMI,KAAK,kBAAkBC,QACxCO,EAAME,KAAK,eAAgBrB,EAAIsB,QAAQ,OAAQ,SAClD,GAER,G,oCAED,WAAcvB,EAAMQ,EAAOgB,GAA3B,oFACQtB,EAAOV,MAENJ,OAAOqC,OAAOC,SAAS,mDAG5B9B,IAAEM,EAAKd,OAAOqC,OAAOE,IAAI,IAAIC,OACzBhC,IAAEM,EAAKd,OAAOiC,SAASQ,cAAc,QAChCH,SAAS,mBACTE,OACGhC,IAAEM,EAAKd,OAAOiC,SAASQ,cAAc,QAChCH,SAAS,wBACTE,OACGhC,IAAEM,EAAKd,OAAOiC,SAASQ,cAAc,QAChCH,SACG,wCAA0C1B,EAAO,SAEpD4B,OACGhC,IAAEM,EAAKd,OAAOiC,SAASQ,cAAc,QAChCH,SAAS,uBACTJ,KACG,eACAE,GAAWA,EAAQD,QAAQ,OAAQ,UAEtCV,KAAKL,IAEbkB,SACG,qEAOxBI,EAAS5B,EAAKd,OAAOqC,OAAOb,KAAK,2BAGjCmB,EAAQ,EACZ7B,EAAKd,OAAOqC,OAAOO,MAAK,WAChBpC,IAAEJ,MAAMuC,QAAUA,IAClBA,EAAQnC,IAAEJ,MAAMuC,QAEvB,IAGGD,EAAOC,QAAUA,EAAQ,EACzBD,EAAOC,MAAMA,EAAQ,GAErBD,EAAOC,MAAMD,EAAOC,SAGpBE,EAAO,IAAIC,EAAAA,EAAKhC,EAAKd,OAAQ0C,GAnDrC,UAoDUG,EAAKE,aApDf,QAqDIF,EAAKG,YACLH,EAAKI,eAtDT,iD,+EAyDA,SAAgBC,GACZ,IACIC,EAAOC,EAcX,GAXyB,sBAArBF,EAAYG,MACZF,EAAQ,oCACRC,EAAM,SACsB,4BAArBF,EAAYG,MACnBF,EAAQ,kCACRC,EAAM,SAEND,EAAQ,QACRC,EAAM,UAID,UADDF,EAAYI,UAEZ,OAAQJ,EAAYK,QAChB,IAAK,mCACL,IAAK,wCACD,IAAIC,EAAUhD,IAAE,IAAM0C,EAAYO,GApBvCrD,KAoBgDJ,OAAOiC,UAC7CT,KAAK,SACLU,KAAK,SACV,MAAO,GAAP,OAAUiB,GAAV,OAAkBK,GAAlB,OAA4BJ,GAChC,IAAK,2CACL,IAAK,gDACL,IAAK,6CACL,IAAK,kDACD,IAAIM,EAAQlD,IAAE,IAAM0C,EAAYO,GA5BrCrD,KA4B8CJ,OAAOiC,UAC3CT,KAAK,YACLmC,MACAxB,QAAQ,MAAO,SACpB,MAAO,GAAP,OAAUgB,GAAV,OAAkBO,GAAlB,OAA0BN,GAC9B,IAAK,+CACL,IAAK,iDACL,IAAK,sDACL,IAAK,sCACD,OAAO5C,IAAE,IAAM0C,EAAYO,IAAIjC,KAAK,YAAYmC,MACpD,QACI,MACI,uDACAT,EAAYU,MACZ,aAIZ,OAAOV,EAAYW,aAE9B,G,4BAED,SAAeC,GACX,IAwCIC,EAtCAC,EAAe,SAAfA,EAAyBC,GACzB,IAAIC,EAAO,GAiCX,OA9B4C,IAAxC1D,IAAEyD,GAAKxD,SAAS,qBAChBD,IAAEyD,GAAKzC,KAAK,gBAAgBb,QAAU,IAEtCwD,EAAa3D,IAAEyD,GAAK/B,KAAK,SACzBgC,GAAQ,qBAAuBC,EAAa,OAG5C3D,IAAEyD,GACGG,SAAS,qBACTxB,MAAK,WAEFsB,GAAQ,uBAAyB1D,IAAEJ,MAAM8B,KAAK,SAAW,OAEzD1B,IAAEJ,MACGgE,WACAxB,MAAK,WACEpC,IAAEJ,MAAMK,SAAS,eACjByD,GAAQ1D,IAAEJ,MAAMiE,KAAK,eAAeC,YAAYR,GACzCtD,IAAEJ,MAAMK,SAAS,0BACxByD,GAAQF,EAAa5D,MAE5B,IAGL8D,GAAQ,kBACX,IAGLA,GAAQ,kBAELA,CACV,EAGqCA,EAAO,GAAIC,EAAa,GAgC9D,OA7BAD,GAAQ,aAGR1D,IAAE,eA9CSJ,KA8CYJ,OAAOiC,UAAUW,MAAK,WAEzCsB,GAAQ,wBAA0B1D,IAAEJ,MAAMiE,KAAK,SAAW,IAC1DH,GAAQ,8BAAgC1D,IAAEJ,MAAMiE,KAAK,eAAiB,OAEtE7D,IAAEJ,MACGgE,WACAxB,MAAK,WACEpC,IAAEJ,MAAMK,SAAS,qBACjByD,GAAQF,EAAa5D,MAE5B,IAGL8D,GAAQ,cACX,IAGDA,GAAQ,cAERH,EACI,8MAnEO3D,KAoEFJ,OAAOuE,QAAQjE,OACpB,OACJyD,GAAWG,EACXH,GAAW,WAEd,G,8BAED,WACI,IACIS,EAAgBhE,IAChB,0GAFOJ,KAMFJ,OAAOyE,iBACZD,EAAcb,IAAI,IAElBa,EAAcb,IATPvD,KASgBsE,iBAE9B,G,yBAED,WACI,IAAI5D,EAAOV,KAwFXI,IAAEM,EAAKd,OAAOiC,UAAU0C,IAAI,WAAWC,GAAG,WAtEpB,SAAUvE,GAE5B,GAAkB,IAAdA,EAAEwE,QAAe,WAEC/D,EAAKd,OAAOiC,SAAS6C,iBAAiB,0BAFvC,IAEjB,2BAAkF,QACzE,eAAeC,MAHP,+BAMjB,IAAIC,EAAe/C,SAASgD,cAAcC,QAAQ,gBAC/CF,GACCA,EAAa,eAAelD,OAEnC,CAED,GAAkB,KAAdzB,EAAEwE,QACF,GAAIrE,IAAE,gBAAiBM,EAAKd,OAAOiC,UAAUxB,SAAS,mBAClDD,IAAE,gBAAiBM,EAAKd,OAAOiC,UAAUkD,YAAY,uBAClD,CACH,IAAIC,EAAO,IAAIC,KACf7E,IAAE,gBAAiBM,EAAKd,OAAOiC,UAAUK,SAAS,mBAClD9B,IAAE,gBAAiBM,EAAKd,OAAOiC,UAAUoC,KACrC,mBACAe,EAAKE,UAEZ,CAQL,GALkB,KAAdjF,EAAEwE,SACFrE,IAAE,gBAAiBM,EAAKd,OAAOiC,UAAUK,SAAS,mBAIpC,KAAdjC,EAAEwE,QAAgB,CAElB,IAAIU,EAAgB/E,IAAE,wBAAyBM,EAAKd,OAAOiC,UACvDsD,EAAc5E,OAAS,EACvB4E,EAAc3C,MAAK,WACfpC,IAAEJ,MAAMkC,SAAS,sBACb9B,IAAEJ,MAAMK,SAAS,0BACjBD,IAAEyB,UAAUuD,QAAQ,aAEpBhF,IAAEyB,UAAUuD,QAAQ,UAE3B,IAGDhF,IAAE,wBAAyBM,EAAKd,OAAOiC,UAAUW,MAAK,WAClDpC,IAAEJ,MAAMoF,QAAQ,OACnB,IAILhF,IAAE,+BAAgCM,EAAKd,OAAOiC,UAAUW,MAAK,WAEzDpC,IAAEJ,MAAMqF,QAAQ,gBAAgBN,YAAY,yBAC5C3E,IAAEJ,MAAMyB,SAASsD,YAAY,uBAC7B3E,IAAEJ,MAAMyB,SAASuC,SAAS,8BAA8BsB,SAGxDlF,IAAEJ,MAAMsF,QACX,IAGG5E,EAAKd,OAAOe,QAAQC,MAAMC,QAC1BH,EAAKd,OAAOe,QAAQC,MAAME,MAEjC,CACJ,IAIDV,IAAEM,EAAKd,OAAOiC,UAAU0C,IAAI,SAASC,GAAG,SAxFpB,SAAUvE,GAE1B,GAAkB,KAAdA,EAAEwE,QAAgB,CAClB,IAAIO,EAAO,IAAIC,KACXM,EAAUnF,IAAE,gBAAiBM,EAAKd,OAAOiC,UAAUoC,KAAK,oBAC9Ce,EAAKE,UAAYK,EACjB,KACVnF,IAAE,gBAAiBM,EAAKd,OAAOiC,UAAUkD,YAAY,kBAE5D,CAEiB,KAAd9E,EAAEwE,SACFrE,IAAE,gBAAiBM,EAAKd,OAAOiC,UAAUkD,YAAY,kBAE5D,IAqHD3E,IAAEM,EAAKd,OAAOiC,UACT0C,IAAI,aACJC,GAAG,aA1CgB,SAAUvE,GAE9B,IAAIuF,EACAvF,EAAEwF,OACFD,EAAMvF,EAAEwF,OACDxF,EAAEyF,aACTF,EAAMvF,EAAEyF,YAIZ,IAAIC,EAAWvF,IAAE,0BAA2BM,EAAKd,OAAOiC,UACpD8D,EAASpF,OAAS,GAClBoF,EAASnD,MAAK,WAEVpC,IAAEJ,MAAM4F,qBACX,IAIDxF,IAAEoF,GAAKH,QAAQ,2CAA2C9E,OAAS,GAKzB,IAA1CH,IAAEoF,GAAKH,QAAQ,gBAAgB9E,QAEkB,IAA7CH,IAAEoF,GAAKH,QAAQ,mBAAmB9E,SAElCG,EAAKd,OAAOiC,SAAS6C,iBAAiB,yBAAyBmB,SAAQ,SAASC,GAC5EA,EAAGC,UAAUT,OAAO,wBACpBlF,IAAE0F,GAAI7B,KAAK,eAAeU,MAC7B,IAGDjE,EAAKd,OAAOoG,QAAQC,qBAG/B,IAQD,IAAIC,EAAoB,SAAUjG,GAG9BG,IAAE,0BAA2BM,EAAKd,OAAOiC,UAAUW,MAAK,WAEpD,IAAI2D,EAAS/F,IAAEJ,MAAMyB,SAAS0E,SAG9B/F,IAAEJ,MAAMoG,IAAI,MAAOnG,EAAEoG,MAAQ,EAAIF,EAAOG,KACxClG,IAAEJ,MAAMoG,IAAI,OAAQnG,EAAEsG,MAAQ,EAAIJ,EAAOK,KAC5C,IAGDpG,IAAE,+BAAgCM,EAAKd,OAAOiC,UAAUW,MAAK,WAEzD,IAAIiE,EAGAnE,EAASlC,IAAEJ,MAGX0G,EAAMpE,EAAOb,SACbkF,EAAsBrE,EAAO2B,KAAK,uBAGlC2C,EAAUC,WAAW5G,EAAEsG,MAAQG,EAAIP,SAASK,KAAO,GAGnDM,EAAmBC,KAAKC,MACvBJ,EAAUtE,EAAO2B,KAAK,aAAgB,KAIvCgD,EAAO,EACPC,EAAc,EAECC,IAENtB,SAAQ,SAAUuB,IAC3BX,EAAkBM,KAAKM,IAAID,EAAON,IACZI,IAClBD,EAAOG,EACPF,EAAcT,EAErB,IAOD,IALA,IAAIa,EA6kCpB,SAAkC/E,GAG9B,IAFA,IAAIgF,EAAeJ,IAEV7G,EAAI,EAAGA,EAAMiH,EAAahH,OAAQD,IACvC,GAAIiC,IAAUgF,EAAajH,GACvB,OAAOA,EAAM,EAKrB,OAAO,EACV,CAxlC+BkH,CAAyBP,GAErCQ,EAAenF,EAAO2B,KAAK,gBAC3ByD,EAAkB,EAClBC,EAAiB,EACZlI,EAAI,EAAGA,EAAIgI,EAAalH,OAAQd,IACjCA,EAAIkH,IACJe,GAAmBD,EAAahI,GAAKgI,EAAahI,GAAK,GAEvDA,EAAIkH,IACJgB,GAAkBF,EAAahI,GAAKgI,EAAahI,GAAK,GAG9D,IAAImI,EAAWN,EAAYI,EACvBG,EAAe,GAAKH,EAAkBC,EAK1C,GAHAC,EACIA,EAAWC,EAAeA,EAAeD,EAAW,EAAI,EAAIA,EAE5DtF,EAAO2B,KAAK,iBAAmB,EAAG,CAClC,IAAI6D,EAAe,EACfC,GAAqB,EACrBC,EAAqBtH,EAAKR,OAAOJ,cAAcmI,KAAK,KACpDC,EAAoBxH,EAAKR,OAAOL,aAAaoI,KAAK,KAGtDvB,EAAI1C,SAAS,8BAA8BxB,MAAK,SAAU2F,GACtD,GAAIA,IAAUxB,EAAqB,CAE/Bc,EAAaU,GAASP,EACtB,IAAIQ,EAAiBC,EAAuBT,GAC5CxH,IAAEJ,MACG+E,YAAYmD,GACZhG,SAASkG,GACThH,KAAK,SACLC,KAAKuG,GACVG,GAAqB,CACxB,CAGD3H,IAAEJ,MACG+E,YAAYiD,GACZ9F,SAFL,wBAE+B4F,IAE/BA,GAAgBL,EAAaU,GAE1BJ,IAEC3H,IAAE,+BAAgCsG,GAC7B3B,YAAYiD,GACZ9F,SAFL,wBAE+B4F,IAC/BC,GAAqB,EAE5B,IAGD3H,IAAEJ,MAAMiE,KAAK,eAAgBwD,EAChC,CACJ,GACJ,EAGDrH,IAAEM,EAAKd,OAAOiC,UAAU0C,IAAI,aAAaC,GAAG,YAAa0B,GACzD9F,IAAEM,EAAKd,OAAOiC,UAAU0C,IAAI,YAAYC,GAAG,WAAY0B,GAwEvD9F,IAAEM,EAAKd,OAAOiC,UAAU0C,IAAI,WAAWC,GAAG,WApEpB,WAElBpE,IAAE,+BAAgCM,EAAKd,OAAOiC,UAAUW,MAAK,WACzD,IAAImE,EAAsBvG,IAAEJ,MAAMiE,KAAK,uBAGvC7D,IAAEJ,MAAMyB,SAASA,SAAS6G,mBAG1B,IAAIC,EAAQnI,IAAEJ,MAAMqF,QAAQ,gBAGxBoC,EAAerH,IAAEJ,MAAMiE,KAAK,gBAGhC7D,IAAEJ,MACGyB,SACAuC,SAAS,qBACTxB,MAAK,SAAU/C,GACZW,IAAEJ,MACG+E,YAAYrE,EAAKR,OAAOL,aAAaoI,KAAK,MAC1C/F,SAASmG,EAAuBZ,EAAahI,KAElCW,IAAEJ,MAAMK,SAAS,QACfZ,IAAMkH,GACpBvG,IAAEJ,MACGgE,SAAS,gBACTwE,QACAxE,SAAS,2BACTxB,MAAK,WACF,IAAIiG,EAAiBrI,IAAEJ,MAEvByI,EACKzE,SAAS,4BACTsB,SAELmD,EAAerG,OACXhC,IAAEM,EAAKd,OAAOiC,SAASQ,cAAc,QAChCH,SAAS,2BACTE,OACGsG,EACID,EACAhB,EAAahI,KAIhC,GAEZ,IAGL8I,EAAMxD,YAAY,yBAClB3E,IAAEJ,MAAMyB,SAASsD,YAAY,uBAC7B3E,IAAEJ,MAAMyB,SAASuC,SAAS,8BAA8BsB,SAGxDlF,IAAEJ,MAAMyB,SAASkH,yBACjB,IAAI/G,EAAQ2G,EAAMnH,KAAK,yBACnBQ,EAAMrB,OAAS,GACfqB,EAAMqC,KAAK,eAAe2E,SAI9BxI,IAAEJ,MAAMsF,QACX,GACJ,IAMD,IAAIuD,EAAgB,SAAU5I,GAE1B,IAA0E,IAAtEG,IAAEJ,MAAMqF,QAAQ,gBAAgBhF,SAAS,2BAK7CD,IAAE,2BAA4BM,EAAKd,OAAOiC,UAAUkD,YAChD,4BAK6C,IAA7C3E,IAAEJ,MAAMK,SAAS,0BAC8B,IAA/CD,IAAEJ,MAAMK,SAAS,4BAC+B,IAAhDD,IAAEJ,MAAMK,SAAS,4BACnB,CAEE,IAAIyI,EAAM1I,IAAEJ,MAAM+I,mBAAmB9I,GACjC+I,EAAU5I,IAAEJ,MAAMgE,SAAS,mBAAqB8E,GAGpD,GAAY,SAARA,GAA0B,UAARA,EAAiB,CACnC,IAAIpC,EAAMsC,EAAQvH,SAASA,SAASA,SAOpC,GANWiF,EAAI1C,SAAS,qBAAqBiF,QAAO,SAAC3I,EAAKwF,GAGtD,OAAuD,IAA/C1F,IAAE0F,GAAI1E,KAAK,yBAAyBb,MAC/C,IAEQA,QAAUH,IAAE,iBAAiB6D,KAAK,eAGvC,OAIAyC,EAAI1C,SAAS,qBAAqBzD,OAAS,GAC3CyI,EAAQE,OAAOxC,EAAIwC,SAAW,GAC9BF,EAAQ5C,IACJ,MACAM,EAAIP,SAASG,IAAM0C,EAAQvH,SAAS0E,SAASG,IAAM,KAGvD0C,EAAQE,OAAOF,EAAQvH,SAASyH,SAAW,GAC3CF,EAAQ5C,IAAI,OAAQ,GAE3B,CAGD4C,EAAQ9G,SAAS,0BACpB,CACJ,EAGD9B,IAAEM,EAAKd,OAAOiC,UACT0C,IAAI,YAAa,gBACjBC,GAAG,YAAa,eAAgBqE,GACrCzI,IAAEM,EAAKd,OAAOiC,UACT0C,IAAI,WAAY,gBAChBC,GAAG,WAAY,eAAgBqE,GAGpCzI,IAAEM,EAAKd,OAAOiC,UACT0C,IAAI,QAAS,gBACbC,GAAG,QAAS,gBAAgB,SAAUvE,GAC+B,IAA9DG,IAAE,0BAA2BM,EAAKd,OAAOiC,UAAUtB,QAEhDH,IAAEJ,MAAMiE,KAAK,gBACZ7D,IAAEJ,MAAMiE,KAAK,eAAe2E,QAGvC,IAmDLxI,IAAEM,EAAKd,OAAOiC,UAAU2C,GAAG,WAAY,oBAhCb,SAAUvE,GAEhC,IAAIwF,EAASrF,IAAEH,EAAEwF,QAEjB,GADUA,EAAOJ,QAAQ,gBACjBhF,SAAS,oBAAsBoF,EAAOpF,SAAS,mBAAoB,CAEvE,GAAID,IAAEqF,GAAQrE,KAAK,0BAA0Bb,OAAS,EAClD,OAIJ,IAAI4I,EAAiB,GACrB/I,IAAAA,KAAOqF,EAAO3D,KAAK,SAASsH,MAAM,MAAM,gBAEvBC,IAATrJ,MACS,oBAATA,MACS,yBAATA,MAEAmJ,EAAeG,KAAKtJ,KAE3B,IACD,IAAIuJ,EAAQnJ,IAAE,yDAAyDmD,IACnE4F,EAAelB,KAAK,MAEpBuB,EAAMpJ,IAAE,eACP8B,SAAS,yBACTE,OAAOhC,IAAE,4CACTgC,OAAOmH,GACZ9D,EAAOrD,OAAOoH,EACjB,CACJ,IAGDpJ,IAAEM,EAAKd,OAAOiC,UAAU2C,GAAG,SAlDN,SAAUvE,GACI,yBAA3BG,IAAEH,EAAEwF,QAAQ3D,KAAK,OAGrB1B,IAAAA,KAAOA,IAAE,8BAA8B,WACnC,IAAIqB,EAASrB,IAAEJ,MAAMyB,SACjBgI,EAAW,kBACXhI,EAAOpB,SAAS,0BAChBoJ,EAAW,wCAGfA,GAAY,IADErJ,IAAEJ,MAAMoB,KAAK,8BAA8BmC,MAEzD9B,EAAOK,KAAK,QAAS2H,GACrBrJ,IAAEJ,MAAMsF,QACX,GACJ,GAoCJ,G,+BAED,WACI,IAAI5E,EAAOV,KAEXU,EAAKgJ,oBACLhJ,EAAKiJ,cAKL,IAFA,IAAIC,EAAQlJ,EAAKd,OAAOqC,OAAO1B,OAEvBd,EAAE,EAAGA,EAAImK,EAAOnK,IAAK,CAEzB,IAAIoE,EAAMzD,IAAEM,EAAKd,OAAOqC,OAAOxC,IAU/B,GAPAoE,EAAIzC,KAAK,gBAAgBoB,KAAzB,YAA8B,2FACtBC,EAAO,IAAIC,EAAAA,EAAKhC,EAAKd,OAAQI,MADP,SAEpByC,EAAKE,aAFe,iDAI9BkB,EAAIzC,KAAK,gBAAgByI,gBACzBhG,EAAIiG,qBACJjG,EAAIG,SAAS,oBAAoB2E,yBAC7BlJ,IAAMmK,EAAQ,EAAG,CAEjB,IAAIrH,EAAQ,EACR4F,EAAQ,EACZzH,EAAKd,OAAOqC,OAAOO,MAAK,SAAUuH,GAC1B3J,IAAEJ,MAAMuC,QAAUA,IAClBA,EAAQnC,IAAEJ,MAAMuC,QAChB4F,EAAQ4B,EAEf,IAGD,IAAInI,EAAQlB,EAAKd,OAAOqC,OAAO+H,GAAG7B,GAAO/G,KAAK,sBAC1CQ,EAAMrB,OAAS,GACfqB,EAAMqC,KAAK,eAAe2E,QAEjC,CAED/E,EAAIzC,KAAK,yBAAyBoB,MAAK,WACnCpC,IAAEJ,MAAMiK,iCACR7J,IAAEJ,MAAM2I,yBACR,IAAIuB,EAAO9J,IAAEJ,MACb,CAAC,MAAO,UAAU6F,SAAQ,SAAUsE,EAAK7J,GACrC4J,EAAK9H,OACDhC,IAAEM,EAAKd,OAAOiC,SAASQ,cAAc,QAChCH,SAAS,iCAAmCiI,GAExD,GACJ,GACJ,CACJ,G,+BAED,WAEI,IAAIzJ,EAAOV,KACPoK,EAAa1J,EAAKd,OAAOiC,SAE7BzB,IAAAA,GAAAA,2BAAkC,WAE9B,OAAOJ,KAAKwC,MAAK,WAEbpC,IAAEJ,MAAMwE,GAAG,aAAa,WAEVpE,IAAEJ,MAAMqF,QAAQ,gBAGlBhF,SAAS,2BAEbD,IAAE,2BAA4BgK,GAAYrF,YACtC,2BAEJ3E,IAAEJ,MAAMgE,SAAS,OAAO9B,SAAS,2BAExC,GACJ,GACJ,EAQD9B,IAAAA,GAAAA,+BAAsC,WAElC,OAAOJ,KAAKwC,MAAK,WAEbpC,IAAEJ,MAAMqK,WAAU,SAAUpK,GAKxB,GAHUG,IAAEJ,MAAMqF,QAAQ,gBAGlBhF,SAAS,yBAA0B,CAEvCD,IAAE,2BAA4BgK,GAAYrF,YACtC,2BAIJ,IAAI+D,EAAM1I,IAAEJ,MAAM+I,mBAAmB9I,GACvBG,IAAEJ,MAAMgE,SAAS,mBAAqB8E,GAG5C5G,SAAS,0BACpB,CACJ,GACJ,GACJ,EAQD9B,IAAAA,GAAAA,mBAA0B,WAEtB,OAAOJ,KAAKwC,MAAK,WAEbpC,IAAEJ,MACGoB,KAAK,+CACLoB,MAAK,WACFpC,IAAEJ,MAAMsK,OACJlK,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,oCACTE,OACGhC,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,wBACTE,OACGhC,IAAEgK,EAAW/H,cAAc,QAAQD,OAC/BhC,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,+BAI7BqI,8BAE0C,IAA/CnK,IAAEJ,MAAMwK,QAAQ,oBAAoBjK,QACpCH,IAAEJ,MAAMyK,MACJrK,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,oCACTE,OACGhC,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,wBACTE,OACGhC,IAAEgK,EAAW/H,cAAc,QAAQD,OAC/BhC,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,+BAI7BqI,6BAGhB,IAEsE,IAAvEnK,IAAEJ,MAAMoB,KAAK,+CAA+Cb,QAC5DH,IAAEJ,MAAMoC,OACJhC,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,oCACTE,OACGhC,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,wBACTE,OACGhC,IAAEgK,EAAW/H,cAAc,QAAQD,OAC/BhC,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,+BAI7BqI,6BAGhB,GACJ,EAQDnK,IAAAA,GAAAA,cAAqB,WAEjB,OAAOJ,KAAKwC,MAAK,WACb,IAAIC,EAAOrC,IAAEJ,MAET0K,EAAW,SAAUC,GACrB,IAAIrI,EAASlC,IAAE,sBAAuBgK,GAClCjE,EAAS7D,EAAO+C,QAAQ,gBAAgBc,SACzCA,IACC7D,EAAO8D,IAAI,MAAOuE,EAAMtE,MAAQ,EAAIF,EAAOG,KAC3ChE,EAAO8D,IAAI,OAAQuE,EAAMpE,MAAQ,EAAIJ,EAAOK,MAEnD,EAEGoE,EAAW,SAAXA,IACA,IAAItI,EAASlC,IAAE,sBAAuBgK,GACtChK,IAAEgK,GACG7F,IAAI,YAAamG,GACjBnG,IAAI,UAAWqG,GAGpBtI,EAAOsD,sBACPtD,EAAOgD,QACV,EAED,OAAO7C,EAAKD,MAAK,WACbC,EAAKrB,KAAK,0BACLmD,IAAI,aACJC,GAAG,aAAa,SAAUmG,GACvB,IAAIE,EAAQF,EAAMpE,MACduE,EAAQH,EAAMtE,MACd0E,EAAgB,SAAhBA,EAA0BJ,GAC1B,GACI5D,KAAKiE,IACDjE,KAAKM,IAAIwD,EAAQF,EAAMpE,OACvBQ,KAAKM,IAAIyD,EAAQH,EAAMtE,SACtB,EACP,CAEE3F,EAAKd,OAAOqC,OAAOC,SAAS,yBAC5B9B,IAAE,wBAAyBgK,GACtBrF,YAAY,wBACZf,SAAS,wBACToB,QAAQ,QAEb,IAAI6F,EAAe7K,IAAEuK,EAAMlF,QAAQJ,QAAQ,gBAC3C4F,EAAa/I,SAAS,wBAEtB,IAAIgJ,EAAQD,EAAaC,OAAM,GAC/BA,EAAM9E,IAAI,CACF,MAAS6E,EAAa1I,QACtB,aAAc,MACd,SAAY,WACZ,QAAW,KAEdL,SAAS,sBACd+I,EAAa5F,QAAQ,gBAAgBjD,OAAO8I,GAE5C9K,IAAEgK,GAAY5F,GAAG,YAAakG,GAC9BtK,IAAEgK,GAAY5F,GAAG,UAAWoG,GAC5BxK,IAAEgK,GAAY7F,IAAI,YAAawG,EAClC,CACJ,EACD3K,IAAEgK,GAAY5F,GAAG,YAAauG,GAC9B3K,IAAEgK,GAAY5F,GAAG,WAAW,WACxBpE,IAAEgK,GAAY7F,IAAI,YAAawG,EAClC,GACJ,GACR,GACJ,GACJ,EAQD3K,IAAAA,GAAAA,oBAA2B,WAEvB,IAAIyD,EAAMzD,IAAEJ,MAAMqF,QAAQ,gBAG1B3E,EAAKd,OAAOqC,OAAO8C,YACf,mDAOJ,IAHA,IAAIiE,EAAU5I,IAAE,2BAA4BgK,GACxCe,EAAOnC,EAAQvH,SACfqH,EAAM,GACV,MAAkB,CAAC,MAAO,SAAU,OAAQ,SAA5C,eAAsD,CAAlD,IAAMsC,EAAI,KACNpC,EAAQ3I,SAAS,kBAAoB+K,KACrCtC,EAAMsC,EAEb,CACDpC,EAAQjE,YAAY,2BAGpB,IAAIY,EAAWvF,IAAE,0BAA2BgK,GAAY7J,OAAS,EAG7D8K,GAFAlG,EAAgB/E,IAAE,wBAAyBgK,IAEdtF,QAAQ,qBAGlB,IAAnBkE,EAAQzI,QAAgB4K,EAAK9K,SAAS,wBACtC8E,EAAcjD,SAAS,sBAG3B,IAAMoJ,EAAgB,SAACC,GACnBA,EAAGxG,YAAY,sBACfwG,EAAGxG,YAAY,iHACfwG,EAAGnF,IAAI,CAAE7D,MAAO,GAAIiE,KAAM,GAAIF,IAAK,KAC/BX,GACA4F,EAAGrJ,SAAS,kBAEnB,EAED,GAEIiD,EAAc9E,SAAS,wBAGW,IAAjC8K,EAAK9K,SAAS,iBAC4B,IAA1C8K,EAAK9K,SAAS,0BACwB,IAAtC8K,EAAK9K,SAAS,qBAGd8K,EAAK1J,SAASA,SAASuC,SAAS,qBAAqBzD,QACrDsD,EAAII,KAAK,iBACA,SAAR6E,GAA0B,UAARA,GAEpBwC,EAAcnG,QAGX,GAAIgG,EAAK9K,SAAS,oBAErB8K,EAAKpG,YAAY,oBACZjD,KACG,QACAqD,EAAcE,QAAQ,oBAAoBmD,QAAQ1G,KAAK,UAE1DyC,IAAI,aAGT4G,EAAKnH,SAAS,qBAAqBA,SAAS,OAAOsB,SAEnDgG,EAAcnG,GAGdgG,EAAKnH,SAAS,qBAAqB5B,OAAO+C,OAGvC,CAKH,GAFAmG,EAAcnG,GAEVtB,EAAIxD,SAAS,mBAgBb,IAfA,IAAI8E,EAAgB/E,IAAEgK,EAAW/H,cAAc,QAC1CH,SAAS,wCACTE,OACGhC,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,wBACTE,OACGhC,IAAEgK,EAAW/H,cAAc,QAAQD,OAC/BhC,IAAEgK,EAAW/H,cAAc,QAAQH,SAC/B,mCAIXE,OAAO+C,IAEf8E,iCACL,MAAiB,CAAC,MAAO,UAAzB,eAAoC,CAAhC,IAAME,EAAG,KACThF,EAAc/C,OACVhC,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,iCAAmCiI,GAExD,CAIL,GAAY,QAARrB,EAEAqC,EAAKb,OAAOnF,QAGT,GAAY,WAAR2D,EAEPqC,EAAKV,MAAMtF,QAGR,GAAY,SAAR2D,GAA0B,UAARA,EAAiB,CAC1C,IAAI0C,EAAOL,EAAK1J,SACZgK,EAAOD,EAAK/J,SAIhB,GAA+B,IAHTgK,EAAKzH,SAAS,qBAAqBzD,OAGrCA,OAAc,CAE9B,IAAImL,EAAYP,EAAKQ,UACjBD,EAAUnL,OAAS,IACnBkL,EAAKnB,OACDlK,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,mBACTE,OACGhC,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,wBACTE,OACGhC,IAAEsL,EAAUvJ,MAAMyJ,WACbV,OAAM,GACNrB,mBAIzB6B,EAAUpG,UAId,IAAIuG,EAAYV,EAAKX,UACjBqB,EAAUtL,OAAS,IACnBkL,EAAKhB,MACDrK,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,mBACTE,OACGhC,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,wBACTE,OAAOyJ,EAAUX,OAAM,GAAMrB,mBAG9CgC,EAAUvG,UAIdkG,EAAKzG,YAAYrE,EAAKR,OAAOL,aAAaoI,KAAK,MAC1C/F,SAAS,OAGF,SAAR4G,EACAqC,EAAK1J,SAAS6I,OACVlK,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,wBACTE,OAAO+C,IAGhBgG,EAAK1J,SAASgJ,MACVrK,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,wBACTE,OAAO+C,IAKpBsG,EAAK9C,wBAGR,KAGe,SAARG,EACA0C,EAAKlB,OACDlK,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,oBACTE,OAAO+C,IAGhBqG,EAAKf,MACDrK,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,oBACTE,OAAO+C,IAKpBsG,EAAKK,uBAGLL,EAAK9C,wBAEZ,CACJ,CAGDjI,EAAKd,OAAOqC,OAAOb,KAAK,4CAA4CkE,SACpE5E,EAAKd,OAAOqC,OAAOb,KAAK,qBAAqBkE,SAG7C+F,EAAa/C,mBAGb5H,EAAKd,OAAOqC,OAAO6H,qBAGfnE,GAAYR,EAAc5E,OAAS,IACnC4E,EAAc0E,gBACd1E,EAAclB,KAAK,eAAe8H,oBAClC5G,EAAclB,KAAK,eAAevC,QAEzC,EAQDtB,IAAAA,GAAAA,qBAA4B,WAExB,OAAOJ,KAAKwC,MAAK,WAEb,IAAIiF,EAAe,GACfuE,EAAa5L,IAAEJ,MAAMgE,SAAS,qBAC9BiI,EAAgBD,EAAWzL,OAC3B2H,EAAoBxH,EAAKR,OAAOL,aAAaoI,KAAK,KAItD+D,EACKxJ,MAAK,SAAUlC,GACZF,IAAEJ,MAAM+E,YAAYmD,GAKpB,IAHA,IAAIN,EAAWb,KAAKmF,MAAM,GAAKD,GAC3BE,EAAgB,GAAKvE,GAAYqE,EAAgB,GAE5ClC,EAAI,EAAGA,EAAIkC,EAAelC,IAC3BA,IAAMkC,EAAgB,IACtBrE,EAAWuE,GAEX7L,IAAQyJ,IACRtC,EAAa6B,KAAK1B,GAClBxH,IAAEJ,MAAMkC,SAAS,OAG5B,IAEL9B,IAAEJ,MAAMiE,KAAK,eAAgBwD,EAChC,GACJ,EAQDrH,IAAAA,GAAAA,uBAA8B,WAE1B,OAAOJ,KAAKwC,MAAK,WAEbpC,IAAEJ,MAAMgE,SAAS,yBAAyBsB,SAG1C,IAAI8G,EAAahM,IAAEJ,MAAMgE,SAAS,qBAC9BiI,EAAgBG,EAAW7L,OAE/B,GAAI0L,GAAiB,GAAI,CAKrB,IAJA,IAAIxE,EAAe,GACf4E,EAAa,EACbC,EAAU,EAEL7M,EAAI,EAAGA,EAAIwM,EAAexM,IAAK,CACpC,IAAImI,EAAW2E,EACX7L,EAAK8L,cAAcJ,EAAW3M,KAElCgI,EAAa6B,KAAK1B,GAClB0E,GAAoB1E,EACH,IAAbA,IACAyE,GAA0B,EAEjC,CAED,IAAII,EAAW,EACXJ,IACAI,GAAY,GAAKH,GAAWD,GAGhC,IAAIK,EAAkB,EACtB9E,EAAW,EAEX,IAAK,IAAInI,EAAI,EAAGA,EAAIwM,EAAexM,IAE/BiN,GADA9E,EAAWH,EAAahI,GAAKgI,EAAahI,GAAKgN,EAG/CrM,IAAEJ,MAAMoC,OACJhC,IAAEgK,EAAW/H,cAAc,QACtBH,SACG,oDAA8CzC,EAAI,GAAlD,yBACoBiN,IAEvBzI,KAAK,sBAAuBxE,IAIrCW,IAAEgM,EAAW3M,IAAIwE,KAAK,WAAY2D,EAEzC,CAGDxH,IAAEJ,MACGgE,SAAS,yBACTO,IAAI,aACJC,GAAG,aAAa,WACb,IAAImI,EAAWvM,IAAEJ,MAAMyB,SACnBmL,EAA0BD,EAAS3I,SAAS,qBAC5CiI,EAAgBW,EAAwBrM,OAE5C,KAAG0L,EAAgB,IAAnB,CAGA,IAAInE,EAAe,EACfL,EAAe,GAEnBmF,EAAwBpK,MAAK,SAAU2F,GACnC,IAAIP,EAAWxH,IAAEJ,MAAMiE,KAAK,YAC5BwD,EAAa6B,KAAK1B,GAElB,IAAIiF,EAAczM,IAAEgK,EAAW/H,cAAc,QACxCH,SADa,wCAEuB0F,EAFvB,0BAEiDE,IAE9D1F,OACGhC,IAAEgK,EAAW/H,cAAc,QACtBH,SACG,0CAEHE,OACGhC,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,QACTb,KAAKuG,KAK1B+E,EAASvK,OAAOyK,GAGhB/E,GAAgBF,CACnB,IAGD,IAAIjB,EAAsBjG,EAAKoM,uBAAuB9M,MAsBtD,OAnBA2M,EACKvK,OACGhC,IAAEgK,EAAW/H,cAAc,QACtBH,SAAS,oDACTA,SAFL,wBAE+BuF,EAAad,KACvC1C,KAAK,YAAa0I,EAASpK,SAC3B0B,KAAK,gBAAiBgI,GACtBhI,KAAK,eAAgBwD,GACrBxD,KAAK,sBAAuB0C,IAIzCvG,IAAEJ,MAAMqF,QAAQ,gBAAgBnD,SAAS,yBACzCyK,EAASzK,SAAS,uBAClB9B,IAAE,wBAAyBgK,GACtBpG,SAAS,wBACToB,QAAQ,SAGN,CAtDN,CAuDJ,GACR,GACJ,EAQDhF,IAAAA,GAAAA,iBAAwB,WAEpB,OAAOJ,KAAKwC,MAAK,WAEb,IAAI6I,EAAejL,IAAEJ,MAarB,GAVAqL,EAAarH,SAAS,qBAAqBxB,MAAK,WACV,IAA9BpC,IAAEJ,MAAMgE,WAAWzD,SACnBH,IAAEJ,MAAMsF,SAGR+F,EAAaS,uBAEpB,IAGgD,IAA7CT,EAAajK,KAAK,gBAAgBb,OAAc,CAChD,IAAIwM,EAAU1B,EAGd,GAAIA,EAAab,QAAQ,oBAAoBjK,OAAS,EAClD8K,EAAeA,EAAa2B,KAAK,wBAG9B,MAAI3B,EAAaM,QAAQ,oBAAoBpL,OAAS,GAMzD,YADA8K,EAAa/F,SAJb+F,EAAeA,EAAa4B,KAAK,mBAMpC,CAGDF,EAAQzH,QACX,CAGD+F,EAAa1C,wBAChB,GACJ,EASDvI,IAAAA,GAAAA,mBAA0B,SAAUH,GAEhC,IAAIsC,EAAQsE,WAAWzG,IAAEJ,MAAMuC,SAC3B2G,EAASrC,WAAWzG,IAAEJ,MAAMkJ,UAC5BgE,EAAIrG,WAAW5G,EAAEsG,MAAQnG,IAAEJ,MAAMmG,SAASK,KAAOjE,EAAQ,GACzD4K,EAAItG,WAAW5G,EAAEoG,MAAQjG,IAAEJ,MAAMmG,SAASG,IAAM4C,EAAS,GACzDkE,EAAY7K,EAAQ,EACpB8K,EAAanE,EAAS,EAG1B,OAAIgE,EAAI,EAEAC,EAAI,EACAD,EAAIC,GAAM,EAAIC,IAAe,EAAIC,GAC1B,MAEA,OAIPH,EAAIC,GAAM,EAAIC,EAAaC,EACpB,OAEA,SAOXF,EAAI,EACAD,EAAIC,EAAK,EAAIC,IAAe,EAAIC,GACzB,QAEA,MAIPH,EAAIC,EAAIC,EAAYC,EACb,SAEA,OAItB,CACJ,I,mFApgDgB1N,GAwgDjB+I,EAAiB,SAAUD,EAAgB6E,GAC3C,IAAIC,EAAQ1L,SAASQ,cAAc,KAC/BmL,OAA2B,IAATF,EAAuB,GAAK,KAAOA,EAAO,IAkBhE,OAjBAC,EAAME,KAAO,cACbF,EAAMG,YAAc,QAAUF,EAC9BpN,IAAEmN,GAAO/I,GAAG,QAAS,CAAEsB,GAAI2C,IAAkB,SAAUxI,GACnDA,EAAE0N,iBAEF1N,EAAEgE,KAAK6B,GACFrE,SACAA,SACAsD,YACG,8EAEH7C,SAAS,OAEdjC,EAAEgE,KAAK6B,GAAGrE,SAASA,SAASA,SAASkH,yBAErCvI,IAAEH,EAAEwF,QAAQhE,SAAS6D,QACxB,IACMiI,CACV,EAQD,SAASpG,IAQL,IAPA,IAGII,EAAe,GAEfqG,EALM,EAOHA,EADCC,IAEJtG,EAAa+B,KAAKvC,KAAKC,MAAO4G,GAJvB,oBAOX,OAAOrG,CACV,CASD,SAASc,EAAuBT,GAC5B,OAAIA,EACO,OAASA,EAIb,KACV,CASD,SAAS2E,EAAqBuB,EAAWC,GAErC,OADAA,EAASA,GAAU,OACZC,SAASF,EAAU/L,QAAQgM,EAAQ,MAAQ,CACrD,C","sources":["webpack://plone-mosaic/./resources/js/mosaic.layout.js"],"sourcesContent":["// This plugin is used to create a mosaic layout.\nimport \"regenerator-runtime/runtime\"; // needed for ``await`` support\nimport $ from \"jquery\";\nimport logging from \"@patternslib/patternslib/src/core/logging\";\nimport Tile from \"./mosaic.tile\";\nimport \"./mosaic.overlay\";\n\nconst log = logging.getLogger(\"pat-mosaic/layout\");\n\nexport default class LayoutManager {\n\n    constructor(mosaic) {\n        this.mosaic = mosaic;\n    }\n\n    layout = {\n        widthClasses: [\n            \"col\",\n            \"col-1\",\n            \"col-2\",\n            \"col-3\",\n            \"col-4\",\n            \"col-5\",\n            \"col-6\",\n            \"col-7\",\n            \"col-8\",\n            \"col-9\",\n            \"col-10\",\n            \"col-11\",\n            \"col-12\",\n        ],\n        resizeClasses: [\n            \"mosaic-resize-1\",\n            \"mosaic-resize-2\",\n            \"mosaic-resize-3\",\n            \"mosaic-resize-4\",\n            \"mosaic-resize-5\",\n            \"mosaic-resize-6\",\n            \"mosaic-resize-7\",\n            \"mosaic-resize-8\",\n            \"mosaic-resize-9\",\n            \"mosaic-resize-10\",\n            \"mosaic-resize-11\",\n            \"mosaic-resize-12\",\n        ],\n        resizeHandleClasses: [\n            \"mosaic-resize-handle-1\",\n            \"mosaic-resize-handle-2\",\n            \"mosaic-resize-handle-3\",\n            \"mosaic-resize-handle-4\",\n            \"mosaic-resize-handle-5\",\n            \"mosaic-resize-handle-6\",\n            \"mosaic-resize-handle-7\",\n            \"mosaic-resize-handle-8\",\n            \"mosaic-resize-handle-9\",\n            \"mosaic-resize-handle-10\",\n            \"mosaic-resize-handle-11\",\n            \"mosaic-resize-handle-12\",\n        ],\n    }\n\n    /* css helpers */\n    getWidthClass(e) {\n        for (const cls of this.layout.widthClasses) {\n            if ($(e).hasClass(cls)) {\n                return cls;\n            }\n        }\n        // Fallback\n        return this.layout.widthClasses[0];\n    }\n\n    getResizeHandleClassId(e) {\n        // Loop through resize handle classes\n        for (let idx=0; idx <  this.layout.resizeHandleClasses.length; idx++) {\n            if ($(e).hasClass(this.layout.resizeHandleClasses[idx])) {\n                return idx;\n            }\n        }\n        // Fallback\n        return 1;\n    };\n\n    addAppTile(type, url /*, id */) {\n        var self = this;\n        // Close overlay\n        if (self.mosaic.overlay.modal.$modal) {\n            self.mosaic.overlay.modal.hide();\n        }\n\n        // Get value\n        $.ajax({\n            type: \"GET\",\n            url: url,\n            success: async function (value) {\n                // Get dom tree\n                value = self.mosaic.getDomTreeFromHtml(value);\n\n                // Add head tags\n                self.mosaic.addHeadTags(url, value);\n\n                // Add tile\n                await self.addTile(type, value.find(\".temp_body_tag\").html(), url);\n            },\n        });\n    }\n\n    async addAppTileHTML(type, response, url) {\n        var value;\n        var self = this;\n\n        value = self.mosaic.getDomTreeFromHtml(response);\n        self.mosaic.addHeadTags(url, value);\n        await self.addTile(type, value.find(\".temp_body_tag\").html(), url);\n    }\n\n    editAppTile(url) {\n        var self = this;\n        // Close overlay\n        self.mosaic.overlay.close();\n\n        // Focus on current window\n        window.parent.focus();\n\n        // Get new value\n        $.ajax({\n            type: \"GET\",\n            url: url,\n            success: function (value) {\n                // Get dom tree\n                value = self.mosaic.getDomTreeFromHtml(value);\n\n                // Remove head tags\n                self.mosaic.removeHeadTags(url);\n\n                // Add head tags\n                self.mosaic.addHeadTags(url, value);\n\n                // Update tile\n                var $tile = $(\n                    \".mosaic-selected-tile .mosaic-tile-content\",\n                    self.mosaic.document\n                );\n                $tile.html(value.find(\".temp_body_tag\").html()); // jshint ignore:line\n                $tile.attr(\"data-tileUrl\", url.replace(/&/gim, \"&amp;\"));\n            },\n        });\n    }\n\n    async addTile(type, value, tileUrl) {\n        var self = this;\n        // Set dragging state\n        self.mosaic.panels.addClass(\"mosaic-panel-dragging mosaic-panel-dragging-new\");\n\n        // Add helper\n        $(self.mosaic.panels.get(0)).append(\n            $(self.mosaic.document.createElement(\"div\"))\n                .addClass(\"mosaic-grid-row\")\n                .append(\n                    $(self.mosaic.document.createElement(\"div\"))\n                        .addClass(\"mosaic-grid-cell col\")\n                        .append(\n                            $(self.mosaic.document.createElement(\"div\"))\n                                .addClass(\n                                    \"movable removable mosaic-tile mosaic-\" + type + \"-tile\"\n                                )\n                                .append(\n                                    $(self.mosaic.document.createElement(\"div\"))\n                                        .addClass(\"mosaic-tile-content\")\n                                        .attr(\n                                            \"data-tileUrl\",\n                                            tileUrl && tileUrl.replace(/&/gim, \"&amp;\")\n                                        )\n                                        .html(value)\n                                )\n                                .addClass(\n                                    \"mosaic-helper-tile mosaic-helper-tile-new mosaic-original-tile\"\n                                )\n                        )\n                )\n        );\n\n        // Set helper min size\n        var helper = self.mosaic.panels.find(\".mosaic-helper-tile-new\");\n\n        // Get max width\n        var width = 0;\n        self.mosaic.panels.each(function () {\n            if ($(this).width() > width) {\n                width = $(this).width();\n            }\n        });\n\n        // Set width\n        if (helper.width() < width / 4) {\n            helper.width(width / 4);\n        } else {\n            helper.width(helper.width());\n        }\n\n        var tile = new Tile(self.mosaic, helper);\n        await tile.initialize();\n        tile.cacheHtml();\n        tile.scanRegistry();\n    }\n\n    getDefaultValue(tile_config) {\n        var self = this;\n        var start, end;\n\n        // Wrap title and description fields for proper styles\n        if (tile_config.name === \"IDublinCore-title\") {\n            start = '<h1 class=\"documentFirstHeading\">';\n            end = \"</h1>\";\n        } else if (tile_config.name === \"IDublinCore-description\") {\n            start = '<p class=\"documentDescription\">';\n            end = \"</p>\";\n        } else {\n            start = \"<div>\";\n            end = \"</div>\";\n        }\n\n        switch (tile_config.tile_type) {\n            case \"field\":\n                switch (tile_config.widget) {\n                    case \"z3c.form.browser.text.TextWidget\":\n                    case \"z3c.form.browser.text.TextFieldWidget\":\n                        var textval = $(\"#\" + tile_config.id, self.mosaic.document)\n                            .find(\"input\")\n                            .attr(\"value\");\n                        return `${start}${textval}${end}`;\n                    case \"z3c.form.browser.textarea.TextAreaWidget\":\n                    case \"z3c.form.browser.textarea.TextAreaFieldWidget\":\n                    case \"z3c.form.browser.textlines.TextLinesWidget\":\n                    case \"z3c.form.browser.textlines.TextLinesFieldWidget\":\n                        var lines = $(\"#\" + tile_config.id, self.mosaic.document)\n                            .find(\"textarea\")\n                            .val()\n                            .replace('\\\\n', \"<br/>\");\n                        return `${start}${lines}${end}`;\n                    case \"plone.app.z3cform.widget.RichTextFieldWidget\":\n                    case \"plone.app.z3cform.wysiwyg.widget.WysiwygWidget\":\n                    case \"plone.app.z3cform.wysiwyg.widget.WysiwygFieldWidget\":\n                    case \"plone.app.widgets.dx.RichTextWidget\":\n                        return $(\"#\" + tile_config.id).find(\"textarea\").val()\n                    default:\n                        return (\n                            '<div class=\"discreet\">Placeholder for field:<br/><b>' +\n                            tile_config.label +\n                            \"</b></div>\"\n                        );\n                }\n            default:\n                return tile_config.default_value;\n        }\n    }\n\n    getPageContent(exportLayout) {\n        var self = this;\n\n        var getLayoutRow = function (obj) {\n            var body = \"\";\n\n            // Check if not an empty row\n            if ($(obj).hasClass(\"mosaic-empty-row\") === false &&\n                $(obj).find(\".mosaic-tile\").length >= 0) {\n                // Add row open tag\n                classNames = $(obj).attr(\"class\");\n                body += '      <div class=\"' + classNames + '\">\\n';\n\n                // Loop through rows\n                $(obj)\n                    .children(\".mosaic-grid-cell\")\n                    .each(function () {\n                        // Add cell start tag\n                        body += '        <div class=\"' + $(this).attr(\"class\") + '\">\\n'; // jshint ignore:line\n\n                        $(this)\n                            .children()\n                            .each(function () {\n                                if ($(this).hasClass(\"mosaic-tile\")) {\n                                    body += $(this).data(\"mosaic-tile\").getHtmlBody(exportLayout);\n                                } else if ($(this).hasClass(\"mosaic-innergrid-row\")) {\n                                    body += getLayoutRow(this);\n                                }\n                            });\n\n                        // Add cell end tag\n                        body += \"        </div>\\n\";\n                    });\n\n                // Add row close tag\n                body += \"      </div>\\n\";\n            }\n            return body;\n        };\n\n        // Content\n        var content, position = 1, size = 12, body = \"\", classNames = \"\";\n\n        // Add body tag\n        body += \"  <body>\\n\";\n\n        // Loop through panels\n        $(\"[data-panel]\", self.mosaic.document).each(function () {\n            // Add open panel tag\n            body += '    <div data-panel=\"' + $(this).data(\"panel\") + '\"';\n            body += '         data-max-columns=\"' + $(this).data(\"max-columns\") + '\">\\n';\n\n            $(this)\n                .children()\n                .each(function () {\n                    if ($(this).hasClass(\"mosaic-grid-row\")) {\n                        body += getLayoutRow(this);\n                    }\n                });\n\n            // Add close panel tag\n            body += \"    </div>\\n\";\n        });\n\n        // Add close tag\n        body += \"  </body>\\n\";\n\n        content =\n            '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\" data-layout=\"' +\n            self.mosaic.options.layout +\n            '\">\\n'; // jshint ignore:line\n        content += body;\n        content += \"</html>\\n\";\n        return content;\n    }\n\n    saveLayoutToForm() {\n        var self = this;\n        var $customLayout = $(\n            \"#form-widgets-ILayoutAware-customContentLayout, \" +\n            \"[name='form.widgets.ILayoutAware.customContentLayout']\"\n        );\n\n        if (self.mosaic.hasContentLayout) {\n            $customLayout.val(\"\");\n        } else {\n            $customLayout.val(self.getPageContent());\n        }\n    }\n\n    init_events() {\n        var self = this;\n        var DocumentKeyup = function (e) {\n            // Check if alt\n            if (e.keyCode === 18) {\n                var date = new Date();\n                var enabled = $(\".mosaic-panel\", self.mosaic.document).data(\"advanced-enabled\");\n                var elapsed = date.getTime() - enabled;\n                if (elapsed > 400) {\n                    $(\".mosaic-panel\", self.mosaic.document).removeClass(\"mosaic-advanced\");\n                }\n            }\n            // Check if ctrl\n            if (e.keyCode === 17) {\n                $(\".mosaic-panel\", self.mosaic.document).removeClass(\"inner-subcolumn\");\n            }\n        };\n\n        // Keydown handler\n        var DocumentKeydown = function (e) {\n            // Tab key\n            if (e.keyCode === 9) {\n                // blur all active tiles. and set focus\n                for(const tile of self.mosaic.document.querySelectorAll(\".mosaic-selected-tile\")) {\n                    tile[\"mosaic-tile\"].blur();\n                }\n                // focus new tile\n                var focused_tile = document.activeElement.closest(\".mosaic-tile\");\n                if(focused_tile) {\n                    focused_tile[\"mosaic-tile\"].focus();\n                }\n            }\n            // Check if alt\n            if (e.keyCode === 18) {\n                if ($(\".mosaic-panel\", self.mosaic.document).hasClass(\"mosaic-advanced\")) {\n                    $(\".mosaic-panel\", self.mosaic.document).removeClass(\"mosaic-advanced\");\n                } else {\n                    var date = new Date();\n                    $(\".mosaic-panel\", self.mosaic.document).addClass(\"mosaic-advanced\");\n                    $(\".mosaic-panel\", self.mosaic.document).data(\n                        \"advanced-enabled\",\n                        date.getTime()\n                    );\n                }\n            }\n            // Check if ctrl\n            if (e.keyCode === 17) {\n                $(\".mosaic-panel\", self.mosaic.document).addClass(\"inner-subcolumn\");\n            }\n\n            // Check if esc\n            if (e.keyCode === 27) {\n                // Check if dragging\n                var original_tile = $(\".mosaic-original-tile\", self.mosaic.document);\n                if (original_tile.length > 0) {\n                    original_tile.each(function () {\n                        $(this).addClass(\"mosaic-drag-cancel\");\n                        if ($(this).hasClass(\"mosaic-helper-tile-new\")) {\n                            $(document).trigger(\"mousedown\");\n                        } else {\n                            $(document).trigger(\"mouseup\");\n                        }\n                    });\n                // Deselect tile\n                } else {\n                    $(\".mosaic-selected-tile\", self.mosaic.document).each(function () {\n                        $(this).trigger(\"blur\");\n                    });\n                }\n\n                // Find resize helper\n                $(\".mosaic-resize-handle-helper\", self.mosaic.document).each(function () {\n                    // Remove resizing state\n                    $(this).parents(\"[data-panel]\").removeClass(\"mosaic-panel-resizing\");\n                    $(this).parent().removeClass(\"mosaic-row-resizing\");\n                    $(this).parent().children(\".mosaic-resize-placeholder\").remove();\n\n                    // Remove helper\n                    $(this).remove();\n                });\n\n                // Hide overlay\n                if (self.mosaic.overlay.modal.$modal) {\n                    self.mosaic.overlay.modal.hide();\n                }\n            }\n        };\n\n        // Bind event and add to array\n        $(self.mosaic.document).off(\"keydown\").on(\"keydown\", DocumentKeydown);\n        $(self.mosaic.document).off(\"keyup\").on(\"keyup\", DocumentKeyup);\n\n        // Add deselect\n        var DocumentMousedown = function (e) {\n            // Get element\n            var elm;\n            if (e.target) {\n                elm = e.target;\n            } else if (e.srcElement) {\n                elm = e.srcElement;\n            }\n\n            // Find resize helper\n            var new_tile = $(\".mosaic-helper-tile-new\", self.mosaic.document);\n            if (new_tile.length > 0) {\n                new_tile.each(function () {\n                    // Handle drag end\n                    $(this).mosaicHandleDragEnd();\n                });\n            }\n\n            // If clicked inside TinyMCE or Modal exit\n            if ($(elm).parents(\".mce-content-body, .tox, .modal-wrapper\").length > 0) {\n                return;\n            }\n\n            // If clicked outside a tile\n            if ($(elm).parents(\".mosaic-tile\").length === 0) {\n                // Check if outside toolbar\n                if ($(elm).parents(\".mosaic-toolbar\").length === 0) {\n                    // Deselect tiles\n                    self.mosaic.document.querySelectorAll(\".mosaic-selected-tile\").forEach(function(el) {\n                        el.classList.remove(\"mosaic-selected-tile\");\n                        $(el).data(\"mosaic-tile\").blur();\n                    });\n\n                    // Set actions\n                    self.mosaic.toolbar.SelectedTileChange();\n                }\n            }\n        };\n\n        // Bind event and add to array\n        $(self.mosaic.document)\n            .off(\"mousedown\")\n            .on(\"mousedown\", DocumentMousedown);\n\n        // Handle mouse move event: when holding down mouse left button and dragging the handler left or right.\n        var DocumentMousemove = function (e) {\n\n            // Find resize helper\n            $(\".mosaic-helper-tile-new\", self.mosaic.document).each(function () {\n                // Get offset\n                var offset = $(this).parent().offset();\n\n                // Get mouse x\n                $(this).css(\"top\", e.pageY + 3 - offset.top);\n                $(this).css(\"left\", e.pageX + 3 - offset.left);\n            });\n\n            // Find resize helper - there is actually only one\n            $(\".mosaic-resize-handle-helper\", self.mosaic.document).each(function () {\n\n                var cur_snap_offset;\n\n                // Get helper\n                var helper = $(this);\n\n                // Get row\n                var row = helper.parent();\n                var resize_handle_index = helper.data(\"resize_handle_index\");\n\n                // Get mouse x\n                var mouse_x = parseFloat(e.pageX - row.offset().left - 4);\n\n                // Get mouse percentage\n                var mouse_percentage = Math.round(\n                    (mouse_x / helper.data(\"row_width\")) * 100\n                );\n\n                // Get closest snap location\n                var snap = 8;\n                var snap_offset = 8;\n\n                var grid_percent = GetGridPercentList();\n\n                grid_percent.forEach(function (perc) {\n                    cur_snap_offset = Math.abs(perc - mouse_percentage);\n                    if (cur_snap_offset < snap_offset) {\n                        snap = perc;\n                        snap_offset = cur_snap_offset;\n                    }\n                });\n\n                var snap_size = GetBootstrapColByPercent(snap);\n\n                var column_sizes = helper.data(\"column_sizes\");\n                var col_size_before = 0;\n                var col_size_after = 0;\n                for (var i = 0; i < column_sizes.length; i++) {\n                    if (i < resize_handle_index) {\n                        col_size_before += column_sizes[i] ? column_sizes[i] : 2;\n                    }\n                    if (i > resize_handle_index) {\n                        col_size_after += column_sizes[i] ? column_sizes[i] : 2;\n                    }\n                }\n                var col_size = snap_size - col_size_before;\n                var col_size_max = 12 - col_size_before - col_size_after;\n                // col_size should not be larger than max size and not less than 1\n                col_size =\n                    col_size > col_size_max ? col_size_max : col_size < 1 ? 1 : col_size;\n\n                if (helper.data(\"nr_of_columns\") > 0) {\n                    var col_size_sum = 0;\n                    var set_resize_handler = false;\n                    var resize_css_classes = self.layout.resizeClasses.join(\" \");\n                    var width_css_classes = self.layout.widthClasses.join(\" \");\n\n                    // Loop through columns\n                    row.children(\".mosaic-resize-placeholder\").each(function (index) {\n                        if (index === resize_handle_index) {\n                            // set new col_size for index\n                            column_sizes[index] = col_size;\n                            var col_size_class = GetWidthClassByColSize(col_size);\n                            $(this)\n                                .removeClass(width_css_classes)\n                                .addClass(col_size_class)\n                                .find(\".info\")\n                                .html(col_size);\n                            set_resize_handler = true;\n                        }\n\n                        // move other resize placeholders accordingly\n                        $(this)\n                            .removeClass(resize_css_classes)\n                            .addClass(`mosaic-resize-${col_size_sum}`);\n\n                        col_size_sum += column_sizes[index];\n\n                        if(set_resize_handler) {\n                            // trick to move handle helper too\n                            $(\".mosaic-resize-handle-helper\", row)\n                                .removeClass(resize_css_classes)\n                                .addClass(`mosaic-resize-${col_size_sum}`);\n                            set_resize_handler = false;\n                        }\n                    });\n\n                    // Set new size\n                    $(this).data(\"column_sizes\", column_sizes);\n                }\n            });\n        };\n\n        // Bind event and add to array\n        $(self.mosaic.document).off(\"mousemove\").on(\"mousemove\", DocumentMousemove);\n        $(self.mosaic.document).off(\"dragover\").on(\"dragover\", DocumentMousemove);\n\n        // Handle mouse up event\n        // When resizing is done on mouse up event apply the changes to the div elements\n        var DocumentMouseup = function () {\n            // Find resize helper\n            $(\".mosaic-resize-handle-helper\", self.mosaic.document).each(function () {\n                var resize_handle_index = $(this).data(\"resize_handle_index\");\n\n                // Cleanup original row\n                $(this).parent().parent().mosaicCleanupRow();\n\n                // Get panel\n                var panel = $(this).parents(\"[data-panel]\");\n\n                // Get column sizes\n                var column_sizes = $(this).data(\"column_sizes\");\n\n                // Set column sizes\n                $(this)\n                    .parent()\n                    .children(\".mosaic-grid-cell\")\n                    .each(function (i) {\n                        $(this)\n                            .removeClass(self.layout.widthClasses.join(\" \"))\n                            .addClass(GetWidthClassByColSize(column_sizes[i]));\n\n                        var can_reset = $(this).hasClass(\"col\");\n                        if (!can_reset && i === resize_handle_index) {\n                            $(this)\n                                .children(\".mosaic-tile\")\n                                .first()\n                                .children(\".mosaic-tile-side-tools\")\n                                .each(function () {\n                                    var $tileSideTools = $(this);\n\n                                    $tileSideTools\n                                        .children(\".mosaic-tile-label.reset\")\n                                        .remove();\n\n                                    $tileSideTools.append(\n                                        $(self.mosaic.document.createElement(\"div\"))\n                                            .addClass(\"mosaic-tile-label reset\")\n                                            .append(\n                                                AddResetAnchor(\n                                                    $tileSideTools,\n                                                    column_sizes[i]\n                                                )\n                                            )\n                                    );\n                                });\n                        }\n                    });\n\n                // Remove resizing state\n                panel.removeClass(\"mosaic-panel-resizing\");\n                $(this).parent().removeClass(\"mosaic-row-resizing\");\n                $(this).parent().children(\".mosaic-resize-placeholder\").remove();\n\n                // Set resize handles\n                $(this).parent().mosaicSetResizeHandles();\n                var $tile = panel.find(\".mosaic-selected-tile\");\n                if ($tile.length > 0) {\n                    $tile.data(\"mosaic-tile\").select();\n                }\n\n                // Remove helper\n                $(this).remove();\n            });\n        };\n\n        // Bind event\n        $(self.mosaic.document).off(\"mouseup\").on(\"mouseup\", DocumentMouseup);\n\n        // Handle mousemove on tile\n        var TileMousemove = function (e) {\n            // only if dragging\n            if ($(this).parents(\"[data-panel]\").hasClass(\"mosaic-panel-dragging\") === false) {\n                return;\n            }\n\n            // Hide all dividers\n            $(\".mosaic-selected-divider\", self.mosaic.document).removeClass(\n                \"mosaic-selected-divider\"\n            );\n\n            // Don't show dividers if above original or floating tile\n            if (\n                $(this).hasClass(\"mosaic-original-tile\") === false &&\n                $(this).hasClass(\"mosaic-tile-align-left\") === false &&\n                $(this).hasClass(\"mosaic-tile-align-right\") === false\n            ) {\n                // Get direction\n                var dir = $(this).mosaicGetDirection(e);\n                var divider = $(this).children(\".mosaic-divider-\" + dir);\n\n                // Check if left or right divider\n                if (dir === \"left\" || dir === \"right\") {\n                    var row = divider.parent().parent().parent();\n                    var cols = row.children(\".mosaic-grid-cell\").filter((idx, el) => {\n                        // filter out original tile to enable moving tiles\n                        // inside row with max-columns tiles\n                        return ($(el).find(\".mosaic-original-tile\").length === 0);\n                    });\n\n                    if (cols.length >= $(\".mosaic-panel\").data(\"max-columns\") ) {\n                        // This row already up to the max amount of columns allowed for this layout\n                        // do not allow new items to be dropped alingside any elements in this row.\n                        return;\n                    }\n\n                    // If row has multiple columns\n                    if (row.children(\".mosaic-grid-cell\").length > 1) {\n                        divider.height(row.height() + 5);\n                        divider.css(\n                            \"top\",\n                            row.offset().top - divider.parent().offset().top - 5\n                        );\n                    } else {\n                        divider.height(divider.parent().height() + 5);\n                        divider.css(\"top\", -5);\n                    }\n                }\n\n                // Show divider\n                divider.addClass(\"mosaic-selected-divider\");\n            }\n        };\n\n        // Bind events\n        $(self.mosaic.document)\n            .off(\"mousemove\", \".mosaic-tile\")\n            .on(\"mousemove\", \".mosaic-tile\", TileMousemove);\n        $(self.mosaic.document)\n            .off(\"dragover\", \".mosaic-tile\")\n            .on(\"dragover\", \".mosaic-tile\", TileMousemove);\n\n        // On click select the current tile\n        $(self.mosaic.document)\n            .off(\"click\", \".mosaic-tile\")\n            .on(\"click\", \".mosaic-tile\", function (e) {\n                if ($(\".mosaic-helper-tile-new\", self.mosaic.document).length === 0) {\n                    // only if not dropping tile\n                    if($(this).data(\"mosaic-tile\")) {\n                        $(this).data(\"mosaic-tile\").select();\n                    }\n                }\n            });\n\n        var applyCustomCss = function (e) {\n            if ($(e.target).attr(\"id\") === \"custom-css-input-box\") {\n                return;\n            }\n            $.each($(\"div.mosaic-set-custom-css\"), function () {\n                var parent = $(this).parent();\n                var base_css = \"mosaic-grid-row\";\n                if (parent.hasClass(\"mosaic-innergrid-row\")) {\n                    base_css = \"mosaic-grid-row mosaic-innergrid-row\";\n                }\n                var classes = $(this).find(\"input#custom-css-input-box\").val();\n                base_css += \" \" + classes;\n                parent.attr(\"class\", base_css);\n                $(this).remove();\n            });\n        };\n\n        var CustomCSSOnDblClick = function (e) {\n            // Only do this for \"mosaic-grid-row\" if advanced mode is enabled\n            var target = $(e.target);\n            var obj = target.parents(\"[data-panel]\");\n            if (obj.hasClass(\"mosaic-advanced\") && target.hasClass(\"mosaic-grid-row\")) {\n                // Check we don't have an input field already\n                if ($(target).find(\".mosaic-set-custom-css\").length > 0) {\n                    return;\n                }\n\n                // We are in advance mode\n                var custom_classes = [];\n                $.each(target.attr(\"class\").split(\" \"), function () {\n                    if (\n                        this !== undefined &&\n                        this !== \"mosaic-grid-row\" &&\n                        this !== \"mosaic-innergrid-row\"\n                    ) {\n                        custom_classes.push(this);\n                    }\n                });\n                var input = $(\"<input type='text' id='custom-css-input-box'></input>\").val(\n                    custom_classes.join(\" \")\n                );\n                var div = $(\"<div></div>\")\n                    .addClass(\"mosaic-set-custom-css\")\n                    .append($(\"<label>Custom CSS for this row:</label>\"))\n                    .append(input);\n                target.append(div);\n            }\n        };\n\n        $(self.mosaic.document).on(\"dblclick\", \".mosaic-grid-row\", CustomCSSOnDblClick);\n        $(self.mosaic.document).on(\"click\", applyCustomCss);\n    }\n\n    initialize_panels() {\n        var self = this;\n\n        self.initJQueryHelpers();\n        self.init_events();\n\n        // Loop through matched elements\n        var total = self.mosaic.panels.length;\n\n        for(var i=0; i < total; i++) {\n            // Get current object\n            var obj = $(self.mosaic.panels[i]);\n\n            // Add icons and dividers\n            obj.find(\".mosaic-tile\").each(async function () {\n                var tile = new Tile(self.mosaic, this)\n                await tile.initialize();\n            });\n            obj.find(\".mosaic-tile\").mosaicAddDrag();\n            obj.mosaicAddEmptyRows();\n            obj.children(\".mosaic-grid-row\").mosaicSetResizeHandles();\n            if (i === total - 1) {\n                // Get biggest panel\n                var width = 0;\n                var index = 0;\n                self.mosaic.panels.each(function (j) {\n                    if ($(this).width() > width) {\n                        width = $(this).width();\n                        index = j;\n                    }\n                });\n\n                // Select first tile in biggest panel\n                var $tile = self.mosaic.panels.eq(index).find(\".mosaic-tile:first\");\n                if ($tile.length > 0) {\n                    $tile.data(\"mosaic-tile\").select();\n                }\n            }\n\n            obj.find(\".mosaic-innergrid-row\").each(function () {\n                $(this).mosaicAddMouseMoveInnergridRow();\n                $(this).mosaicSetResizeHandles();\n                var that = $(this);\n                [\"top\", \"bottom\"].forEach(function (pos, idx) {\n                    that.append(\n                        $(self.mosaic.document.createElement(\"div\"))\n                            .addClass(\"mosaic-divider mosaic-divider-\" + pos)\n                    );\n                });\n            });\n        };\n    }\n\n    initJQueryHelpers() {\n\n        var self = this;\n        var mosaic_doc = self.mosaic.document;\n\n        $.fn.mosaicAddMouseMoveEmptyRow = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Mouse move event\n                $(this).on(\"mousemove\", function (/* e */) {\n                    // Get layout object\n                    var obj = $(this).parents(\"[data-panel]\");\n\n                    // Check if dragging\n                    if (obj.hasClass(\"mosaic-panel-dragging\")) {\n                        // Hide all dividers\n                        $(\".mosaic-selected-divider\", mosaic_doc).removeClass(\n                            \"mosaic-selected-divider\"\n                        );\n                        $(this).children(\"div\").addClass(\"mosaic-selected-divider\");\n                    }\n                });\n            });\n        };\n\n        /**\n         * Add mouse move handler to inner grid rows\n         *\n         * @id jQuery.mosaicAddMouseMoveInnergridRow\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicAddMouseMoveInnergridRow = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Mouse move event\n                $(this).mousemove(function (e) {\n                    // Get layout object\n                    var obj = $(this).parents(\"[data-panel]\");\n\n                    // Check if dragging\n                    if (obj.hasClass(\"mosaic-panel-dragging\")) {\n                        // Hide all dividers\n                        $(\".mosaic-selected-divider\", mosaic_doc).removeClass(\n                            \"mosaic-selected-divider\"\n                        );\n\n                        // Get direction\n                        var dir = $(this).mosaicGetDirection(e);\n                        var divider = $(this).children(\".mosaic-divider-\" + dir);\n\n                        // Show divider\n                        divider.addClass(\"mosaic-selected-divider\");\n                    }\n                });\n            });\n        };\n\n        /**\n         * Add empty rows\n         *\n         * @id jQuery.mosaicAddEmptyRows\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicAddEmptyRows = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Loop through rows\n                $(this)\n                    .find(\".mosaic-grid-row:not(.mosaic-innergrid-row)\")\n                    .each(function () {\n                        $(this).before(\n                            $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\"mosaic-grid-row mosaic-empty-row\")\n                                .append(\n                                    $(mosaic_doc.createElement(\"div\"))\n                                        .addClass(\"mosaic-grid-cell col\")\n                                        .append(\n                                            $(mosaic_doc.createElement(\"div\")).append(\n                                                $(mosaic_doc.createElement(\"div\"))\n                                                    .addClass(\"mosaic-tile-outer-border\")\n                                            )\n                                        )\n                                )\n                                .mosaicAddMouseMoveEmptyRow()\n                        );\n                        if ($(this).nextAll(\".mosaic-grid-row\").length === 0) {\n                            $(this).after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-row mosaic-empty-row\")\n                                    .append(\n                                        $(mosaic_doc.createElement(\"div\"))\n                                            .addClass(\"mosaic-grid-cell col\")\n                                            .append(\n                                                $(mosaic_doc.createElement(\"div\")).append(\n                                                    $(mosaic_doc.createElement(\"div\"))\n                                                        .addClass(\"mosaic-tile-outer-border\")\n                                                )\n                                            )\n                                    )\n                                    .mosaicAddMouseMoveEmptyRow()\n                            );\n                        }\n                    });\n\n                if ($(this).find(\".mosaic-grid-row:not(.mosaic-innergrid-row)\").length === 0) {\n                    $(this).append(\n                        $(mosaic_doc.createElement(\"div\"))\n                            .addClass(\"mosaic-grid-row mosaic-empty-row\")\n                            .append(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell col\")\n                                    .append(\n                                        $(mosaic_doc.createElement(\"div\")).append(\n                                            $(mosaic_doc.createElement(\"div\"))\n                                                .addClass(\"mosaic-tile-outer-border\")\n                                        )\n                                    )\n                            )\n                            .mosaicAddMouseMoveEmptyRow()\n                    );\n                }\n            });\n        };\n\n        /**\n         * Add draggable to matched elements\n         *\n         * @id jQuery.mosaicAddDrag\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicAddDrag = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                var tile = $(this);\n\n                var DragMove = function (event) {\n                    var helper = $(\".mosaic-helper-tile\", mosaic_doc);\n                    var offset = helper.parents(\"[data-panel]\").offset();\n                    if(offset) {\n                        helper.css(\"top\", event.pageY + 3 - offset.top);\n                        helper.css(\"left\", event.pageX + 3 - offset.left);\n                    }\n                };\n\n                var DragStop = function () {\n                    var helper = $(\".mosaic-helper-tile\", mosaic_doc);\n                    $(mosaic_doc)\n                        .off(\"mousemove\", DragMove)\n                        .off(\"mouseup\", DragStop);\n\n                    // Handle drag end\n                    helper.mosaicHandleDragEnd();\n                    helper.remove();\n                };\n\n                return tile.each(function () {\n                    tile.find(\"div.mosaic-drag-handle\")\n                        .off(\"mousedown\")\n                        .on(\"mousedown\", function (event) {\n                            var downX = event.pageX;\n                            var downY = event.pageY;\n                            var DragCheckMove = function (event) {\n                                if (\n                                    Math.max(\n                                        Math.abs(downX - event.pageX),\n                                        Math.abs(downY - event.pageY)\n                                    ) >= 1\n                                ) {\n                                    // Add dragging class to content area\n                                    self.mosaic.panels.addClass(\"mosaic-panel-dragging\");\n                                    $(\".mosaic-selected-tile\", mosaic_doc)\n                                        .removeClass(\"mosaic-selected-tile\")\n                                        .children(\".mosaic-tile-content\")\n                                        .trigger(\"blur\");\n\n                                    var originaltile = $(event.target).parents(\".mosaic-tile\");\n                                    originaltile.addClass(\"mosaic-original-tile\");\n\n                                    var clone = originaltile.clone(true);\n                                    clone.css({\n                                            \"width\": originaltile.width(),\n                                            \"max-height\": \"50%\",\n                                            \"position\": \"absolute\",\n                                            \"opacity\": 0.5,\n                                        })\n                                        .addClass(\"mosaic-helper-tile\");\n                                    originaltile.parents(\"[data-panel]\").append(clone);\n\n                                    $(mosaic_doc).on(\"mousemove\", DragMove);\n                                    $(mosaic_doc).on(\"mouseup\", DragStop);\n                                    $(mosaic_doc).off(\"mousemove\", DragCheckMove);\n                                }\n                            };\n                            $(mosaic_doc).on(\"mousemove\", DragCheckMove);\n                            $(mosaic_doc).on(\"mouseup\", function () {\n                                $(mosaic_doc).off(\"mousemove\", DragCheckMove);\n                            });\n                        });\n                });\n            });\n        };\n\n        /**\n         * Event handler for drag end - add new tile\n         *\n         * @id jQuery.mosaicHandleDragEnd\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicHandleDragEnd = function () {\n            // Get layout object\n            var obj = $(this).parents(\"[data-panel]\");\n\n            // Remove dragging class from content\n            self.mosaic.panels.removeClass(\n                \"mosaic-panel-dragging mosaic-panel-dragging-new\"\n            );\n\n            // Get direction\n            var divider = $(\".mosaic-selected-divider\", mosaic_doc);\n            var drop = divider.parent();\n            var dir = \"\";\n            for(const _dir of [\"top\", \"bottom\", \"left\", \"right\"]) {\n                if (divider.hasClass(\"mosaic-divider-\" + _dir)) {\n                    dir = _dir;\n                }\n            };\n            divider.removeClass(\"mosaic-selected-divider\");\n\n            // True if new tile is inserted\n            var new_tile = $(\".mosaic-helper-tile-new\", mosaic_doc).length > 0;\n            var original_tile = $(\".mosaic-original-tile\", mosaic_doc);\n            // get original row here, because tile might be moved\n            var original_row = original_tile.closest(\".mosaic-grid-row\");\n\n            // If divider is not found or not sane drop, act like esc is pressed\n            if (divider.length === 0 || drop.hasClass(\"mosaic-helper-tile\")) {\n                original_tile.addClass(\"mosaic-drag-cancel\");\n            }\n\n            const fixup_classes = (_t) => {\n                _t.removeClass(\"mosaic-drag-cancel\");\n                _t.removeClass(\"mosaic-original-tile mosaic-helper-tile mosaic-helper-tile-new mosaic-tile-align-right mosaic-tile-align-left\");\n                _t.css({ width: \"\", left: \"\", top: \"\" });\n                if(!new_tile) {\n                    _t.addClass(\"mosaic-new-tile\");\n                }\n            }\n\n            if (\n                // Check if esc is pressed\n                original_tile.hasClass(\"mosaic-drag-cancel\") ||\n\n                // Not dropped on tile and empty row\n                (drop.hasClass(\"mosaic-tile\") === false &&\n                 drop.hasClass(\"mosaic-innergrid-row\") === false &&\n                 drop.hasClass(\"mosaic-empty-row\") === false) ||\n\n                // Check if max columns rows is reached\n                (drop.parent().parent().children(\".mosaic-grid-cell\").length >=\n                 obj.data(\"max-columns\") &&\n                 (dir === \"left\" || dir === \"right\"))\n            ) {\n                fixup_classes(original_tile);\n\n            // Dropped on empty row\n            } else if (drop.hasClass(\"mosaic-empty-row\")) {\n                // Replace empty with normal row class\n                drop.removeClass(\"mosaic-empty-row\")\n                    .attr(\n                        \"class\",\n                        original_tile.parents(\".mosaic-grid-row\").first().attr(\"class\")\n                    )\n                    .off(\"mousemove\");\n\n                // Clean cell\n                drop.children(\".mosaic-grid-cell\").children(\"div\").remove();\n\n                fixup_classes(original_tile);\n\n                // Add tile to empty row\n                drop.children(\".mosaic-grid-cell\").append(original_tile);\n\n            // Dropped on row or below an inner grid\n            } else {\n                /* When the layout object has the special class (Assigned in line 82), wrap\n                the tile in a div.mosaic-grid-cell so it would create an inner column */\n                fixup_classes(original_tile);\n\n                if (obj.hasClass(\"inner-subcolumn\")) {\n                    var original_tile = $(mosaic_doc.createElement(\"div\"))\n                        .addClass(\"mosaic-grid-row mosaic-innergrid-row\")\n                        .append(\n                            $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\"mosaic-grid-cell col\")\n                                .append(\n                                    $(mosaic_doc.createElement(\"div\")).append(\n                                        $(mosaic_doc.createElement(\"div\")).addClass(\n                                            \"mosaic-innergrid-outer-border\"\n                                        )\n                                    )\n                                )\n                                .append(original_tile)\n                        )\n                        .mosaicAddMouseMoveInnergridRow();\n                    for(const pos of [\"top\", \"bottom\"]) {\n                        original_tile.append(\n                            $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\"mosaic-divider mosaic-divider-\" + pos)\n                        );\n                    };\n                }\n\n                // If top\n                if (dir === \"top\") {\n                    // Add tile before\n                    drop.before(original_tile);\n\n                // If bottom\n                } else if (dir === \"bottom\") {\n                    // Add tile after\n                    drop.after(original_tile);\n\n                // If left\n                } else if (dir === \"left\" || dir === \"right\") {\n                    var _col = drop.parent();\n                    var _row = _col.parent();\n                    var _children_count = _row.children(\".mosaic-grid-cell\").length;\n\n                    // Check if only 1 column in the row\n                    if (_children_count.length === 1) {\n                        // Put tiles above dropped tile in a new row above\n                        var prev_elms = drop.prevAll();\n                        if (prev_elms.length > 0) {\n                            _row.before(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-row\")\n                                    .append(\n                                        $(mosaic_doc.createElement(\"div\"))\n                                            .addClass(\"mosaic-grid-cell col\")\n                                            .append(\n                                                $(prev_elms.get().reverse())\n                                                    .clone(true)\n                                                    .mosaicAddDrag()\n                                            )\n                                    )\n                                );\n                            prev_elms.remove();\n                        }\n\n                        // Put tiles below dropped tile in a new row below\n                        var next_elms = drop.nextAll();\n                        if (next_elms.length > 0) {\n                            _row.after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-row\")\n                                    .append(\n                                        $(mosaic_doc.createElement(\"div\"))\n                                            .addClass(\"mosaic-grid-cell col\")\n                                            .append(next_elms.clone(true).mosaicAddDrag())\n                                    )\n                            );\n                            next_elms.remove();\n                        }\n\n                        // Resize current column\n                        _col.removeClass(self.layout.widthClasses.join(\" \"))\n                            .addClass(\"col\");\n\n                        // Create column with dragged tile in it\n                        if (dir === \"left\") {\n                            drop.parent().before(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell col\")\n                                    .append(original_tile)\n                            );\n                        } else {\n                            drop.parent().after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell col\")\n                                    .append(original_tile)\n                            );\n                        }\n\n                        // Add resize handles\n                        _row.mosaicSetResizeHandles();\n\n                    // Dropped inside column\n                    } else {\n\n                        // Create new column\n                        if (dir === \"left\") {\n                            _col.before(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell\")\n                                    .append(original_tile)\n                            );\n                        } else {\n                            _col.after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell\")\n                                    .append(original_tile)\n                            );\n                        }\n\n                        // Resize columns\n                        _row.mosaicSetColumnSizes();\n\n                        // Add resize handles\n                        _row.mosaicSetResizeHandles();\n                    }\n                }\n            }\n\n            // Remove remaining empty rows\n            self.mosaic.panels.find(\".mosaic-grid-row:not(:has(.mosaic-tile))\").remove();\n            self.mosaic.panels.find(\".mosaic-empty-row\").remove();\n\n            // Cleanup original row\n            original_row.mosaicCleanupRow();\n\n            // Add empty rows\n            self.mosaic.panels.mosaicAddEmptyRows();\n\n            // Select new tile and make it draggables\n            if (new_tile && original_tile.length > 0) {\n                original_tile.mosaicAddDrag();\n                original_tile.data(\"mosaic-tile\").initializeContent();\n                original_tile.data(\"mosaic-tile\").focus();\n            }\n        };\n\n        /**\n         * Set the sizes of the column\n         *\n         * @id jQuery.mosaicSetColumnSizes\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicSetColumnSizes = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Resize columns in the row\n                var column_sizes = [];\n                var $gridCells = $(this).children(\".mosaic-grid-cell\")\n                var nr_of_columns = $gridCells.length;\n                var width_css_classes = self.layout.widthClasses.join(\" \");\n\n                // This will reset the width classes - it will automatically set the widths\n\n                $gridCells\n                    .each(function (idx) {\n                        $(this).removeClass(width_css_classes);\n\n                        var col_size = Math.floor(12 / nr_of_columns);\n                        var col_size_last = 12 - col_size * (nr_of_columns - 1);\n\n                        for (var j = 0; j < nr_of_columns; j++) {\n                            if (j === nr_of_columns - 1) {\n                                col_size = col_size_last;\n                            }\n                            if (idx === j) {\n                                column_sizes.push(col_size);\n                                $(this).addClass(\"col\");\n                            }\n                        }\n                    });\n\n                $(this).data(\"column_sizes\", column_sizes);\n            });\n        };\n\n        /**\n         * Add new resize handlers\n         *\n         * @id jQuery.mosaicSetResizeHandles\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicSetResizeHandles = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Remove resize handles\n                $(this).children(\".mosaic-resize-handle\").remove();\n\n                // Check number of columns\n                var grid_cells = $(this).children(\".mosaic-grid-cell\")\n                var nr_of_columns = grid_cells.length;\n\n                if (nr_of_columns <= 12) {\n                    var column_sizes = [];\n                    var zero_count = 0;\n                    var col_sum = 0;\n\n                    for (let i = 0; i < nr_of_columns; i++) {\n                        var col_size = GetColSizeByColClass(\n                            self.getWidthClass(grid_cells[i])\n                        );\n                        column_sizes.push(col_size);\n                        col_sum = col_sum + col_size;\n                        if (col_size === 0) {\n                            zero_count = zero_count + 1;\n                        }\n                    }\n\n                    var zero_col = 0;\n                    if (zero_count) {\n                        zero_col = (12 - col_sum) / zero_count;\n                    }\n\n                    var resize_col_size = 0;\n                    col_size = 0;\n\n                    for (let i = 0; i < nr_of_columns; i++) {\n                        col_size = column_sizes[i] ? column_sizes[i] : zero_col;\n                        resize_col_size = resize_col_size + col_size;\n\n                        $(this).append(\n                            $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\n                                    `mosaic-resize-handle mosaic-resize-handle-${(i + 1)}`\n                                    + ` mosaic-resize-${resize_col_size}`\n                                )\n                                .data(\"resize_handle_index\", i)\n                        );\n\n                        // set counted size to cell data\n                        $(grid_cells[i]).data(\"col_size\", col_size);\n                    }\n                }\n\n                // Mouse down handler on resize handle\n                $(this)\n                    .children(\".mosaic-resize-handle\")\n                    .off(\"mousedown\")\n                    .on(\"mousedown\", function (/* e */) {\n                        var $currRow = $(this).parent();\n                        var $mosaicGridCellChildren = $currRow.children(\".mosaic-grid-cell\");\n                        var nr_of_columns = $mosaicGridCellChildren.length;\n\n                        if(nr_of_columns > 12) {\n                            return;\n                        }\n                        var col_size_sum = 0;\n                        var column_sizes = [];\n\n                        $mosaicGridCellChildren.each(function (index) {\n                            var col_size = $(this).data(\"col_size\"); // get computed size of the column\n                            column_sizes.push(col_size);\n\n                            var placeholder = $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\n                                    `mosaic-resize-placeholder col-${col_size} mosaic-resize-${col_size_sum}`\n                                )\n                                .append(\n                                    $(mosaic_doc.createElement(\"div\"))\n                                        .addClass(\n                                            \"mosaic-resize-placeholder-inner-border\"\n                                        )\n                                        .append(\n                                            $(mosaic_doc.createElement(\"div\"))\n                                                .addClass(\"info\")\n                                                .html(col_size)\n                                        )\n                                );\n\n                            // Add placeholder\n                            $currRow.append(placeholder);\n\n                            // summarize column sizes for placeholder classes\n                            col_size_sum += col_size;\n                        });\n\n                        // Get resize handle index\n                        var resize_handle_index = self.getResizeHandleClassId(this);\n\n                        // Add helper\n                        $currRow\n                            .append(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-resize-handle mosaic-resize-handle-helper\")\n                                    .addClass(`mosaic-resize-${column_sizes[resize_handle_index]}`)\n                                    .data(\"row_width\", $currRow.width())\n                                    .data(\"nr_of_columns\", nr_of_columns)\n                                    .data(\"column_sizes\", column_sizes)\n                                    .data(\"resize_handle_index\", resize_handle_index)\n                            );\n\n                        // Set resizing state\n                        $(this).parents(\"[data-panel]\").addClass(\"mosaic-panel-resizing\");\n                        $currRow.addClass(\"mosaic-row-resizing\");\n                        $(\".mosaic-selected-tile\", mosaic_doc)\n                            .children(\".mosaic-tile-content\")\n                            .trigger(\"blur\");\n\n                        // Prevent drag event\n                        return false;\n                    });\n            });\n        };\n\n        /**\n         * Cleanup row after tiles added or removed from the row\n         *\n         * @id jQuery.mosaicCleanupRow\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicCleanupRow = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Get original row\n                var original_row = $(this);\n\n                // Remove empty columns\n                original_row.children(\".mosaic-grid-cell\").each(function () {\n                    if ($(this).children().length === 0) {\n                        $(this).remove();\n\n                        // Resize columns\n                        original_row.mosaicSetColumnSizes();\n                    }\n                });\n\n                // Remove row if no tiles inside\n                if (original_row.find(\".mosaic-tile\").length === 0) {\n                    var del_row = original_row;\n\n                    // Check if next row available\n                    if (original_row.nextAll(\".mosaic-grid-row\").length > 0) {\n                        original_row = original_row.next(\".mosaic-grid-row\");\n\n                        // Check if prev row available\n                    } else if (original_row.prevAll(\".mosaic-grid-row\").length > 0) {\n                        original_row = original_row.prev(\".mosaic-grid-row\");\n\n                        // This is the last row\n                    } else {\n                        original_row.remove();\n                        return;\n                    }\n\n                    // Remove current row\n                    del_row.remove();\n                }\n\n                // Set resize handles\n                original_row.mosaicSetResizeHandles();\n            });\n        };\n\n        /**\n         * Get the direction based on the tile size and relative x and y coords of the cursor\n         *\n         * @id jQuery.mosaicGetDirection\n         * @param {Object} e Event object\n         * @return {String} Direction of the cursor relative to the tile\n         */\n        $.fn.mosaicGetDirection = function (e) {\n            // Calculate x, y, width and height\n            var width = parseFloat($(this).width());\n            var height = parseFloat($(this).height());\n            var x = parseFloat(e.pageX - $(this).offset().left - width / 2);\n            var y = parseFloat(e.pageY - $(this).offset().top - height / 2);\n            var halfwidth = width / 2;\n            var halfheight = height / 2;\n\n            // If left of center\n            if (x < 0) {\n                // If above center\n                if (y < 0) {\n                    if (x / y < (-1 * halfwidth) / (-1 * halfheight)) {\n                        return \"top\";\n                    } else {\n                        return \"left\";\n                    }\n                    // Below center\n                } else {\n                    if (x / y < (-1 * halfwidth) / halfheight) {\n                        return \"left\";\n                    } else {\n                        return \"bottom\";\n                    }\n                }\n\n                // Right of center\n            } else {\n                // If above center\n                if (y < 0) {\n                    if (x / y < (1 * halfwidth) / (-1 * halfheight)) {\n                        return \"right\";\n                    } else {\n                        return \"top\";\n                    }\n                    // Below center\n                } else {\n                    if (x / y < halfwidth / halfheight) {\n                        return \"bottom\";\n                    } else {\n                        return \"right\";\n                    }\n                }\n            }\n        };\n    }\n}\n\n\nvar AddResetAnchor = function ($tileSideTools, cols) {\n    var reset = document.createElement(\"a\");\n    var cols_str = typeof cols === \"undefined\" ? \"\" : \" (\" + cols + \")\";\n    reset.href = \"javascript:\";\n    reset.textContent = \"Reset\" + cols_str;\n    $(reset).on(\"click\", { el: $tileSideTools }, function (e) {\n        e.preventDefault();\n\n        e.data.el\n            .parent()\n            .parent()\n            .removeClass(\n                \"col-1 col-2 col-3 col-4 col-5 col-6 col-7 col-8 col-9 col-10 col-11 col-12\"\n            )\n            .addClass(\"col\");\n\n        e.data.el.parent().parent().parent().mosaicSetResizeHandles();\n\n        $(e.target).parent().remove();\n    });\n    return reset;\n};\n\n/**\n * Get a list of percentage steps for each column in the grid\n *\n * @id GetGridPercentList\n * @return {Array} List of percent steps of the width class\n */\nfunction GetGridPercentList() {\n    var low = 0,\n        high = 100,\n        grid = 12,\n        grid_percent = [];\n    var step = 100 / grid;\n    var a = low,\n        b = high - 1; /* fix the last step in the loop: -1 */\n    while (a < b) {\n        grid_percent.push(Math.round((a += step)));\n    }\n\n    return grid_percent;\n}\n\n/**\n * Get the name of the width class of the given integer\n *\n * @id GetWidthClassByColSize\n * @param {Integer} col_size Bootstrap col width id\n * @return {String} Classname of the width class of the given integer\n */\nfunction GetWidthClassByColSize(col_size) {\n    if (col_size) {\n        return \"col-\" + col_size;\n    }\n\n    // Fallback\n    return \"col\";\n}\n\n/**\n * Get the name of the position class of the given integer\n *\n * @id GetColSizeByColClass\n * @param {String} Classname of the position class\n * @return {Integer} col_size Bootstrap col width id\n */\nfunction GetColSizeByColClass(col_class, prefix) {\n    prefix = prefix || \"col-\";\n    return parseInt(col_class.replace(prefix, \"\")) || 0;\n}\n\n/**\n * Get the bootstrap col width id by width size\n *\n * @id GetBootstrapColByPercent\n * @param {Integer} width Percentage of the column position\n * @return {Integer} Bootstrap col width id of the given integer\n */\nfunction GetBootstrapColByPercent(width) {\n    var grid_percent = GetGridPercentList();\n\n    for (let idx=0; idx < grid_percent.length; idx++) {\n        if (width === grid_percent[idx]) {\n            return idx + 1;\n        }\n    }\n\n    // Fallback\n    return 12;\n}\n"],"names":["i","logging","LayoutManager","mosaic","widthClasses","resizeClasses","resizeHandleClasses","this","e","layout","cls","$","hasClass","idx","length","type","url","self","overlay","modal","$modal","hide","success","value","getDomTreeFromHtml","addHeadTags","addTile","find","html","response","close","window","parent","focus","removeHeadTags","$tile","document","attr","replace","tileUrl","panels","addClass","get","append","createElement","helper","width","each","tile","Tile","initialize","cacheHtml","scanRegistry","tile_config","start","end","name","tile_type","widget","textval","id","lines","val","label","default_value","exportLayout","content","getLayoutRow","obj","body","classNames","children","data","getHtmlBody","options","$customLayout","hasContentLayout","getPageContent","off","on","keyCode","querySelectorAll","blur","focused_tile","activeElement","closest","removeClass","date","Date","getTime","original_tile","trigger","parents","remove","enabled","elm","target","srcElement","new_tile","mosaicHandleDragEnd","forEach","el","classList","toolbar","SelectedTileChange","DocumentMousemove","offset","css","pageY","top","pageX","left","cur_snap_offset","row","resize_handle_index","mouse_x","parseFloat","mouse_percentage","Math","round","snap","snap_offset","GetGridPercentList","perc","abs","snap_size","grid_percent","GetBootstrapColByPercent","column_sizes","col_size_before","col_size_after","col_size","col_size_max","col_size_sum","set_resize_handler","resize_css_classes","join","width_css_classes","index","col_size_class","GetWidthClassByColSize","mosaicCleanupRow","panel","first","$tileSideTools","AddResetAnchor","mosaicSetResizeHandles","select","TileMousemove","dir","mosaicGetDirection","divider","filter","height","custom_classes","split","undefined","push","input","div","base_css","initJQueryHelpers","init_events","total","mosaicAddDrag","mosaicAddEmptyRows","j","eq","mosaicAddMouseMoveInnergridRow","that","pos","mosaic_doc","mousemove","before","mosaicAddMouseMoveEmptyRow","nextAll","after","DragMove","event","DragStop","downX","downY","DragCheckMove","max","originaltile","clone","drop","_dir","original_row","fixup_classes","_t","_col","_row","prev_elms","prevAll","reverse","next_elms","mosaicSetColumnSizes","initializeContent","$gridCells","nr_of_columns","floor","col_size_last","grid_cells","zero_count","col_sum","GetColSizeByColClass","getWidthClass","zero_col","resize_col_size","$currRow","$mosaicGridCellChildren","placeholder","getResizeHandleClassId","del_row","next","prev","x","y","halfwidth","halfheight","cols","reset","cols_str","href","textContent","preventDefault","a","high","col_class","prefix","parseInt"],"sourceRoot":""}