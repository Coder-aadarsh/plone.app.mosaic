{"version":3,"file":"chunks/60185.87f9d85d45b25989334c.min.js","mappings":"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","sources":["webpack://plone-mosaic/./resources/js/mosaic.layout.js"],"sourcesContent":["// This plugin is used to create a mosaic layout.\nimport \"regenerator-runtime/runtime\"; // needed for ``await`` support\nimport $ from \"jquery\";\nimport logging from \"@patternslib/patternslib/src/core/logging\";\nimport Tile from \"./mosaic.tile\";\nimport \"./mosaic.overlay\";\n\nconst log = logging.getLogger(\"pat-mosaic/layout\");\n\nexport default class LayoutManager {\n\n    constructor(mosaic) {\n        this.mosaic = mosaic;\n    }\n\n    layout = {\n        widthClasses: [\n            \"col\",\n            \"col-1\",\n            \"col-2\",\n            \"col-3\",\n            \"col-4\",\n            \"col-5\",\n            \"col-6\",\n            \"col-7\",\n            \"col-8\",\n            \"col-9\",\n            \"col-10\",\n            \"col-11\",\n            \"col-12\",\n        ],\n        resizeClasses: [\n            \"mosaic-resize-1\",\n            \"mosaic-resize-2\",\n            \"mosaic-resize-3\",\n            \"mosaic-resize-4\",\n            \"mosaic-resize-5\",\n            \"mosaic-resize-6\",\n            \"mosaic-resize-7\",\n            \"mosaic-resize-8\",\n            \"mosaic-resize-9\",\n            \"mosaic-resize-10\",\n            \"mosaic-resize-11\",\n            \"mosaic-resize-12\",\n        ],\n        resizeHandleClasses: [\n            \"mosaic-resize-handle-1\",\n            \"mosaic-resize-handle-2\",\n            \"mosaic-resize-handle-3\",\n            \"mosaic-resize-handle-4\",\n            \"mosaic-resize-handle-5\",\n            \"mosaic-resize-handle-6\",\n            \"mosaic-resize-handle-7\",\n            \"mosaic-resize-handle-8\",\n            \"mosaic-resize-handle-9\",\n            \"mosaic-resize-handle-10\",\n            \"mosaic-resize-handle-11\",\n            \"mosaic-resize-handle-12\",\n        ],\n    }\n\n    /* css helpers */\n    getWidthClass(e) {\n        for (const cls of this.layout.widthClasses) {\n            if ($(e).hasClass(cls)) {\n                return cls;\n            }\n        }\n        // Fallback\n        return this.layout.widthClasses[0];\n    }\n\n    getResizeHandleClassId(e) {\n        // Loop through resize handle classes\n        for (let idx=0; idx <  this.layout.resizeHandleClasses.length; idx++) {\n            if ($(e).hasClass(this.layout.resizeHandleClasses[idx])) {\n                return idx;\n            }\n        }\n        // Fallback\n        return 1;\n    };\n\n    addAppTile(type, url /*, id */) {\n        var self = this;\n        // Close overlay\n        if (self.mosaic.overlay.modal.$modal) {\n            self.mosaic.overlay.modal.hide();\n        }\n\n        // Get value\n        $.ajax({\n            type: \"GET\",\n            url: url,\n            success: async function (value) {\n                // Get dom tree\n                value = self.mosaic.getDomTreeFromHtml(value);\n\n                // Add head tags\n                self.mosaic.addHeadTags(url, value);\n\n                // Add tile\n                await self.addTile(type, value.find(\".temp_body_tag\").html(), url);\n            },\n        });\n    }\n\n    async addAppTileHTML(type, response, url) {\n        var value;\n        var self = this;\n\n        value = self.mosaic.getDomTreeFromHtml(response);\n        self.mosaic.addHeadTags(url, value);\n        await self.addTile(type, value.find(\".temp_body_tag\").html(), url);\n    }\n\n    editAppTile(url) {\n        var self = this;\n        // Close overlay\n        self.mosaic.overlay.close();\n\n        // Focus on current window\n        window.parent.focus();\n\n        // Get new value\n        $.ajax({\n            type: \"GET\",\n            url: url,\n            success: function (value) {\n                // Get dom tree\n                value = self.mosaic.getDomTreeFromHtml(value);\n\n                // Remove head tags\n                self.mosaic.removeHeadTags(url);\n\n                // Add head tags\n                self.mosaic.addHeadTags(url, value);\n\n                // Update tile\n                var $tile = $(\n                    \".mosaic-selected-tile .mosaic-tile-content\",\n                    self.mosaic.document\n                );\n                $tile.html(value.find(\".temp_body_tag\").html()); // jshint ignore:line\n                $tile.attr(\"data-tileUrl\", url.replace(/&/gim, \"&amp;\"));\n            },\n        });\n    }\n\n    async addTile(type, value, tileUrl) {\n        var self = this;\n        // Set dragging state\n        self.mosaic.panels.addClass(\"mosaic-panel-dragging mosaic-panel-dragging-new\");\n\n        // Add helper\n        $(self.mosaic.panels.get(0)).append(\n            $(self.mosaic.document.createElement(\"div\"))\n                .addClass(\"mosaic-grid-row\")\n                .append(\n                    $(self.mosaic.document.createElement(\"div\"))\n                        .addClass(\"mosaic-grid-cell col\")\n                        .append(\n                            $(self.mosaic.document.createElement(\"div\"))\n                                .addClass(\n                                    \"movable removable mosaic-tile mosaic-\" + type + \"-tile\"\n                                )\n                                .append(\n                                    $(self.mosaic.document.createElement(\"div\"))\n                                        .addClass(\"mosaic-tile-content\")\n                                        .attr(\n                                            \"data-tileUrl\",\n                                            tileUrl && tileUrl.replace(/&/gim, \"&amp;\")\n                                        )\n                                        .html(value)\n                                )\n                                .addClass(\n                                    \"mosaic-helper-tile mosaic-helper-tile-new mosaic-original-tile\"\n                                )\n                        )\n                )\n        );\n\n        // Set helper min size\n        var helper = self.mosaic.panels.find(\".mosaic-helper-tile-new\");\n\n        // Get max width\n        var width = 0;\n        self.mosaic.panels.each(function () {\n            if ($(this).width() > width) {\n                width = $(this).width();\n            }\n        });\n\n        // Set width\n        if (helper.width() < width / 4) {\n            helper.width(width / 4);\n        } else {\n            helper.width(helper.width());\n        }\n\n        var tile = new Tile(self.mosaic, helper);\n        await tile.initialize();\n        tile.cacheHtml();\n        tile.scanRegistry();\n    }\n\n    getDefaultValue(tile_config) {\n        var self = this;\n        var start, end;\n\n        // Wrap title and description fields for proper styles\n        if (tile_config.name === \"IDublinCore-title\") {\n            start = '<h1 class=\"documentFirstHeading\">';\n            end = \"</h1>\";\n        } else if (tile_config.name === \"IDublinCore-description\") {\n            start = '<p class=\"documentDescription\">';\n            end = \"</p>\";\n        } else {\n            start = \"<div>\";\n            end = \"</div>\";\n        }\n\n        switch (tile_config.tile_type) {\n            case \"field\":\n                switch (tile_config.widget) {\n                    case \"z3c.form.browser.text.TextWidget\":\n                    case \"z3c.form.browser.text.TextFieldWidget\":\n                        var textval = $(\"#\" + tile_config.id, self.mosaic.document)\n                            .find(\"input\")\n                            .attr(\"value\");\n                        return `${start}${textval}${end}`;\n                    case \"z3c.form.browser.textarea.TextAreaWidget\":\n                    case \"z3c.form.browser.textarea.TextAreaFieldWidget\":\n                    case \"z3c.form.browser.textlines.TextLinesWidget\":\n                    case \"z3c.form.browser.textlines.TextLinesFieldWidget\":\n                        var lines = $(\"#\" + tile_config.id, self.mosaic.document)\n                            .find(\"textarea\")\n                            .val()\n                            .replace('\\\\n', \"<br/>\");\n                        return `${start}${lines}${end}`;\n                    case \"plone.app.z3cform.widget.RichTextFieldWidget\":\n                    case \"plone.app.z3cform.wysiwyg.widget.WysiwygWidget\":\n                    case \"plone.app.z3cform.wysiwyg.widget.WysiwygFieldWidget\":\n                    case \"plone.app.widgets.dx.RichTextWidget\":\n                        return $(\"#\" + tile_config.id).find(\"textarea\").val()\n                    default:\n                        return (\n                            '<div class=\"discreet\">Placeholder for field:<br/><b>' +\n                            tile_config.label +\n                            \"</b></div>\"\n                        );\n                }\n            default:\n                return tile_config.default_value;\n        }\n    }\n\n    getPageContent(exportLayout) {\n        var self = this;\n\n        var getLayoutRow = function (obj) {\n            var body = \"\";\n\n            // Check if not an empty row\n            if ($(obj).hasClass(\"mosaic-empty-row\") === false &&\n                $(obj).find(\".mosaic-tile\").length >= 0) {\n                // Add row open tag\n                classNames = $(obj).attr(\"class\");\n                body += '      <div class=\"' + classNames + '\">\\n';\n\n                // Loop through rows\n                $(obj)\n                    .children(\".mosaic-grid-cell\")\n                    .each(function () {\n                        // Add cell start tag\n                        body += '        <div class=\"' + $(this).attr(\"class\") + '\">\\n'; // jshint ignore:line\n\n                        $(this)\n                            .children()\n                            .each(function () {\n                                if ($(this).hasClass(\"mosaic-tile\")) {\n                                    body += $(this).data(\"mosaic-tile\").getHtmlBody(exportLayout);\n                                } else if ($(this).hasClass(\"mosaic-innergrid-row\")) {\n                                    body += getLayoutRow(this);\n                                }\n                            });\n\n                        // Add cell end tag\n                        body += \"        </div>\\n\";\n                    });\n\n                // Add row close tag\n                body += \"      </div>\\n\";\n            }\n            return body;\n        };\n\n        // Content\n        var content, position = 1, size = 12, body = \"\", classNames = \"\";\n\n        // Add body tag\n        body += \"  <body>\\n\";\n\n        // Loop through panels\n        $(\"[data-panel]\", self.mosaic.document).each(function () {\n            // Add open panel tag\n            body += '    <div data-panel=\"' + $(this).data(\"panel\") + '\"';\n            body += '         data-max-columns=\"' + $(this).data(\"max-columns\") + '\">\\n';\n\n            $(this)\n                .children()\n                .each(function () {\n                    if ($(this).hasClass(\"mosaic-grid-row\")) {\n                        body += getLayoutRow(this);\n                    }\n                });\n\n            // Add close panel tag\n            body += \"    </div>\\n\";\n        });\n\n        // Add close tag\n        body += \"  </body>\\n\";\n\n        content =\n            '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\" data-layout=\"' +\n            self.mosaic.options.layout +\n            '\">\\n'; // jshint ignore:line\n        content += body;\n        content += \"</html>\\n\";\n        return content;\n    }\n\n    saveLayoutToForm() {\n        var self = this;\n        var $customLayout = $(\n            \"#form-widgets-ILayoutAware-customContentLayout, \" +\n            \"[name='form.widgets.ILayoutAware.customContentLayout']\"\n        );\n\n        if (self.mosaic.hasContentLayout) {\n            $customLayout.val(\"\");\n        } else {\n            $customLayout.val(self.getPageContent());\n        }\n    }\n\n    init_events() {\n        var self = this;\n        var DocumentKeyup = function (e) {\n            // Check if alt\n            if (e.keyCode === 18) {\n                var date = new Date();\n                var enabled = $(\".mosaic-panel\", self.mosaic.document).data(\"advanced-enabled\");\n                var elapsed = date.getTime() - enabled;\n                if (elapsed > 400) {\n                    $(\".mosaic-panel\", self.mosaic.document).removeClass(\"mosaic-advanced\");\n                }\n            }\n            // Check if ctrl\n            if (e.keyCode === 17) {\n                $(\".mosaic-panel\", self.mosaic.document).removeClass(\"inner-subcolumn\");\n            }\n        };\n\n        // Keydown handler\n        var DocumentKeydown = function (e) {\n            // Tab key\n            if (e.keyCode === 9) {\n                // blur all active tiles. and set focus\n                for(const tile of self.mosaic.document.querySelectorAll(\".mosaic-selected-tile\")) {\n                    tile[\"mosaic-tile\"].blur();\n                }\n                // focus new tile\n                var focused_tile = document.activeElement.closest(\".mosaic-tile\");\n                if(focused_tile) {\n                    focused_tile[\"mosaic-tile\"].focus();\n                }\n            }\n            // Check if alt\n            if (e.keyCode === 18) {\n                if ($(\".mosaic-panel\", self.mosaic.document).hasClass(\"mosaic-advanced\")) {\n                    $(\".mosaic-panel\", self.mosaic.document).removeClass(\"mosaic-advanced\");\n                } else {\n                    var date = new Date();\n                    $(\".mosaic-panel\", self.mosaic.document).addClass(\"mosaic-advanced\");\n                    $(\".mosaic-panel\", self.mosaic.document).data(\n                        \"advanced-enabled\",\n                        date.getTime()\n                    );\n                }\n            }\n            // Check if ctrl\n            if (e.keyCode === 17) {\n                $(\".mosaic-panel\", self.mosaic.document).addClass(\"inner-subcolumn\");\n            }\n\n            // Check if esc\n            if (e.keyCode === 27) {\n                // Check if dragging\n                var original_tile = $(\".mosaic-original-tile\", self.mosaic.document);\n                if (original_tile.length > 0) {\n                    original_tile.each(function () {\n                        $(this).addClass(\"mosaic-drag-cancel\");\n                        if ($(this).hasClass(\"mosaic-helper-tile-new\")) {\n                            $(document).trigger(\"mousedown\");\n                        } else {\n                            $(document).trigger(\"mouseup\");\n                        }\n                    });\n                // Deselect tile\n                } else {\n                    $(\".mosaic-selected-tile\", self.mosaic.document).each(function () {\n                        $(this).trigger(\"blur\");\n                    });\n                }\n\n                // Find resize helper\n                $(\".mosaic-resize-handle-helper\", self.mosaic.document).each(function () {\n                    // Remove resizing state\n                    $(this).parents(\"[data-panel]\").removeClass(\"mosaic-panel-resizing\");\n                    $(this).parent().removeClass(\"mosaic-row-resizing\");\n                    $(this).parent().children(\".mosaic-resize-placeholder\").remove();\n\n                    // Remove helper\n                    $(this).remove();\n                });\n\n                // Hide overlay\n                if (self.mosaic.overlay.modal.$modal) {\n                    self.mosaic.overlay.modal.hide();\n                }\n            }\n        };\n\n        // Bind event and add to array\n        $(self.mosaic.document).off(\"keydown\").on(\"keydown\", DocumentKeydown);\n        $(self.mosaic.document).off(\"keyup\").on(\"keyup\", DocumentKeyup);\n\n        // Add deselect\n        var DocumentMousedown = function (e) {\n            // Get element\n            var elm;\n            if (e.target) {\n                elm = e.target;\n            } else if (e.srcElement) {\n                elm = e.srcElement;\n            }\n\n            // Find resize helper\n            var new_tile = $(\".mosaic-helper-tile-new\", self.mosaic.document);\n            if (new_tile.length > 0) {\n                new_tile.each(function () {\n                    // Handle drag end\n                    $(this).mosaicHandleDragEnd();\n                });\n            }\n\n            // If clicked inside TinyMCE or Modal exit\n            if ($(elm).parents(\".mce-content-body, .tox, .modal-wrapper\").length > 0) {\n                return;\n            }\n\n            // If clicked outside a tile\n            if ($(elm).parents(\".mosaic-tile\").length === 0) {\n                // Check if outside toolbar\n                if ($(elm).parents(\".mosaic-toolbar\").length === 0) {\n                    // Deselect tiles\n                    self.mosaic.document.querySelectorAll(\".mosaic-selected-tile\").forEach(function(el) {\n                        el.classList.remove(\"mosaic-selected-tile\");\n                        $(el).data(\"mosaic-tile\").blur();\n                    });\n\n                    // Set actions\n                    self.mosaic.toolbar.SelectedTileChange();\n                }\n            }\n        };\n\n        // Bind event and add to array\n        $(self.mosaic.document)\n            .off(\"mousedown\")\n            .on(\"mousedown\", DocumentMousedown);\n\n        // Handle mouse move event: when holding down mouse left button and dragging the handler left or right.\n        var DocumentMousemove = function (e) {\n\n            // Find resize helper\n            $(\".mosaic-helper-tile-new\", self.mosaic.document).each(function () {\n                // Get offset\n                var offset = $(this).parent().offset();\n\n                // Get mouse x\n                $(this).css(\"top\", e.pageY + 3 - offset.top);\n                $(this).css(\"left\", e.pageX + 3 - offset.left);\n            });\n\n            // Find resize helper - there is actually only one\n            $(\".mosaic-resize-handle-helper\", self.mosaic.document).each(function () {\n\n                var cur_snap_offset;\n\n                // Get helper\n                var helper = $(this);\n\n                // Get row\n                var row = helper.parent();\n                var resize_handle_index = helper.data(\"resize_handle_index\");\n\n                // Get mouse x\n                var mouse_x = parseFloat(e.pageX - row.offset().left - 4);\n\n                // Get mouse percentage\n                var mouse_percentage = Math.round(\n                    (mouse_x / helper.data(\"row_width\")) * 100\n                );\n\n                // Get closest snap location\n                var snap = 8;\n                var snap_offset = 8;\n\n                var grid_percent = GetGridPercentList();\n\n                grid_percent.forEach(function (perc) {\n                    cur_snap_offset = Math.abs(perc - mouse_percentage);\n                    if (cur_snap_offset < snap_offset) {\n                        snap = perc;\n                        snap_offset = cur_snap_offset;\n                    }\n                });\n\n                var snap_size = GetBootstrapColByPercent(snap);\n\n                var column_sizes = helper.data(\"column_sizes\");\n                var col_size_before = 0;\n                var col_size_after = 0;\n                for (var i = 0; i < column_sizes.length; i++) {\n                    if (i < resize_handle_index) {\n                        col_size_before += column_sizes[i] ? column_sizes[i] : 2;\n                    }\n                    if (i > resize_handle_index) {\n                        col_size_after += column_sizes[i] ? column_sizes[i] : 2;\n                    }\n                }\n                var col_size = snap_size - col_size_before;\n                var col_size_max = 12 - col_size_before - col_size_after;\n                // col_size should not be larger than max size and not less than 1\n                col_size =\n                    col_size > col_size_max ? col_size_max : col_size < 1 ? 1 : col_size;\n\n                if (helper.data(\"nr_of_columns\") > 0) {\n                    var col_size_sum = 0;\n                    var set_resize_handler = false;\n                    var resize_css_classes = self.layout.resizeClasses.join(\" \");\n                    var width_css_classes = self.layout.widthClasses.join(\" \");\n\n                    // Loop through columns\n                    row.children(\".mosaic-resize-placeholder\").each(function (index) {\n                        if (index === resize_handle_index) {\n                            // set new col_size for index\n                            column_sizes[index] = col_size;\n                            var col_size_class = GetWidthClassByColSize(col_size);\n                            $(this)\n                                .removeClass(width_css_classes)\n                                .addClass(col_size_class)\n                                .find(\".info\")\n                                .html(col_size);\n                            set_resize_handler = true;\n                        }\n\n                        // move other resize placeholders accordingly\n                        $(this)\n                            .removeClass(resize_css_classes)\n                            .addClass(`mosaic-resize-${col_size_sum}`);\n\n                        col_size_sum += column_sizes[index];\n\n                        if(set_resize_handler) {\n                            // trick to move handle helper too\n                            $(\".mosaic-resize-handle-helper\", row)\n                                .removeClass(resize_css_classes)\n                                .addClass(`mosaic-resize-${col_size_sum}`);\n                            set_resize_handler = false;\n                        }\n                    });\n\n                    // Set new size\n                    $(this).data(\"column_sizes\", column_sizes);\n                }\n            });\n        };\n\n        // Bind event and add to array\n        $(self.mosaic.document).off(\"mousemove\").on(\"mousemove\", DocumentMousemove);\n        $(self.mosaic.document).off(\"dragover\").on(\"dragover\", DocumentMousemove);\n\n        // Handle mouse up event\n        // When resizing is done on mouse up event apply the changes to the div elements\n        var DocumentMouseup = function () {\n            // Find resize helper\n            $(\".mosaic-resize-handle-helper\", self.mosaic.document).each(function () {\n                var resize_handle_index = $(this).data(\"resize_handle_index\");\n\n                // Cleanup original row\n                $(this).parent().parent().mosaicCleanupRow();\n\n                // Get panel\n                var panel = $(this).parents(\"[data-panel]\");\n\n                // Get column sizes\n                var column_sizes = $(this).data(\"column_sizes\");\n\n                // Set column sizes\n                $(this)\n                    .parent()\n                    .children(\".mosaic-grid-cell\")\n                    .each(function (i) {\n                        $(this)\n                            .removeClass(self.layout.widthClasses.join(\" \"))\n                            .addClass(GetWidthClassByColSize(column_sizes[i]));\n\n                        var can_reset = $(this).hasClass(\"col\");\n                        if (!can_reset && i === resize_handle_index) {\n                            $(this)\n                                .children(\".mosaic-tile\")\n                                .first()\n                                .children(\".mosaic-tile-side-tools\")\n                                .each(function () {\n                                    var $tileSideTools = $(this);\n\n                                    $tileSideTools\n                                        .children(\".mosaic-tile-label.reset\")\n                                        .remove();\n\n                                    $tileSideTools.append(\n                                        $(self.mosaic.document.createElement(\"div\"))\n                                            .addClass(\"mosaic-tile-label reset\")\n                                            .append(\n                                                AddResetAnchor(\n                                                    $tileSideTools,\n                                                    column_sizes[i]\n                                                )\n                                            )\n                                    );\n                                });\n                        }\n                    });\n\n                // Remove resizing state\n                panel.removeClass(\"mosaic-panel-resizing\");\n                $(this).parent().removeClass(\"mosaic-row-resizing\");\n                $(this).parent().children(\".mosaic-resize-placeholder\").remove();\n\n                // Set resize handles\n                $(this).parent().mosaicSetResizeHandles();\n                var $tile = panel.find(\".mosaic-selected-tile\");\n                if ($tile.length > 0) {\n                    $tile.data(\"mosaic-tile\").select();\n                }\n\n                // Remove helper\n                $(this).remove();\n            });\n        };\n\n        // Bind event\n        $(self.mosaic.document).off(\"mouseup\").on(\"mouseup\", DocumentMouseup);\n\n        // Handle mousemove on tile\n        var TileMousemove = function (e) {\n            // only if dragging\n            if ($(this).parents(\"[data-panel]\").hasClass(\"mosaic-panel-dragging\") === false) {\n                return;\n            }\n\n            // Hide all dividers\n            $(\".mosaic-selected-divider\", self.mosaic.document).removeClass(\n                \"mosaic-selected-divider\"\n            );\n\n            // Don't show dividers if above original or floating tile\n            if (\n                $(this).hasClass(\"mosaic-original-tile\") === false &&\n                $(this).hasClass(\"mosaic-tile-align-left\") === false &&\n                $(this).hasClass(\"mosaic-tile-align-right\") === false\n            ) {\n                // Get direction\n                var dir = $(this).mosaicGetDirection(e);\n                var divider = $(this).children(\".mosaic-divider-\" + dir);\n\n                // Check if left or right divider\n                if (dir === \"left\" || dir === \"right\") {\n                    var row = divider.parent().parent().parent();\n                    var cols = row.children(\".mosaic-grid-cell\").filter((idx, el) => {\n                        // filter out original tile to enable moving tiles\n                        // inside row with max-columns tiles\n                        return ($(el).find(\".mosaic-original-tile\").length === 0);\n                    });\n\n                    if (cols.length >= $(\".mosaic-panel\").data(\"max-columns\") ) {\n                        // This row already up to the max amount of columns allowed for this layout\n                        // do not allow new items to be dropped alingside any elements in this row.\n                        return;\n                    }\n\n                    // If row has multiple columns\n                    if (row.children(\".mosaic-grid-cell\").length > 1) {\n                        divider.height(row.height() + 5);\n                        divider.css(\n                            \"top\",\n                            row.offset().top - divider.parent().offset().top - 5\n                        );\n                    } else {\n                        divider.height(divider.parent().height() + 5);\n                        divider.css(\"top\", -5);\n                    }\n                }\n\n                // Show divider\n                divider.addClass(\"mosaic-selected-divider\");\n            }\n        };\n\n        // Bind events\n        $(self.mosaic.document)\n            .off(\"mousemove\", \".mosaic-tile\")\n            .on(\"mousemove\", \".mosaic-tile\", TileMousemove);\n        $(self.mosaic.document)\n            .off(\"dragover\", \".mosaic-tile\")\n            .on(\"dragover\", \".mosaic-tile\", TileMousemove);\n\n        // On click select the current tile\n        $(self.mosaic.document)\n            .off(\"click\", \".mosaic-tile\")\n            .on(\"click\", \".mosaic-tile\", function (e) {\n                if ($(\".mosaic-helper-tile-new\", self.mosaic.document).length === 0) {\n                    // only if not dropping tile\n                    if($(this).data(\"mosaic-tile\")) {\n                        $(this).data(\"mosaic-tile\").select();\n                    }\n                }\n            });\n\n        var applyCustomCss = function (e) {\n            if ($(e.target).attr(\"id\") === \"custom-css-input-box\") {\n                return;\n            }\n            $.each($(\"div.mosaic-set-custom-css\"), function () {\n                var parent = $(this).parent();\n                var base_css = \"mosaic-grid-row\";\n                if (parent.hasClass(\"mosaic-innergrid-row\")) {\n                    base_css = \"mosaic-grid-row mosaic-innergrid-row\";\n                }\n                var classes = $(this).find(\"input#custom-css-input-box\").val();\n                base_css += \" \" + classes;\n                parent.attr(\"class\", base_css);\n                $(this).remove();\n            });\n        };\n\n        var CustomCSSOnDblClick = function (e) {\n            // Only do this for \"mosaic-grid-row\" if advanced mode is enabled\n            var target = $(e.target);\n            var obj = target.parents(\"[data-panel]\");\n            if (obj.hasClass(\"mosaic-advanced\") && target.hasClass(\"mosaic-grid-row\")) {\n                // Check we don't have an input field already\n                if ($(target).find(\".mosaic-set-custom-css\").length > 0) {\n                    return;\n                }\n\n                // We are in advance mode\n                var custom_classes = [];\n                $.each(target.attr(\"class\").split(\" \"), function () {\n                    if (\n                        this !== undefined &&\n                        this !== \"mosaic-grid-row\" &&\n                        this !== \"mosaic-innergrid-row\"\n                    ) {\n                        custom_classes.push(this);\n                    }\n                });\n                var input = $(\"<input type='text' id='custom-css-input-box'></input>\").val(\n                    custom_classes.join(\" \")\n                );\n                var div = $(\"<div></div>\")\n                    .addClass(\"mosaic-set-custom-css\")\n                    .append($(\"<label>Custom CSS for this row:</label>\"))\n                    .append(input);\n                target.append(div);\n            }\n        };\n\n        $(self.mosaic.document).on(\"dblclick\", \".mosaic-grid-row\", CustomCSSOnDblClick);\n        $(self.mosaic.document).on(\"click\", applyCustomCss);\n    }\n\n    initialize_panels() {\n        var self = this;\n\n        self.initJQueryHelpers();\n        self.init_events();\n\n        // Loop through matched elements\n        var total = self.mosaic.panels.length;\n\n        for(var i=0; i < total; i++) {\n            // Get current object\n            var obj = $(self.mosaic.panels[i]);\n\n            // Add icons and dividers\n            obj.find(\".mosaic-tile\").each(async function () {\n                var tile = new Tile(self.mosaic, this)\n                await tile.initialize();\n            });\n            obj.find(\".mosaic-tile\").mosaicAddDrag();\n            obj.mosaicAddEmptyRows();\n            obj.children(\".mosaic-grid-row\").mosaicSetResizeHandles();\n            if (i === total - 1) {\n                // Get biggest panel\n                var width = 0;\n                var index = 0;\n                self.mosaic.panels.each(function (j) {\n                    if ($(this).width() > width) {\n                        width = $(this).width();\n                        index = j;\n                    }\n                });\n\n                // Select first tile in biggest panel\n                var $tile = self.mosaic.panels.eq(index).find(\".mosaic-tile:first\");\n                if ($tile.length > 0) {\n                    $tile.data(\"mosaic-tile\").select();\n                }\n            }\n\n            obj.find(\".mosaic-innergrid-row\").each(function () {\n                $(this).mosaicAddMouseMoveInnergridRow();\n                $(this).mosaicSetResizeHandles();\n                var that = $(this);\n                [\"top\", \"bottom\"].forEach(function (pos, idx) {\n                    that.append(\n                        $(self.mosaic.document.createElement(\"div\"))\n                            .addClass(\"mosaic-divider mosaic-divider-\" + pos)\n                    );\n                });\n            });\n        };\n    }\n\n    initJQueryHelpers() {\n\n        var self = this;\n        var mosaic_doc = self.mosaic.document;\n\n        $.fn.mosaicAddMouseMoveEmptyRow = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Mouse move event\n                $(this).on(\"mousemove\", function (/* e */) {\n                    // Get layout object\n                    var obj = $(this).parents(\"[data-panel]\");\n\n                    // Check if dragging\n                    if (obj.hasClass(\"mosaic-panel-dragging\")) {\n                        // Hide all dividers\n                        $(\".mosaic-selected-divider\", mosaic_doc).removeClass(\n                            \"mosaic-selected-divider\"\n                        );\n                        $(this).children(\"div\").addClass(\"mosaic-selected-divider\");\n                    }\n                });\n            });\n        };\n\n        /**\n         * Add mouse move handler to inner grid rows\n         *\n         * @id jQuery.mosaicAddMouseMoveInnergridRow\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicAddMouseMoveInnergridRow = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Mouse move event\n                $(this).mousemove(function (e) {\n                    // Get layout object\n                    var obj = $(this).parents(\"[data-panel]\");\n\n                    // Check if dragging\n                    if (obj.hasClass(\"mosaic-panel-dragging\")) {\n                        // Hide all dividers\n                        $(\".mosaic-selected-divider\", mosaic_doc).removeClass(\n                            \"mosaic-selected-divider\"\n                        );\n\n                        // Get direction\n                        var dir = $(this).mosaicGetDirection(e);\n                        var divider = $(this).children(\".mosaic-divider-\" + dir);\n\n                        // Show divider\n                        divider.addClass(\"mosaic-selected-divider\");\n                    }\n                });\n            });\n        };\n\n        /**\n         * Add empty rows\n         *\n         * @id jQuery.mosaicAddEmptyRows\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicAddEmptyRows = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Loop through rows\n                $(this)\n                    .find(\".mosaic-grid-row:not(.mosaic-innergrid-row)\")\n                    .each(function () {\n                        $(this).before(\n                            $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\"mosaic-grid-row mosaic-empty-row\")\n                                .append(\n                                    $(mosaic_doc.createElement(\"div\"))\n                                        .addClass(\"mosaic-grid-cell col\")\n                                        .append(\n                                            $(mosaic_doc.createElement(\"div\")).append(\n                                                $(mosaic_doc.createElement(\"div\"))\n                                                    .addClass(\"mosaic-tile-outer-border\")\n                                            )\n                                        )\n                                )\n                                .mosaicAddMouseMoveEmptyRow()\n                        );\n                        if ($(this).nextAll(\".mosaic-grid-row\").length === 0) {\n                            $(this).after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-row mosaic-empty-row\")\n                                    .append(\n                                        $(mosaic_doc.createElement(\"div\"))\n                                            .addClass(\"mosaic-grid-cell col\")\n                                            .append(\n                                                $(mosaic_doc.createElement(\"div\")).append(\n                                                    $(mosaic_doc.createElement(\"div\"))\n                                                        .addClass(\"mosaic-tile-outer-border\")\n                                                )\n                                            )\n                                    )\n                                    .mosaicAddMouseMoveEmptyRow()\n                            );\n                        }\n                    });\n\n                if ($(this).find(\".mosaic-grid-row:not(.mosaic-innergrid-row)\").length === 0) {\n                    $(this).append(\n                        $(mosaic_doc.createElement(\"div\"))\n                            .addClass(\"mosaic-grid-row mosaic-empty-row\")\n                            .append(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell col\")\n                                    .append(\n                                        $(mosaic_doc.createElement(\"div\")).append(\n                                            $(mosaic_doc.createElement(\"div\"))\n                                                .addClass(\"mosaic-tile-outer-border\")\n                                        )\n                                    )\n                            )\n                            .mosaicAddMouseMoveEmptyRow()\n                    );\n                }\n            });\n        };\n\n        /**\n         * Add draggable to matched elements\n         *\n         * @id jQuery.mosaicAddDrag\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicAddDrag = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                var tile = $(this);\n\n                var DragMove = function (event) {\n                    var helper = $(\".mosaic-helper-tile\", mosaic_doc);\n                    var offset = helper.parents(\"[data-panel]\").offset();\n                    if(offset) {\n                        helper.css(\"top\", event.pageY + 3 - offset.top);\n                        helper.css(\"left\", event.pageX + 3 - offset.left);\n                    }\n                };\n\n                var DragStop = function () {\n                    var helper = $(\".mosaic-helper-tile\", mosaic_doc);\n                    $(mosaic_doc)\n                        .off(\"mousemove\", DragMove)\n                        .off(\"mouseup\", DragStop);\n\n                    // Handle drag end\n                    helper.mosaicHandleDragEnd();\n                    helper.remove();\n                };\n\n                return tile.each(function () {\n                    tile.find(\"div.mosaic-drag-handle\")\n                        .off(\"mousedown\")\n                        .on(\"mousedown\", function (event) {\n                            var downX = event.pageX;\n                            var downY = event.pageY;\n                            var DragCheckMove = function (event) {\n                                if (\n                                    Math.max(\n                                        Math.abs(downX - event.pageX),\n                                        Math.abs(downY - event.pageY)\n                                    ) >= 1\n                                ) {\n                                    // Add dragging class to content area\n                                    self.mosaic.panels.addClass(\"mosaic-panel-dragging\");\n                                    $(\".mosaic-selected-tile\", mosaic_doc)\n                                        .removeClass(\"mosaic-selected-tile\")\n                                        .children(\".mosaic-tile-content\")\n                                        .trigger(\"blur\");\n\n                                    var originaltile = $(event.target).parents(\".mosaic-tile\");\n                                    originaltile.addClass(\"mosaic-original-tile\");\n\n                                    var clone = originaltile.clone(true);\n                                    clone.css({\n                                            \"width\": originaltile.width(),\n                                            \"max-height\": \"50%\",\n                                            \"position\": \"absolute\",\n                                            \"opacity\": 0.5,\n                                        })\n                                        .addClass(\"mosaic-helper-tile\");\n                                    originaltile.parents(\"[data-panel]\").append(clone);\n\n                                    $(mosaic_doc).on(\"mousemove\", DragMove);\n                                    $(mosaic_doc).on(\"mouseup\", DragStop);\n                                    $(mosaic_doc).off(\"mousemove\", DragCheckMove);\n                                }\n                            };\n                            $(mosaic_doc).on(\"mousemove\", DragCheckMove);\n                            $(mosaic_doc).on(\"mouseup\", function () {\n                                $(mosaic_doc).off(\"mousemove\", DragCheckMove);\n                            });\n                        });\n                });\n            });\n        };\n\n        /**\n         * Event handler for drag end - add new tile\n         *\n         * @id jQuery.mosaicHandleDragEnd\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicHandleDragEnd = function () {\n            // Get layout object\n            var obj = $(this).parents(\"[data-panel]\");\n\n            // Remove dragging class from content\n            self.mosaic.panels.removeClass(\n                \"mosaic-panel-dragging mosaic-panel-dragging-new\"\n            );\n\n            // Get direction\n            var divider = $(\".mosaic-selected-divider\", mosaic_doc);\n            var drop = divider.parent();\n            var dir = \"\";\n            for(const _dir of [\"top\", \"bottom\", \"left\", \"right\"]) {\n                if (divider.hasClass(\"mosaic-divider-\" + _dir)) {\n                    dir = _dir;\n                }\n            };\n            divider.removeClass(\"mosaic-selected-divider\");\n\n            // True if new tile is inserted\n            var new_tile = $(\".mosaic-helper-tile-new\", mosaic_doc).length > 0;\n            var original_tile = $(\".mosaic-original-tile\", mosaic_doc);\n            // get original row here, because tile might be moved\n            var original_row = original_tile.closest(\".mosaic-grid-row\");\n\n            // If divider is not found or not sane drop, act like esc is pressed\n            if (divider.length === 0 || drop.hasClass(\"mosaic-helper-tile\")) {\n                original_tile.addClass(\"mosaic-drag-cancel\");\n            }\n\n            const fixup_classes = (_t) => {\n                _t.removeClass(\"mosaic-drag-cancel\");\n                _t.removeClass(\"mosaic-original-tile mosaic-helper-tile mosaic-helper-tile-new mosaic-tile-align-right mosaic-tile-align-left\");\n                _t.css({ width: \"\", left: \"\", top: \"\" });\n                if(!new_tile) {\n                    _t.addClass(\"mosaic-new-tile\");\n                }\n            }\n\n            if (\n                // Check if esc is pressed\n                original_tile.hasClass(\"mosaic-drag-cancel\") ||\n\n                // Not dropped on tile and empty row\n                (drop.hasClass(\"mosaic-tile\") === false &&\n                 drop.hasClass(\"mosaic-innergrid-row\") === false &&\n                 drop.hasClass(\"mosaic-empty-row\") === false) ||\n\n                // Check if max columns rows is reached\n                (drop.parent().parent().children(\".mosaic-grid-cell\").length >=\n                 obj.data(\"max-columns\") &&\n                 (dir === \"left\" || dir === \"right\"))\n            ) {\n                fixup_classes(original_tile);\n\n            // Dropped on empty row\n            } else if (drop.hasClass(\"mosaic-empty-row\")) {\n                // Replace empty with normal row class\n                drop.removeClass(\"mosaic-empty-row\")\n                    .attr(\n                        \"class\",\n                        original_tile.parents(\".mosaic-grid-row\").first().attr(\"class\")\n                    )\n                    .off(\"mousemove\");\n\n                // Clean cell\n                drop.children(\".mosaic-grid-cell\").children(\"div\").remove();\n\n                fixup_classes(original_tile);\n\n                // Add tile to empty row\n                drop.children(\".mosaic-grid-cell\").append(original_tile);\n\n            // Dropped on row or below an inner grid\n            } else {\n                /* When the layout object has the special class (Assigned in line 82), wrap\n                the tile in a div.mosaic-grid-cell so it would create an inner column */\n                fixup_classes(original_tile);\n\n                if (obj.hasClass(\"inner-subcolumn\")) {\n                    var original_tile = $(mosaic_doc.createElement(\"div\"))\n                        .addClass(\"mosaic-grid-row mosaic-innergrid-row\")\n                        .append(\n                            $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\"mosaic-grid-cell col\")\n                                .append(\n                                    $(mosaic_doc.createElement(\"div\")).append(\n                                        $(mosaic_doc.createElement(\"div\")).addClass(\n                                            \"mosaic-innergrid-outer-border\"\n                                        )\n                                    )\n                                )\n                                .append(original_tile)\n                        )\n                        .mosaicAddMouseMoveInnergridRow();\n                    for(const pos of [\"top\", \"bottom\"]) {\n                        original_tile.append(\n                            $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\"mosaic-divider mosaic-divider-\" + pos)\n                        );\n                    };\n                }\n\n                // If top\n                if (dir === \"top\") {\n                    // Add tile before\n                    drop.before(original_tile);\n\n                // If bottom\n                } else if (dir === \"bottom\") {\n                    // Add tile after\n                    drop.after(original_tile);\n\n                // If left\n                } else if (dir === \"left\" || dir === \"right\") {\n                    var _col = drop.parent();\n                    var _row = _col.parent();\n                    var _children_count = _row.children(\".mosaic-grid-cell\").length;\n\n                    // Check if only 1 column in the row\n                    if (_children_count.length === 1) {\n                        // Put tiles above dropped tile in a new row above\n                        var prev_elms = drop.prevAll();\n                        if (prev_elms.length > 0) {\n                            _row.before(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-row\")\n                                    .append(\n                                        $(mosaic_doc.createElement(\"div\"))\n                                            .addClass(\"mosaic-grid-cell col\")\n                                            .append(\n                                                $(prev_elms.get().reverse())\n                                                    .clone(true)\n                                                    .mosaicAddDrag()\n                                            )\n                                    )\n                                );\n                            prev_elms.remove();\n                        }\n\n                        // Put tiles below dropped tile in a new row below\n                        var next_elms = drop.nextAll();\n                        if (next_elms.length > 0) {\n                            _row.after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-row\")\n                                    .append(\n                                        $(mosaic_doc.createElement(\"div\"))\n                                            .addClass(\"mosaic-grid-cell col\")\n                                            .append(next_elms.clone(true).mosaicAddDrag())\n                                    )\n                            );\n                            next_elms.remove();\n                        }\n\n                        // Resize current column\n                        _col.removeClass(self.layout.widthClasses.join(\" \"))\n                            .addClass(\"col\");\n\n                        // Create column with dragged tile in it\n                        if (dir === \"left\") {\n                            drop.parent().before(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell col\")\n                                    .append(original_tile)\n                            );\n                        } else {\n                            drop.parent().after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell col\")\n                                    .append(original_tile)\n                            );\n                        }\n\n                        // Add resize handles\n                        _row.mosaicSetResizeHandles();\n\n                    // Dropped inside column\n                    } else {\n\n                        // Create new column\n                        if (dir === \"left\") {\n                            _col.before(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell\")\n                                    .append(original_tile)\n                            );\n                        } else {\n                            _col.after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell\")\n                                    .append(original_tile)\n                            );\n                        }\n\n                        // Resize columns\n                        _row.mosaicSetColumnSizes();\n\n                        // Add resize handles\n                        _row.mosaicSetResizeHandles();\n                    }\n                }\n            }\n\n            // Remove remaining empty rows\n            self.mosaic.panels.find(\".mosaic-grid-row:not(:has(.mosaic-tile))\").remove();\n            self.mosaic.panels.find(\".mosaic-empty-row\").remove();\n\n            // Cleanup original row\n            original_row.mosaicCleanupRow();\n\n            // Add empty rows\n            self.mosaic.panels.mosaicAddEmptyRows();\n\n            // Select new tile and make it draggables\n            if (new_tile && original_tile.length > 0) {\n                original_tile.mosaicAddDrag();\n                original_tile.data(\"mosaic-tile\").initializeContent();\n                original_tile.data(\"mosaic-tile\").focus();\n            }\n        };\n\n        /**\n         * Set the sizes of the column\n         *\n         * @id jQuery.mosaicSetColumnSizes\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicSetColumnSizes = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Resize columns in the row\n                var column_sizes = [];\n                var $gridCells = $(this).children(\".mosaic-grid-cell\")\n                var nr_of_columns = $gridCells.length;\n                var width_css_classes = self.layout.widthClasses.join(\" \");\n\n                // This will reset the width classes - it will automatically set the widths\n\n                $gridCells\n                    .each(function (idx) {\n                        $(this).removeClass(width_css_classes);\n\n                        var col_size = Math.floor(12 / nr_of_columns);\n                        var col_size_last = 12 - col_size * (nr_of_columns - 1);\n\n                        for (var j = 0; j < nr_of_columns; j++) {\n                            if (j === nr_of_columns - 1) {\n                                col_size = col_size_last;\n                            }\n                            if (idx === j) {\n                                column_sizes.push(col_size);\n                                $(this).addClass(\"col\");\n                            }\n                        }\n                    });\n\n                $(this).data(\"column_sizes\", column_sizes);\n            });\n        };\n\n        /**\n         * Add new resize handlers\n         *\n         * @id jQuery.mosaicSetResizeHandles\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicSetResizeHandles = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Remove resize handles\n                $(this).children(\".mosaic-resize-handle\").remove();\n\n                // Check number of columns\n                var grid_cells = $(this).children(\".mosaic-grid-cell\")\n                var nr_of_columns = grid_cells.length;\n\n                if (nr_of_columns <= 12) {\n                    var column_sizes = [];\n                    var zero_count = 0;\n                    var col_sum = 0;\n\n                    for (let i = 0; i < nr_of_columns; i++) {\n                        var col_size = GetColSizeByColClass(\n                            self.getWidthClass(grid_cells[i])\n                        );\n                        column_sizes.push(col_size);\n                        col_sum = col_sum + col_size;\n                        if (col_size === 0) {\n                            zero_count = zero_count + 1;\n                        }\n                    }\n\n                    var zero_col = 0;\n                    if (zero_count) {\n                        zero_col = (12 - col_sum) / zero_count;\n                    }\n\n                    var resize_col_size = 0;\n                    col_size = 0;\n\n                    for (let i = 0; i < nr_of_columns; i++) {\n                        col_size = column_sizes[i] ? column_sizes[i] : zero_col;\n                        resize_col_size = resize_col_size + col_size;\n\n                        $(this).append(\n                            $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\n                                    `mosaic-resize-handle mosaic-resize-handle-${(i + 1)}`\n                                    + ` mosaic-resize-${resize_col_size}`\n                                )\n                                .data(\"resize_handle_index\", i)\n                        );\n\n                        // set counted size to cell data\n                        $(grid_cells[i]).data(\"col_size\", col_size);\n                    }\n                }\n\n                // Mouse down handler on resize handle\n                $(this)\n                    .children(\".mosaic-resize-handle\")\n                    .off(\"mousedown\")\n                    .on(\"mousedown\", function (/* e */) {\n                        var $currRow = $(this).parent();\n                        var $mosaicGridCellChildren = $currRow.children(\".mosaic-grid-cell\");\n                        var nr_of_columns = $mosaicGridCellChildren.length;\n\n                        if(nr_of_columns > 12) {\n                            return;\n                        }\n                        var col_size_sum = 0;\n                        var column_sizes = [];\n\n                        $mosaicGridCellChildren.each(function (index) {\n                            var col_size = $(this).data(\"col_size\"); // get computed size of the column\n                            column_sizes.push(col_size);\n\n                            var placeholder = $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\n                                    `mosaic-resize-placeholder col-${col_size} mosaic-resize-${col_size_sum}`\n                                )\n                                .append(\n                                    $(mosaic_doc.createElement(\"div\"))\n                                        .addClass(\n                                            \"mosaic-resize-placeholder-inner-border\"\n                                        )\n                                        .append(\n                                            $(mosaic_doc.createElement(\"div\"))\n                                                .addClass(\"info\")\n                                                .html(col_size)\n                                        )\n                                );\n\n                            // Add placeholder\n                            $currRow.append(placeholder);\n\n                            // summarize column sizes for placeholder classes\n                            col_size_sum += col_size;\n                        });\n\n                        // Get resize handle index\n                        var resize_handle_index = self.getResizeHandleClassId(this);\n\n                        // Add helper\n                        $currRow\n                            .append(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-resize-handle mosaic-resize-handle-helper\")\n                                    .addClass(`mosaic-resize-${column_sizes[resize_handle_index]}`)\n                                    .data(\"row_width\", $currRow.width())\n                                    .data(\"nr_of_columns\", nr_of_columns)\n                                    .data(\"column_sizes\", column_sizes)\n                                    .data(\"resize_handle_index\", resize_handle_index)\n                            );\n\n                        // Set resizing state\n                        $(this).parents(\"[data-panel]\").addClass(\"mosaic-panel-resizing\");\n                        $currRow.addClass(\"mosaic-row-resizing\");\n                        $(\".mosaic-selected-tile\", mosaic_doc)\n                            .children(\".mosaic-tile-content\")\n                            .trigger(\"blur\");\n\n                        // Prevent drag event\n                        return false;\n                    });\n            });\n        };\n\n        /**\n         * Cleanup row after tiles added or removed from the row\n         *\n         * @id jQuery.mosaicCleanupRow\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicCleanupRow = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Get original row\n                var original_row = $(this);\n\n                // Remove empty columns\n                original_row.children(\".mosaic-grid-cell\").each(function () {\n                    if ($(this).children().length === 0) {\n                        $(this).remove();\n\n                        // Resize columns\n                        original_row.mosaicSetColumnSizes();\n                    }\n                });\n\n                // Remove row if no tiles inside\n                if (original_row.find(\".mosaic-tile\").length === 0) {\n                    var del_row = original_row;\n\n                    // Check if next row available\n                    if (original_row.nextAll(\".mosaic-grid-row\").length > 0) {\n                        original_row = original_row.next(\".mosaic-grid-row\");\n\n                        // Check if prev row available\n                    } else if (original_row.prevAll(\".mosaic-grid-row\").length > 0) {\n                        original_row = original_row.prev(\".mosaic-grid-row\");\n\n                        // This is the last row\n                    } else {\n                        original_row.remove();\n                        return;\n                    }\n\n                    // Remove current row\n                    del_row.remove();\n                }\n\n                // Set resize handles\n                original_row.mosaicSetResizeHandles();\n            });\n        };\n\n        /**\n         * Get the direction based on the tile size and relative x and y coords of the cursor\n         *\n         * @id jQuery.mosaicGetDirection\n         * @param {Object} e Event object\n         * @return {String} Direction of the cursor relative to the tile\n         */\n        $.fn.mosaicGetDirection = function (e) {\n            // Calculate x, y, width and height\n            var width = parseFloat($(this).width());\n            var height = parseFloat($(this).height());\n            var x = parseFloat(e.pageX - $(this).offset().left - width / 2);\n            var y = parseFloat(e.pageY - $(this).offset().top - height / 2);\n            var halfwidth = width / 2;\n            var halfheight = height / 2;\n\n            // If left of center\n            if (x < 0) {\n                // If above center\n                if (y < 0) {\n                    if (x / y < (-1 * halfwidth) / (-1 * halfheight)) {\n                        return \"top\";\n                    } else {\n                        return \"left\";\n                    }\n                    // Below center\n                } else {\n                    if (x / y < (-1 * halfwidth) / halfheight) {\n                        return \"left\";\n                    } else {\n                        return \"bottom\";\n                    }\n                }\n\n                // Right of center\n            } else {\n                // If above center\n                if (y < 0) {\n                    if (x / y < (1 * halfwidth) / (-1 * halfheight)) {\n                        return \"right\";\n                    } else {\n                        return \"top\";\n                    }\n                    // Below center\n                } else {\n                    if (x / y < halfwidth / halfheight) {\n                        return \"bottom\";\n                    } else {\n                        return \"right\";\n                    }\n                }\n            }\n        };\n    }\n}\n\n\nvar AddResetAnchor = function ($tileSideTools, cols) {\n    var reset = document.createElement(\"a\");\n    var cols_str = typeof cols === \"undefined\" ? \"\" : \" (\" + cols + \")\";\n    reset.href = \"javascript:\";\n    reset.textContent = \"Reset\" + cols_str;\n    $(reset).on(\"click\", { el: $tileSideTools }, function (e) {\n        e.preventDefault();\n\n        e.data.el\n            .parent()\n            .parent()\n            .removeClass(\n                \"col-1 col-2 col-3 col-4 col-5 col-6 col-7 col-8 col-9 col-10 col-11 col-12\"\n            )\n            .addClass(\"col\");\n\n        e.data.el.parent().parent().parent().mosaicSetResizeHandles();\n\n        $(e.target).parent().remove();\n    });\n    return reset;\n};\n\n/**\n * Get a list of percentage steps for each column in the grid\n *\n * @id GetGridPercentList\n * @return {Array} List of percent steps of the width class\n */\nfunction GetGridPercentList() {\n    var low = 0,\n        high = 100,\n        grid = 12,\n        grid_percent = [];\n    var step = 100 / grid;\n    var a = low,\n        b = high - 1; /* fix the last step in the loop: -1 */\n    while (a < b) {\n        grid_percent.push(Math.round((a += step)));\n    }\n\n    return grid_percent;\n}\n\n/**\n * Get the name of the width class of the given integer\n *\n * @id GetWidthClassByColSize\n * @param {Integer} col_size Bootstrap col width id\n * @return {String} Classname of the width class of the given integer\n */\nfunction GetWidthClassByColSize(col_size) {\n    if (col_size) {\n        return \"col-\" + col_size;\n    }\n\n    // Fallback\n    return \"col\";\n}\n\n/**\n * Get the name of the position class of the given integer\n *\n * @id GetColSizeByColClass\n * @param {String} Classname of the position class\n * @return {Integer} col_size Bootstrap col width id\n */\nfunction GetColSizeByColClass(col_class, prefix) {\n    prefix = prefix || \"col-\";\n    return parseInt(col_class.replace(prefix, \"\")) || 0;\n}\n\n/**\n * Get the bootstrap col width id by width size\n *\n * @id GetBootstrapColByPercent\n * @param {Integer} width Percentage of the column position\n * @return {Integer} Bootstrap col width id of the given integer\n */\nfunction GetBootstrapColByPercent(width) {\n    var grid_percent = GetGridPercentList();\n\n    for (let idx=0; idx < grid_percent.length; idx++) {\n        if (width === grid_percent[idx]) {\n            return idx + 1;\n        }\n    }\n\n    // Fallback\n    return 12;\n}\n"],"names":["logging","LayoutManager","constructor","mosaic","widthClasses","resizeClasses","resizeHandleClasses","this","getWidthClass","e","cls","layout","$","hasClass","getResizeHandleClassId","idx","length","addAppTile","type","url","self","overlay","modal","$modal","hide","success","async","value","getDomTreeFromHtml","addHeadTags","addTile","find","html","response","editAppTile","close","window","parent","focus","removeHeadTags","$tile","document","attr","replace","tileUrl","panels","addClass","get","append","createElement","helper","width","each","tile","Tile","initialize","cacheHtml","scanRegistry","getDefaultValue","tile_config","start","end","name","tile_type","widget","id","val","label","default_value","getPageContent","exportLayout","content","getLayoutRow","obj","body","classNames","children","data","getHtmlBody","options","saveLayoutToForm","$customLayout","hasContentLayout","init_events","off","on","keyCode","querySelectorAll","blur","focused_tile","activeElement","closest","removeClass","date","Date","getTime","original_tile","trigger","parents","remove","enabled","elm","target","srcElement","new_tile","mosaicHandleDragEnd","forEach","el","classList","toolbar","SelectedTileChange","DocumentMousemove","offset","css","pageY","top","pageX","left","cur_snap_offset","row","resize_handle_index","mouse_x","parseFloat","mouse_percentage","Math","round","snap","snap_offset","GetGridPercentList","perc","abs","snap_size","grid_percent","GetBootstrapColByPercent","column_sizes","col_size_before","col_size_after","i","col_size","col_size_max","col_size_sum","set_resize_handler","resize_css_classes","join","width_css_classes","index","col_size_class","GetWidthClassByColSize","mosaicCleanupRow","panel","first","$tileSideTools","AddResetAnchor","mosaicSetResizeHandles","select","TileMousemove","dir","mosaicGetDirection","divider","filter","height","custom_classes","split","undefined","push","input","div","base_css","initialize_panels","initJQueryHelpers","total","mosaicAddDrag","mosaicAddEmptyRows","j","eq","mosaicAddMouseMoveInnergridRow","that","pos","mosaic_doc","mousemove","before","mosaicAddMouseMoveEmptyRow","nextAll","after","DragMove","event","DragStop","downX","downY","DragCheckMove","max","originaltile","clone","drop","_dir","original_row","fixup_classes","_t","_col","_row","prev_elms","prevAll","reverse","next_elms","mosaicSetColumnSizes","initializeContent","$gridCells","nr_of_columns","floor","col_size_last","grid_cells","zero_count","col_sum","GetColSizeByColClass","zero_col","resize_col_size","$currRow","$mosaicGridCellChildren","placeholder","del_row","next","prev","x","y","halfwidth","halfheight","cols","reset","cols_str","href","textContent","preventDefault","a","high","col_class","prefix","parseInt"],"sourceRoot":""}